From 3ca1835428fdbc4a230702caae8d4a27b7fe6563 Mon Sep 17 00:00:00 2001
From: Ganesh K <ganesh.k@phytec.in>
Date: Mon, 24 Jun 2019 15:11:32 +0530
Subject: [PATCH 3/3] deleted all examples

---
 examples/CMakeLists.txt                         | 132 --------
 examples/c++/CMakeLists.txt                     |  20 --
 examples/c++/a110x-intr.cxx                     |  79 -----
 examples/c++/a110x.cxx                          |  67 ----
 examples/c++/abp.cxx                            |  62 ----
 examples/c++/ad8232.cxx                         |  66 ----
 examples/c++/adafruitms1438-stepper.cxx         |  77 -----
 examples/c++/adafruitms1438.cxx                 |  72 -----
 examples/c++/adafruitss.cxx                     |  78 -----
 examples/c++/adc121c021.cxx                     |  65 ----
 examples/c++/adis16448.cxx                      |  67 ----
 examples/c++/ads1x15-adc-sensor.cxx             |  71 -----
 examples/c++/ads1x15-ads1015.cxx                | 106 ------
 examples/c++/ads1x15-ads1115.cxx                | 109 -------
 examples/c++/ads1x15.cxx                        | 327 -------------------
 examples/c++/adxl335.cxx                        |  79 -----
 examples/c++/adxl345.cxx                        |  53 ---
 examples/c++/adxrs610.cxx                       |  72 -----
 examples/c++/am2315.cxx                         |  70 ----
 examples/c++/apa102.cxx                         |  47 ---
 examples/c++/apds9002.cxx                       |  62 ----
 examples/c++/apds9930.cxx                       |  74 -----
 examples/c++/at42qt1070.cxx                     |  89 ------
 examples/c++/bh1749.cxx                         |  71 -----
 examples/c++/bh1750.cxx                         |  66 ----
 examples/c++/bh1792.cxx                         |  81 -----
 examples/c++/biss0001.cxx                       |  68 ----
 examples/c++/bma220.cxx                         |  69 ----
 examples/c++/bma250e.cxx                        |  77 -----
 examples/c++/bmg160.cxx                         |  77 -----
 examples/c++/bmi160.cxx                         |  78 -----
 examples/c++/bmm150.cxx                         |  73 -----
 examples/c++/bmp280-bme280.cxx                  |  75 -----
 examples/c++/bmp280.cxx                         |  76 -----
 examples/c++/bmpx8x.cxx                         |  73 -----
 examples/c++/bmx055-bmc150.cxx                  |  73 -----
 examples/c++/bmx055-bmi055.cxx                  |  73 -----
 examples/c++/bmx055.cxx                         |  76 -----
 examples/c++/bno055.cxx                         | 103 ------
 examples/c++/button.cxx                         |  49 ---
 examples/c++/buzzer.cxx                         |  53 ---
 examples/c++/cjq4435.cxx                        |  75 -----
 examples/c++/collision.cxx                      |  66 ----
 examples/c++/curieimu.cxx                       |  74 -----
 examples/c++/cwlsxxa.cxx                        |  78 -----
 examples/c++/dfrec.cxx                          |  74 -----
 examples/c++/dfrorp.cxx                         |  84 -----
 examples/c++/dfrph.cxx                          |  76 -----
 examples/c++/ds1307.cxx                         |  75 -----
 examples/c++/ds1808lc.cxx                       |  41 ---
 examples/c++/ds18b20.cxx                        |  82 -----
 examples/c++/ds2413.cxx                         |  58 ----
 examples/c++/e50hx.cxx                          | 105 ------
 examples/c++/ecezo.cxx                          |  72 -----
 examples/c++/ecs1030.cxx                        |  60 ----
 examples/c++/ehr.cxx                            |  78 -----
 examples/c++/eldriver.cxx                       |  67 ----
 examples/c++/electromagnet.cxx                  |  81 -----
 examples/c++/emg.cxx                            |  61 ----
 examples/c++/enc03r.cxx                         |  77 -----
 examples/c++/flex.cxx                           |  67 ----
 examples/c++/gas-mq2.cxx                        |  77 -----
 examples/c++/gas-mq3.cxx                        |  77 -----
 examples/c++/gas-mq4.cxx                        |  78 -----
 examples/c++/gas-mq5.cxx                        |  72 -----
 examples/c++/gas-mq6.cxx                        |  78 -----
 examples/c++/gas-mq7.cxx                        |  78 -----
 examples/c++/gas-mq8.cxx                        |  78 -----
 examples/c++/gas-mq9.cxx                        |  72 -----
 examples/c++/gas-tp401.cxx                      |  77 -----
 examples/c++/gp2y0a.cxx                         |  73 -----
 examples/c++/gprs.cxx                           | 102 ------
 examples/c++/grove-grovebutton.cxx              |  50 ---
 examples/c++/grove-groveled-multi.cxx           |  68 ----
 examples/c++/grove-groveled.cxx                 |  56 ----
 examples/c++/grove-grovelight.cxx               |  50 ---
 examples/c++/grove-groverelay.cxx               |  59 ----
 examples/c++/grove-groverotary.cxx              |  67 ----
 examples/c++/grove-groveslide.cxx               |  52 ---
 examples/c++/grove-grovetemp.cxx                |  55 ----
 examples/c++/grovecollision.cxx                 |  66 ----
 examples/c++/groveehr.cxx                       |  78 -----
 examples/c++/groveeldriver.cxx                  |  67 ----
 examples/c++/groveelectromagnet.cxx             |  81 -----
 examples/c++/groveemg.cxx                       |  61 ----
 examples/c++/grovegprs.cxx                      | 102 ------
 examples/c++/grovegsr.cxx                       |  64 ----
 examples/c++/grovelinefinder.cxx                |  66 ----
 examples/c++/grovemd-stepper.cxx                |  65 ----
 examples/c++/grovemd.cxx                        |  59 ----
 examples/c++/grovemoisture.cxx                  |  75 -----
 examples/c++/groveo2.cxx                        |  58 ----
 examples/c++/grovescam.cxx                      |  73 -----
 examples/c++/grovespeaker.cxx                   |  48 ---
 examples/c++/groveultrasonic.cxx                |  59 ----
 examples/c++/grovevdiv.cxx                      |  67 ----
 examples/c++/grovewater.cxx                     |  65 ----
 examples/c++/grovewfs.cxx                       |  78 -----
 examples/c++/gsr.cxx                            |  64 ----
 examples/c++/guvas12d.cxx                       |  71 -----
 examples/c++/h3lis331dl.cxx                     |  79 -----
 examples/c++/h803x.cxx                          | 121 -------
 examples/c++/hcsr04.cxx                         |  60 ----
 examples/c++/hdc1000.cxx                        |  67 ----
 examples/c++/hdxxvxta.cxx                       |  76 -----
 examples/c++/hka5.cxx                           |  73 -----
 examples/c++/hlg150h.cxx                        |  43 ---
 examples/c++/hm11.cxx                           | 116 -------
 examples/c++/hmc5883l.cxx                       |  52 ---
 examples/c++/hmtrp.cxx                          | 153 ---------
 examples/c++/hp20x.cxx                          |  72 -----
 examples/c++/ht9170.cxx                         |  71 -----
 examples/c++/htu21d.cxx                         |  72 -----
 examples/c++/hwxpxx.cxx                         |  97 ------
 examples/c++/hx711.cxx                          |  45 ---
 examples/c++/ili9341.cxx                        |  84 -----
 examples/c++/ims.cxx                            |  70 ----
 examples/c++/ina132.cxx                         |  62 ----
 examples/c++/interfaces-humiditysensor.cxx      |  88 -----
 examples/c++/interfaces-lightcontroller.cxx     |  98 ------
 examples/c++/interfaces-lightsensor.cxx         |  84 -----
 examples/c++/interfaces-pressuresensor.cxx      |  85 -----
 examples/c++/interfaces-temperaturesensor.cxx   |  96 ------
 examples/c++/isd1820.cxx                        |  80 -----
 examples/c++/itg3200.cxx                        |  53 ---
 examples/c++/jhd1313m1-lcd.cxx                  |  72 -----
 examples/c++/joystick12.cxx                     |  63 ----
 examples/c++/kx122.cxx                          |  65 ----
 examples/c++/kxcjk1013.cxx                      |  80 -----
 examples/c++/kxtj3.cxx                          |  73 -----
 examples/c++/l298-stepper.cxx                   |  61 ----
 examples/c++/l298.cxx                           |  62 ----
 examples/c++/l3gd20-i2c.cxx                     | 110 -------
 examples/c++/l3gd20.cxx                         |  80 -----
 examples/c++/lcd-eboled.cxx                     |  51 ---
 examples/c++/lcd-ssd1306-oled.cxx               | 149 ---------
 examples/c++/lcd-ssd1308-oled.cxx               |  99 ------
 examples/c++/lcd-ssd1327-oled.cxx               | 125 --------
 examples/c++/lcdks.cxx                          |  71 -----
 examples/c++/lcm1602-i2c.cxx                    |  47 ---
 examples/c++/lcm1602-parallel.cxx               |  56 ----
 examples/c++/ldt0028.cxx                        |  91 ------
 examples/c++/led.cxx                            |  55 ----
 examples/c++/lidarlitev3.cxx                    |  63 ----
 examples/c++/light.cxx                          |  49 ---
 examples/c++/linefinder.cxx                     |  66 ----
 examples/c++/lis2ds12.cxx                       |  77 -----
 examples/c++/lis3dh.cxx                         |  81 -----
 examples/c++/lm35.cxx                           |  66 ----
 examples/c++/lol.cxx                            |  67 ----
 examples/c++/loudness.cxx                       |  69 ----
 examples/c++/lp8860.cxx                         |  43 ---
 examples/c++/lpd8806.cxx                        | 105 ------
 examples/c++/lsm303agr.cxx                      |  77 -----
 examples/c++/lsm303d.cxx                        |  77 -----
 examples/c++/lsm303dlh.cxx                      |  62 ----
 examples/c++/lsm6ds3h.cxx                       |  80 -----
 examples/c++/lsm6dsl.cxx                        |  80 -----
 examples/c++/lsm9ds0.cxx                        |  82 -----
 examples/c++/m24lr64e.cxx                       |  66 ----
 examples/c++/mag3110.cxx                        |  76 -----
 examples/c++/max30100.cxx                       |  99 ------
 examples/c++/max31723.cxx                       |  60 ----
 examples/c++/max31855.cxx                       |  39 ---
 examples/c++/max44000.cxx                       |  40 ---
 examples/c++/max44009.cxx                       |  44 ---
 examples/c++/max5487.cxx                        |  64 ----
 examples/c++/maxds3231m.cxx                     |  74 -----
 examples/c++/maxsonarez.cxx                     |  72 -----
 examples/c++/mb704x.cxx                         |  64 ----
 examples/c++/mcp2515-txrx.cxx                   | 118 -------
 examples/c++/mcp2515.cxx                        |  76 -----
 examples/c++/mcp9808.cxx                        | 158 ---------
 examples/c++/md-stepper.cxx                     |  66 ----
 examples/c++/md.cxx                             |  59 ----
 examples/c++/mg811.cxx                          |  69 ----
 examples/c++/mhz16.cxx                          |  84 -----
 examples/c++/mic.cxx                            |  75 -----
 examples/c++/micsv89.cxx                        |  79 -----
 examples/c++/mlx90614.cxx                       |  60 ----
 examples/c++/mma7361.cxx                        |  82 -----
 examples/c++/mma7455.cxx                        |  62 ----
 examples/c++/mma7660.cxx                        |  76 -----
 examples/c++/mma8x5x.cxx                        |  91 ------
 examples/c++/mmc35240.cxx                       | 113 -------
 examples/c++/moisture.cxx                       |  75 -----
 examples/c++/mpl3115a2.cxx                      |  75 -----
 examples/c++/mpr121.cxx                         |  88 -----
 examples/c++/mpu9150-ak8975.cxx                 |  71 -----
 examples/c++/mpu9150-mpu60x0.cxx                |  76 -----
 examples/c++/mpu9150-mpu9250.cxx                |  80 -----
 examples/c++/mpu9150.cxx                        |  80 -----
 examples/c++/mq303a.cxx                         |  77 -----
 examples/c++/ms5611.cxx                         |  62 ----
 examples/c++/ms5803.cxx                         |  71 -----
 examples/c++/my9221-grovecircularled.cxx        |  65 ----
 examples/c++/my9221-groveledbar.cxx             |  75 -----
 examples/c++/nlgpio16.cxx                       |  51 ---
 examples/c++/nmea_gps-i2c.cxx                   |  68 ----
 examples/c++/nmea_gps.cxx                       |  67 ----
 examples/c++/nrf24l01-broadcast.cxx             |  87 -----
 examples/c++/nrf24l01-receiver.cxx              |  87 -----
 examples/c++/nrf24l01-transmitter.cxx           |  94 ------
 examples/c++/nrf8001-broadcast.cxx              | 189 -----------
 examples/c++/nrf8001-broadcast.hpp              |  93 ------
 examples/c++/nrf8001-helloworld.cxx             | 407 ------------------------
 examples/c++/nrf8001-helloworld.hpp             | 254 ---------------
 examples/c++/nunchuck.cxx                       |  67 ----
 examples/c++/o2.cxx                             |  58 ----
 examples/c++/otp538u.cxx                        |  80 -----
 examples/c++/ozw-aeotecdsb09104.cxx             | 100 ------
 examples/c++/ozw-aeotecdw2e.cxx                 |  97 ------
 examples/c++/ozw-aeotecsdg2.cxx                 | 114 -------
 examples/c++/ozw-aeotecss6.cxx                  | 104 ------
 examples/c++/ozw-ozwdump.cxx                    | 110 -------
 examples/c++/ozw-tzemt400.cxx                   | 102 ------
 examples/c++/p9813.cxx                          |  45 ---
 examples/c++/pca9685.cxx                        |  77 -----
 examples/c++/pn532-writeurl.cxx                 | 108 -------
 examples/c++/pn532.cxx                          |  97 ------
 examples/c++/ppd42ns.cxx                        |  65 ----
 examples/c++/pulsensor.cxx                      |  71 -----
 examples/c++/relay.cxx                          |  58 ----
 examples/c++/rf22-client.cxx                    |  76 -----
 examples/c++/rf22-server.cxx                    |  76 -----
 examples/c++/rfr359f.cxx                        |  67 ----
 examples/c++/rgbringcoder.cxx                   | 104 ------
 examples/c++/rhusb.cxx                          |  87 -----
 examples/c++/rn2903-p2p-rx.cxx                  | 112 -------
 examples/c++/rn2903-p2p-tx.cxx                  | 120 -------
 examples/c++/rn2903.cxx                         | 127 --------
 examples/c++/rotary.cxx                         |  66 ----
 examples/c++/rotaryencoder.cxx                  |  61 ----
 examples/c++/rpr220-intr.cxx                    |  80 -----
 examples/c++/rpr220.cxx                         |  68 ----
 examples/c++/rsc.cxx                            |  65 ----
 examples/c++/scam.cxx                           |  73 -----
 examples/c++/sensortemplate.cxx                 |  53 ---
 examples/c++/servo-es08a.cxx                    |  58 ----
 examples/c++/sht1x.cxx                          |  71 -----
 examples/c++/si1132.cxx                         |  46 ---
 examples/c++/si114x.cxx                         |  78 -----
 examples/c++/si7005.cxx                         |  52 ---
 examples/c++/slide.cxx                          |  51 ---
 examples/c++/sm130.cxx                          |  66 ----
 examples/c++/smartdrive.cxx                     |  80 -----
 examples/c++/speaker-pwm.cxx                    |  54 ----
 examples/c++/speaker.cxx                        |  48 ---
 examples/c++/ssd1351.cxx                        |  57 ----
 examples/c++/st7735.cxx                         |  75 -----
 examples/c++/stepmotor.cxx                      |  78 -----
 examples/c++/sx1276-fsk.cxx                     | 110 -------
 examples/c++/sx1276-lora.cxx                    | 109 -------
 examples/c++/sx6119.cxx                         |  67 ----
 examples/c++/t3311.cxx                          | 107 -------
 examples/c++/t6713-co2-sensor.cxx               |  66 ----
 examples/c++/t6713.cxx                          |  47 ---
 examples/c++/t8100.cxx                          | 108 -------
 examples/c++/ta12200.cxx                        |  64 ----
 examples/c++/tb7300.cxx                         | 113 -------
 examples/c++/tca9548a.cxx                       |  99 ------
 examples/c++/tcs3414cs.cxx                      |  65 ----
 examples/c++/tcs37727.cxx                       |  77 -----
 examples/c++/teams.cxx                          |  82 -----
 examples/c++/temperature.cxx                    |  56 ----
 examples/c++/tex00.cxx                          |  83 -----
 examples/c++/th02.cxx                           |  63 ----
 examples/c++/tm1637.cxx                         |  78 -----
 examples/c++/tmp006.cxx                         |  73 -----
 examples/c++/tsl2561.cxx                        |  52 ---
 examples/c++/ttp223.cxx                         |  54 ----
 examples/c++/uartat-le910.cxx                   | 155 ---------
 examples/c++/uln200xa.cxx                       |  62 ----
 examples/c++/ultrasonic.cxx                     |  58 ----
 examples/c++/urm37-uart.cxx                     |  68 ----
 examples/c++/urm37.cxx                          |  66 ----
 examples/c++/vcap.cxx                           |  69 ----
 examples/c++/vdiv.cxx                           |  67 ----
 examples/c++/veml6070.cxx                       |  59 ----
 examples/c++/water.cxx                          |  65 ----
 examples/c++/waterlevel.cxx                     |  63 ----
 examples/c++/wfs.cxx                            |  79 -----
 examples/c++/wheelencoder.cxx                   |  68 ----
 examples/c++/wt5001.cxx                         | 129 --------
 examples/c++/xbee.cxx                           | 134 --------
 examples/c++/yg1006.cxx                         |  66 ----
 examples/c++/zfm20-register.cxx                 | 134 --------
 examples/c++/zfm20.cxx                          | 102 ------
 examples/c/CMakeLists.txt                       |  11 -
 examples/c/a110x.c                              |  25 --
 examples/c/abp.c                                |  50 ---
 examples/c/bh1749.c                             |  73 -----
 examples/c/bh1750.c                             |  76 -----
 examples/c/bh1792.c                             |  86 -----
 examples/c/biss0001.c                           |  70 ----
 examples/c/bma250e.c                            |  99 ------
 examples/c/bmg160.c                             |  99 ------
 examples/c/bmi160.c                             |  94 ------
 examples/c/bmm150.c                             |  96 ------
 examples/c/bmp280-bme280.c                      |  89 ------
 examples/c/bmp280.c                             |  86 -----
 examples/c/bmpx8x.c                             |  88 -----
 examples/c/bno055.c                             | 119 -------
 examples/c/button-intr.c                        |  54 ----
 examples/c/button.c                             |  59 ----
 examples/c/buzzer.c                             |  68 ----
 examples/c/cjq4435.c                            |  82 -----
 examples/c/collision.c                          |  24 --
 examples/c/dfrec.c                              |  77 -----
 examples/c/dfrorp.c                             |  87 -----
 examples/c/dfrph.c                              |  75 -----
 examples/c/ds18b20.c                            |  81 -----
 examples/c/ecezo.c                              |  85 -----
 examples/c/emg.c                                |  87 -----
 examples/c/enc03r.c                             |  90 ------
 examples/c/flex.c                               |  87 -----
 examples/c/gas-mqx.c                            |  87 -----
 examples/c/gp2y0a.c                             |  27 --
 examples/c/gsr.c                                |  87 -----
 examples/c/guvas12d.c                           |  89 ------
 examples/c/hcsr04.c                             |  48 ---
 examples/c/hka5.c                               |  79 -----
 examples/c/hmc5883l.c                           |  82 -----
 examples/c/ims.c                                |  88 -----
 examples/c/jhd1313m1.c                          |  84 -----
 examples/c/joystick12.c                         |  87 -----
 examples/c/kx122.c                              |  71 -----
 examples/c/kxtj3.c                              |  75 -----
 examples/c/lcdks.c                              |  89 ------
 examples/c/lcm1602-i2c.c                        |  53 ---
 examples/c/lcm1602-parallel.c                   |  62 ----
 examples/c/ldt0028.c                            |  96 ------
 examples/c/led.c                                |  27 --
 examples/c/light.c                              |  87 -----
 examples/c/linefinder.c                         |  72 -----
 examples/c/lis2ds12.c                           | 100 ------
 examples/c/lis3dh.c                             |  97 ------
 examples/c/lm35.c                               |  72 -----
 examples/c/loudness.c                           |  27 --
 examples/c/lsm303agr.c                          |  90 ------
 examples/c/lsm303d.c                            |  89 ------
 examples/c/lsm6ds3h.c                           | 104 ------
 examples/c/lsm6dsl.c                            | 104 ------
 examples/c/m24lr64e.c                           |  31 --
 examples/c/max30100.c                           | 130 --------
 examples/c/mb704x.c                             |  77 -----
 examples/c/mcp2515-txrx.c                       | 152 ---------
 examples/c/mcp2515.c                            | 107 -------
 examples/c/md-stepper.c                         |  69 ----
 examples/c/md.c                                 |  64 ----
 examples/c/mma7361.c                            |  86 -----
 examples/c/mma7660.c                            |  83 -----
 examples/c/moisture.c                           |  26 --
 examples/c/mpr121.c                             |  32 --
 examples/c/mq303a.c                             |  26 --
 examples/c/ms5803.c                             |  79 -----
 examples/c/my9221.c                             |  89 ------
 examples/c/nmea_gps-i2c.c                       |  83 -----
 examples/c/nmea_gps.c                           |  81 -----
 examples/c/nunchuck.c                           |  84 -----
 examples/c/o2.c                                 |  76 -----
 examples/c/otp538u.c                            |  81 -----
 examples/c/ppd42ns.c                            |  66 ----
 examples/c/rn2903-p2p-rx.c                      | 137 --------
 examples/c/rn2903-p2p-tx.c                      | 139 --------
 examples/c/rn2903.c                             | 153 ---------
 examples/c/rotaryencoder.c                      |  69 ----
 examples/c/rpr220-intr.c                        |  84 -----
 examples/c/rpr220.c                             |  72 -----
 examples/c/rsc.c                                |  47 ---
 examples/c/servo.c                              |  37 ---
 examples/c/sht1x.c                              |  78 -----
 examples/c/slide.c                              |  87 -----
 examples/c/speaker-pwm.c                        |  61 ----
 examples/c/speaker.c                            |  55 ----
 examples/c/tsl2561.c                            |  22 --
 examples/c/ttp223.c                             |  25 --
 examples/c/uartat-le910.c                       | 169 ----------
 examples/c/uln200xa.c                           |  69 ----
 examples/c/urm37-uart.c                         |  76 -----
 examples/c/urm37.c                              |  74 -----
 examples/c/vdiv.c                               |  75 -----
 examples/c/veml6070.c                           |  49 ---
 examples/c/water.c                              |  70 ----
 examples/c/wfs.c                                |  91 ------
 examples/c/yg1006.c                             |  70 ----
 examples/java/A110X_Example.java                |  43 ---
 examples/java/A110X_intr_Example.java           |  57 ----
 examples/java/ADC121C021_Example.java           |  46 ---
 examples/java/AM2315_Example.java               |  66 ----
 examples/java/APA102_Example.java               |  44 ---
 examples/java/Ad8232_Example.java               |  50 ---
 examples/java/Ads1015_Example.java              | 100 ------
 examples/java/Ads1115_Example.java              | 103 ------
 examples/java/Adxl345_Example.java              |  51 ---
 examples/java/AeotecDSB09104_Example.java       |  96 ------
 examples/java/AeotecDW2E_Example.java           |  89 ------
 examples/java/AeotecSDG2_Example.java           | 100 ------
 examples/java/AeotecSS6_Example.java            |  91 ------
 examples/java/Apds9002_Example.java             |  47 ---
 examples/java/BH1749_Example.java               |  53 ---
 examples/java/BH1750_Example.java               |  52 ---
 examples/java/BH1792_Example.java               |  69 ----
 examples/java/BISS0001_Example.java             |  45 ---
 examples/java/BMA220_Example.java               |  46 ---
 examples/java/BMA250E_Example.java              |  66 ----
 examples/java/BMC150_Example.java               |  65 ----
 examples/java/BME280_Example.java               |  69 ----
 examples/java/BME280_Interface_Example.java     |  71 -----
 examples/java/BMG160_Example.java               |  66 ----
 examples/java/BMI055_Example.java               |  65 ----
 examples/java/BMI160_Example.java               |  78 -----
 examples/java/BMM150_Example.java               |  62 ----
 examples/java/BMP280_Example.java               |  65 ----
 examples/java/BMPX8X_Example.java               |  55 ----
 examples/java/BMX055_Example.java               |  72 -----
 examples/java/BNO055_Example.java               | 101 ------
 examples/java/Button_Example.java               |  40 ---
 examples/java/Button_intr_Example.java          |  53 ---
 examples/java/Buzzer_Example.java               |  56 ----
 examples/java/CJQ4435_Example.java              |  52 ---
 examples/java/CMakeLists.txt                    | 264 ---------------
 examples/java/CWLSXXA_Example.java              |  62 ----
 examples/java/Collision_Example.java            |  48 ---
 examples/java/DFREC_Example.java                |  59 ----
 examples/java/DFRORP_Example.java               |  68 ----
 examples/java/DFRPH_Example.java                |  49 ---
 examples/java/DS1307_Example.java               |  74 -----
 examples/java/E50HX_Example.java                |  91 ------
 examples/java/ECEZO_Example.java                |  60 ----
 examples/java/ECS1030_Example.java              |  52 ---
 examples/java/EHR_Example.java                  |  53 ---
 examples/java/ENC03R_Example.java               |  56 ----
 examples/java/ES08A_Example.java                |  53 ---
 examples/java/Emg_Example.java                  |  47 ---
 examples/java/FlexSensor_Example.java           |  41 ---
 examples/java/GROVESCAM_Example.java            |  66 ----
 examples/java/GUVAS12D_Example.java             |  49 ---
 examples/java/Gp2y0a_Example.java               |  68 ----
 examples/java/GroveButton_Example.java          |  40 ---
 examples/java/GroveButton_intr_Example.java     |  53 ---
 examples/java/GroveCollision_Example.java       |  48 ---
 examples/java/GroveEHR_Example.java             |  53 ---
 examples/java/GroveEmg_Example.java             |  47 ---
 examples/java/GroveGsr_Example.java             |  50 ---
 examples/java/GroveLEDBar_Example.java          |  41 ---
 examples/java/GroveLED_Example.java             |  39 ---
 examples/java/GroveLed_multi_Example.java       |  45 ---
 examples/java/GroveLight_Example.java           |  41 ---
 examples/java/GroveLineFinder_Example.java      |  45 ---
 examples/java/GroveMD_Example.java              |  53 ---
 examples/java/GroveMQ3_Example.java             |  70 ----
 examples/java/GroveMQ9_Example.java             |  70 ----
 examples/java/GroveMoisture_Example.java        |  47 ---
 examples/java/GroveO2_Example.java              |  46 ---
 examples/java/GroveQTouch_Example.java          |  69 ----
 examples/java/GroveRelay_Example.java           |  44 ---
 examples/java/GroveRotary_Example.java          |  49 ---
 examples/java/GroveSlide_Example.java           |  42 ---
 examples/java/GroveSpeaker_Example.java         |  40 ---
 examples/java/GroveTemp_Example.java            |  43 ---
 examples/java/GroveUltraSonic_Example.java      |  41 ---
 examples/java/GroveVDiv_Example.java            |  50 ---
 examples/java/GroveWFS_Example.java             |  44 ---
 examples/java/GroveWater_Example.java           |  45 ---
 examples/java/Gsr_Example.java                  |  50 ---
 examples/java/H3LIS331DL_Example.java           |  54 ----
 examples/java/H803X_Example.java                | 123 -------
 examples/java/HCSR04_Example.java               |  45 ---
 examples/java/HKA5_Example.java                 |  59 ----
 examples/java/HM11_Example.java                 |  96 ------
 examples/java/HMTRP_Example.java                | 122 -------
 examples/java/HP20x_Example.java                |  50 ---
 examples/java/HTU21D_Example.java               |  45 ---
 examples/java/Hmc5883l_Example.java             |  50 ---
 examples/java/IMS_Example.java                  |  53 ---
 examples/java/Itg3200_Example.java              |  51 ---
 examples/java/Jhd1313m1_Example.java            |  42 ---
 examples/java/Jhd1313m1_lcd_Example.java        |  43 ---
 examples/java/Joystick12_Example.java           |  44 ---
 examples/java/Joystick12_example_Example.java   |  44 ---
 examples/java/KX122_Example.java                |  50 ---
 examples/java/KXTJ3_Example.java                |  49 ---
 examples/java/LCD_EBOLED_Example.java           |  47 ---
 examples/java/LCD_SSD1306_Example.java          | 146 ---------
 examples/java/LDT0028_Example.java              |  42 ---
 examples/java/LE910_Example.java                | 167 ----------
 examples/java/LED_Example.java                  |  39 ---
 examples/java/LIS2DS12_Example.java             |  64 ----
 examples/java/LIS3DH_Example.java               |  68 ----
 examples/java/LM35_Example.java                 |  43 ---
 examples/java/LSM303AGR_Example.java            |  67 ----
 examples/java/LSM303DLH_Example.java            |  59 ----
 examples/java/LSM303D_Example.java              |  67 ----
 examples/java/LSM6DS3H_Example.java             |  71 -----
 examples/java/LSM6DSL_Example.java              |  71 -----
 examples/java/LSM9DS0_Example.java              |  59 ----
 examples/java/Lcm1602_i2c_Example.java          |  42 ---
 examples/java/Lcm1602_parallel_Example.java     |  53 ---
 examples/java/Light_Example.java                |  41 ---
 examples/java/LineFinder_Example.java           |  45 ---
 examples/java/LoL_Example.java                  |  47 ---
 examples/java/LoL_example_Example.java          |  47 ---
 examples/java/Loudness_Example.java             |  42 ---
 examples/java/M24LR64E_Example.java             |  55 ----
 examples/java/MAX30100_Example.java             |  88 -----
 examples/java/MAX31855_Example.java             |  56 ----
 examples/java/MAX44000_Example.java             |  38 ---
 examples/java/MAX5487_Example.java              |  71 -----
 examples/java/MAXds3231m_Example.java           |  79 -----
 examples/java/MB704X_Example.java               |  48 ---
 examples/java/MCP2515_Example.java              |  73 -----
 examples/java/MCP2515_TXRX_Example.java         |  94 ------
 examples/java/MCP9808_Example.java              | 216 -------------
 examples/java/MD_Example.java                   |  53 ---
 examples/java/MG811_Example.java                |  44 ---
 examples/java/MHZ16_Example.java                |  50 ---
 examples/java/MMA7361_Example.java              |  66 ----
 examples/java/MMA7455_Example.java              |  41 ---
 examples/java/MMA7660_Example.java              |  61 ----
 examples/java/MPL3115A2_Example.java            |  45 ---
 examples/java/MPR121_Example.java               |  34 --
 examples/java/MPU9150_Example.java              |  53 ---
 examples/java/MQ2_Example.java                  |  56 ----
 examples/java/MQ303A_Example.java               |  53 ---
 examples/java/MQ4_Example.java                  |  56 ----
 examples/java/MQ5_Example.java                  |  55 ----
 examples/java/MQ6_Example.java                  |  56 ----
 examples/java/MQ7_Example.java                  |  57 ----
 examples/java/MQ8_Example.java                  |  56 ----
 examples/java/MS5803_Example.java               |  56 ----
 examples/java/Microphone_Example.java           |  56 ----
 examples/java/Moisture_Example.java             |  47 ---
 examples/java/NLGPIO16_Example.java             |  44 ---
 examples/java/NMEAGPS_Example.java              |  48 ---
 examples/java/NMEAGPS_I2C_Example.java          |  49 ---
 examples/java/NRF24L01_receiver_Example.java    |  75 -----
 examples/java/NRF24L01_transmitter_Example.java |  66 ----
 examples/java/NUNCHUCK_Example.java             |  61 ----
 examples/java/O2_Example.java                   |  46 ---
 examples/java/OTP538U_Example.java              |  43 ---
 examples/java/P9813_Example.java                |  42 ---
 examples/java/PN532_Example.java                |  76 -----
 examples/java/PN532_writeurl_Example.java       |  97 ------
 examples/java/PPD42NS_Example.java              |  45 ---
 examples/java/Pulsensor_Example.java            |  46 ---
 examples/java/RFR359F_Example.java              |  44 ---
 examples/java/RHUSB_Example.java                |  60 ----
 examples/java/RN2903_Example.java               | 138 --------
 examples/java/RN2903_P2P_RX_Example.java        | 106 ------
 examples/java/RN2903_P2P_TX_Example.java        | 111 -------
 examples/java/RPR220_Example.java               |  44 ---
 examples/java/RPR220_intr_Example.java          |  54 ----
 examples/java/Relay_Example.java                |  44 ---
 examples/java/RotaryEncoder_Example.java        |  40 ---
 examples/java/Rotary_Example.java               |  49 ---
 examples/java/SCAM_Example.java                 |  66 ----
 examples/java/SHT1X_Example.java                |  55 ----
 examples/java/SM130_Example.java                |  69 ----
 examples/java/SSD1308_oled_Example.java         |  89 ------
 examples/java/SSD1327_oled_Example.java         | 135 --------
 examples/java/ST7735_Example.java               |  77 -----
 examples/java/SensorTemplate_Example.java       |  41 ---
 examples/java/Slide_Example.java                |  42 ---
 examples/java/SpeakerPWM_Example.java           |  46 ---
 examples/java/Speaker_Example.java              |  40 ---
 examples/java/StepMotor_Example.java            |  56 ----
 examples/java/T8100_Example.java                |  97 ------
 examples/java/TB7300_Example.java               |  99 ------
 examples/java/TEAMS_Example.java                |  64 ----
 examples/java/TEX00_Example.java                |  71 -----
 examples/java/TM1637_Example.java               |  58 ----
 examples/java/TP401_Example.java                |  66 ----
 examples/java/TSL2561_Example.java              |  40 ---
 examples/java/TTP223_Example.java               |  42 ---
 examples/java/TZEMT400_Example.java             |  98 ------
 examples/java/Temperature_Example.java          |  43 ---
 examples/java/Th02_Example.java                 |  47 ---
 examples/java/ULN200XA_Example.java             |  53 ---
 examples/java/VCAP_Example.java                 |  60 ----
 examples/java/VDiv_Example.java                 |  50 ---
 examples/java/VEML6070_Example.java             |  48 ---
 examples/java/WFS_Example.java                  |  47 ---
 examples/java/WT5001_Example.java               | 130 --------
 examples/java/WaterLevelSensor_Example.java     |  52 ---
 examples/java/Water_Example.java                |  45 ---
 examples/java/WheelEncoder_Example.java         |  45 ---
 examples/java/YG1006_Example.java               |  45 ---
 examples/java/ZFM20_Example.java                |  88 -----
 examples/javascript/a110x.js                    |  44 ---
 examples/javascript/abp.js                      |  43 ---
 examples/javascript/ad8232.js                   |  49 ---
 examples/javascript/adafruitms1438-stepper.js   |  90 ------
 examples/javascript/adafruitms1438.js           |  87 -----
 examples/javascript/adc121c021.js               |  50 ---
 examples/javascript/adis16448.js                |  67 ----
 examples/javascript/ads1015.js                  |  70 ----
 examples/javascript/ads1115.js                  |  74 -----
 examples/javascript/ads1x15.js                  |  44 ---
 examples/javascript/adxl335.js                  |  86 -----
 examples/javascript/adxl345.js                  |  41 ---
 examples/javascript/adxrs610.js                 |  54 ----
 examples/javascript/aeotecdsb09104.js           | 100 ------
 examples/javascript/aeotecdw2e.js               |  92 ------
 examples/javascript/aeotecsdg2.js               | 116 -------
 examples/javascript/aeotecss6.js                | 107 -------
 examples/javascript/ak8975.js                   |  61 ----
 examples/javascript/apa102.js                   |  42 ---
 examples/javascript/apds9002.js                 |  45 ---
 examples/javascript/at42qt1070.js               |  79 -----
 examples/javascript/bh1749.js                   |  57 ----
 examples/javascript/bh1750.js                   |  51 ---
 examples/javascript/bh1792.js                   |  50 ---
 examples/javascript/biss0001.js                 |  42 ---
 examples/javascript/bma220.js                   |  56 ----
 examples/javascript/bma250e.js                  |  65 ----
 examples/javascript/bmc150.js                   |  66 ----
 examples/javascript/bme280.js                   |  68 ----
 examples/javascript/bmg160.js                   |  65 ----
 examples/javascript/bmi055.js                   |  66 ----
 examples/javascript/bmi160.js                   |  68 ----
 examples/javascript/bmm150.js                   |  60 ----
 examples/javascript/bmp280.js                   |  64 ----
 examples/javascript/bmpx8x.js                   |  56 ----
 examples/javascript/bmx055.js                   |  73 -----
 examples/javascript/bno055.js                   | 106 ------
 examples/javascript/button.js                   |  35 --
 examples/javascript/buzzer.js                   |  60 ----
 examples/javascript/cjq4435.js                  |  84 -----
 examples/javascript/collision.js                |  60 ----
 examples/javascript/curieimu.js                 |  50 ---
 examples/javascript/cwlsxxa.js                  |  63 ----
 examples/javascript/dfrec.js                    |  59 ----
 examples/javascript/dfrorp.js                   |  70 ----
 examples/javascript/dfrph.js                    |  56 ----
 examples/javascript/ds1307.js                   |  65 ----
 examples/javascript/ds18b20.js                  |  68 ----
 examples/javascript/ds2413.js                   |  52 ---
 examples/javascript/e50hx.js                    |  98 ------
 examples/javascript/eboled.js                   | 147 ---------
 examples/javascript/ecezo.js                    |  59 ----
 examples/javascript/ehr.js                      |  62 ----
 examples/javascript/eldriver.js                 |  52 ---
 examples/javascript/electromagnet.js            |  55 ----
 examples/javascript/emg.js                      |  46 ---
 examples/javascript/enc03r.js                   |  62 ----
 examples/javascript/es08a.js                    |  66 ----
 examples/javascript/flex.js                     |  51 ---
 examples/javascript/gp2y0a.js                   |  58 ----
 examples/javascript/gprs.js                     | 111 -------
 examples/javascript/grove_mcfled.js             |  44 ---
 examples/javascript/grovebutton.js              |  35 --
 examples/javascript/grovecircularled.js         |  47 ---
 examples/javascript/grovecollision.js           |  60 ----
 examples/javascript/groveehr.js                 |  62 ----
 examples/javascript/groveeldriver.js            |  52 ---
 examples/javascript/groveelectromagnet.js       |  55 ----
 examples/javascript/groveemg.js                 |  46 ---
 examples/javascript/grovegprs.js                | 111 -------
 examples/javascript/grovegsr.js                 |  49 ---
 examples/javascript/groveled.js                 |  46 ---
 examples/javascript/groveledbar.js              |  71 -----
 examples/javascript/grovelight.js               |  37 ---
 examples/javascript/grovelinefinder.js          |  44 ---
 examples/javascript/grovemd-stepper.js          |  92 ------
 examples/javascript/grovemd.js                  |  91 ------
 examples/javascript/grovemoisture.js            |  54 ----
 examples/javascript/groveo2.js                  |  50 ---
 examples/javascript/groverelay.js               |  49 ---
 examples/javascript/groverotary.js              |  49 ---
 examples/javascript/grovescam.js                |  69 ----
 examples/javascript/groveslide.js               |  42 ---
 examples/javascript/grovespeaker.js             |  41 ---
 examples/javascript/grovetemp.js                |  42 ---
 examples/javascript/groveultrasonic.js          |  45 ---
 examples/javascript/grovevdiv.js                |  51 ---
 examples/javascript/grovewater.js               |  46 ---
 examples/javascript/grovewfs.js                 |  66 ----
 examples/javascript/gsr.js                      |  49 ---
 examples/javascript/guvas12d.js                 |  50 ---
 examples/javascript/h3lis331dl.js               |  88 -----
 examples/javascript/h803x.js                    | 112 -------
 examples/javascript/hcsr04.js                   |  41 ---
 examples/javascript/hdxxvxta.js                 |  61 ----
 examples/javascript/hka5.js                     |  63 ----
 examples/javascript/hm11.js                     | 133 --------
 examples/javascript/hmc5883l.js                 |  58 ----
 examples/javascript/hmtrp.js                    | 158 ---------
 examples/javascript/hp20x.js                    |  52 ---
 examples/javascript/ht9170.js                   |  52 ---
 examples/javascript/htu21d.js                   |  45 ---
 examples/javascript/hwxpxx.js                   |  83 -----
 examples/javascript/hx711.js                    |  36 ---
 examples/javascript/ili9341.js                  |  77 -----
 examples/javascript/ims.js                      |  51 ---
 examples/javascript/ina132.js                   |  52 ---
 examples/javascript/isd1820.js                  |  66 ----
 examples/javascript/itg3200.js                  |  61 ----
 examples/javascript/jhd1313m1-lcd.js            |  38 ---
 examples/javascript/joystick12.js               |  51 ---
 examples/javascript/kx122.js                    |  52 ---
 examples/javascript/kxtj3.js                    |  54 ----
 examples/javascript/l298-stepper.js             |  75 -----
 examples/javascript/l298.js                     |  75 -----
 examples/javascript/lcdks.js                    |  55 ----
 examples/javascript/ldt0028.js                  |  82 -----
 examples/javascript/le910.js                    | 166 ----------
 examples/javascript/led.js                      |  46 ---
 examples/javascript/light.js                    |  37 ---
 examples/javascript/linefinder.js               |  44 ---
 examples/javascript/lis2ds12.js                 |  65 ----
 examples/javascript/lis3dh.js                   |  69 ----
 examples/javascript/lm35.js                     |  48 ---
 examples/javascript/loudness.js                 |  49 ---
 examples/javascript/lsm303agr.js                |  67 ----
 examples/javascript/lsm303d.js                  |  67 ----
 examples/javascript/lsm303dhl.js                |  76 -----
 examples/javascript/lsm6ds3h.js                 |  72 -----
 examples/javascript/lsm6dsl.js                  |  72 -----
 examples/javascript/lsm9ds0.js                  |  74 -----
 examples/javascript/m24lr64e.js                 |  56 ----
 examples/javascript/max30100.js                 |  57 ----
 examples/javascript/maxsonarez.js               |  57 ----
 examples/javascript/mb704x.js                   |  47 ---
 examples/javascript/mcp2515-txrx.js             |  94 ------
 examples/javascript/mcp2515.js                  |  66 ----
 examples/javascript/mcp9808.js                  |  66 ----
 examples/javascript/md-stepper.js               |  92 ------
 examples/javascript/md.js                       |  91 ------
 examples/javascript/mg811.js                    |  50 ---
 examples/javascript/mhz16.js                    |  76 -----
 examples/javascript/mic.js                      |  58 ----
 examples/javascript/micsv89.js                  |  24 --
 examples/javascript/mma7361.js                  |  73 -----
 examples/javascript/mma7660.js                  |  85 -----
 examples/javascript/moisture.js                 |  52 ---
 examples/javascript/mpr121.js                   |  66 ----
 examples/javascript/mpu60x0.js                  |  68 ----
 examples/javascript/mpu9150.js                  |  73 -----
 examples/javascript/mpu9250.js                  |  73 -----
 examples/javascript/mq2.js                      |  57 ----
 examples/javascript/mq3.js                      |  57 ----
 examples/javascript/mq303a.js                   |  75 -----
 examples/javascript/mq4.js                      |  58 ----
 examples/javascript/mq5.js                      |  54 ----
 examples/javascript/mq6.js                      |  58 ----
 examples/javascript/mq7.js                      |  58 ----
 examples/javascript/mq8.js                      |  58 ----
 examples/javascript/mq9.js                      |  54 ----
 examples/javascript/ms5611.js                   |  47 ---
 examples/javascript/ms5803.js                   |  53 ---
 examples/javascript/nlgpio16.js                 |  48 ---
 examples/javascript/nmea_gps.js                 |  50 ---
 examples/javascript/nmea_gps_i2c.js             |  60 ----
 examples/javascript/nunchuck.js                 |  55 ----
 examples/javascript/o2.js                       |  50 ---
 examples/javascript/oled_ssd1306.js             | 151 ---------
 examples/javascript/oled_ssd1308.js             |  96 ------
 examples/javascript/oled_ssd1327.js             | 191 -----------
 examples/javascript/otp538u.js                  |  61 ----
 examples/javascript/ozwdump.js                  | 104 ------
 examples/javascript/p9813.js                    |  40 ---
 examples/javascript/pca9685.js                  |  83 -----
 examples/javascript/pn532-writeurl.js           | 133 --------
 examples/javascript/pn532.js                    |  99 ------
 examples/javascript/ppd42ns.js                  |  49 ---
 examples/javascript/relay.js                    |  48 ---
 examples/javascript/rfr359f.js                  |  46 ---
 examples/javascript/rgbringcoder.js             |  95 ------
 examples/javascript/rhusb.js                    |  73 -----
 examples/javascript/rn2903-p2p-rx.js            | 103 ------
 examples/javascript/rn2903-p2p-tx.js            | 108 -------
 examples/javascript/rn2903.js                   | 131 --------
 examples/javascript/rotary.js                   |  48 ---
 examples/javascript/rotaryencoder.js            |  41 ---
 examples/javascript/rpr220.js                   |  47 ---
 examples/javascript/rsc.js                      |  45 ---
 examples/javascript/scam.js                     |  69 ----
 examples/javascript/sensortemplate.js           |  40 ---
 examples/javascript/sht1x.js                    |  55 ----
 examples/javascript/si114x.js                   |  63 ----
 examples/javascript/slide.js                    |  42 ---
 examples/javascript/sm130.js                    |  67 ----
 examples/javascript/speaker.js                  |  41 ---
 examples/javascript/speaker_pwm.js              |  47 ---
 examples/javascript/st7735.js                   |  63 ----
 examples/javascript/stepmotor.js                |  66 ----
 examples/javascript/sx1276-fsk.js               | 109 -------
 examples/javascript/sx1276-lora.js              | 107 -------
 examples/javascript/sx6119.js                   |  51 ---
 examples/javascript/t3311.js                    |  98 ------
 examples/javascript/t8100.js                    |  95 ------
 examples/javascript/ta12200.js                  |  49 ---
 examples/javascript/tb7300.js                   |  99 ------
 examples/javascript/tca9548.js                  |  75 -----
 examples/javascript/tcs3414cs.js                |  44 ---
 examples/javascript/teams.js                    |  67 ----
 examples/javascript/temperature.js              |  42 ---
 examples/javascript/tex00.js                    |  74 -----
 examples/javascript/tm1637.js                   |  66 ----
 examples/javascript/tp401.js                    |  68 ----
 examples/javascript/tsl2561.js                  |  41 ---
 examples/javascript/ttp223.js                   |  40 ---
 examples/javascript/tzemt400.js                 | 101 ------
 examples/javascript/uln200xa.js                 |  69 ----
 examples/javascript/ultrasonic.js               |  45 ---
 examples/javascript/urm37-uart.js               |  49 ---
 examples/javascript/urm37.js                    |  49 ---
 examples/javascript/vcap.js                     |  66 ----
 examples/javascript/vdiv.js                     |  49 ---
 examples/javascript/veml6070.js                 |  41 ---
 examples/javascript/water.js                    |  44 ---
 examples/javascript/waterlevel.js               |  48 ---
 examples/javascript/wfs.js                      |  65 ----
 examples/javascript/wheelencoder.js             |  51 ---
 examples/javascript/wt5001.js                   | 127 --------
 examples/javascript/xbee.js                     | 137 --------
 examples/javascript/yg1006.js                   |  44 ---
 examples/javascript/zfm20-register.js           | 135 --------
 examples/javascript/zfm20.js                    |  95 ------
 820 files changed, 57994 deletions(-)
 delete mode 100644 examples/CMakeLists.txt
 delete mode 100644 examples/c++/CMakeLists.txt
 delete mode 100644 examples/c++/a110x-intr.cxx
 delete mode 100644 examples/c++/a110x.cxx
 delete mode 100644 examples/c++/abp.cxx
 delete mode 100644 examples/c++/ad8232.cxx
 delete mode 100644 examples/c++/adafruitms1438-stepper.cxx
 delete mode 100644 examples/c++/adafruitms1438.cxx
 delete mode 100644 examples/c++/adafruitss.cxx
 delete mode 100644 examples/c++/adc121c021.cxx
 delete mode 100644 examples/c++/adis16448.cxx
 delete mode 100644 examples/c++/ads1x15-adc-sensor.cxx
 delete mode 100644 examples/c++/ads1x15-ads1015.cxx
 delete mode 100644 examples/c++/ads1x15-ads1115.cxx
 delete mode 100644 examples/c++/ads1x15.cxx
 delete mode 100644 examples/c++/adxl335.cxx
 delete mode 100644 examples/c++/adxl345.cxx
 delete mode 100644 examples/c++/adxrs610.cxx
 delete mode 100644 examples/c++/am2315.cxx
 delete mode 100644 examples/c++/apa102.cxx
 delete mode 100644 examples/c++/apds9002.cxx
 delete mode 100644 examples/c++/apds9930.cxx
 delete mode 100644 examples/c++/at42qt1070.cxx
 delete mode 100755 examples/c++/bh1749.cxx
 delete mode 100644 examples/c++/bh1750.cxx
 delete mode 100755 examples/c++/bh1792.cxx
 delete mode 100644 examples/c++/biss0001.cxx
 delete mode 100644 examples/c++/bma220.cxx
 delete mode 100644 examples/c++/bma250e.cxx
 delete mode 100644 examples/c++/bmg160.cxx
 delete mode 100644 examples/c++/bmi160.cxx
 delete mode 100644 examples/c++/bmm150.cxx
 delete mode 100644 examples/c++/bmp280-bme280.cxx
 delete mode 100644 examples/c++/bmp280.cxx
 delete mode 100644 examples/c++/bmpx8x.cxx
 delete mode 100644 examples/c++/bmx055-bmc150.cxx
 delete mode 100644 examples/c++/bmx055-bmi055.cxx
 delete mode 100644 examples/c++/bmx055.cxx
 delete mode 100644 examples/c++/bno055.cxx
 delete mode 100644 examples/c++/button.cxx
 delete mode 100644 examples/c++/buzzer.cxx
 delete mode 100644 examples/c++/cjq4435.cxx
 delete mode 100644 examples/c++/collision.cxx
 delete mode 100644 examples/c++/curieimu.cxx
 delete mode 100644 examples/c++/cwlsxxa.cxx
 delete mode 100644 examples/c++/dfrec.cxx
 delete mode 100644 examples/c++/dfrorp.cxx
 delete mode 100644 examples/c++/dfrph.cxx
 delete mode 100644 examples/c++/ds1307.cxx
 delete mode 100644 examples/c++/ds1808lc.cxx
 delete mode 100644 examples/c++/ds18b20.cxx
 delete mode 100644 examples/c++/ds2413.cxx
 delete mode 100644 examples/c++/e50hx.cxx
 delete mode 100644 examples/c++/ecezo.cxx
 delete mode 100644 examples/c++/ecs1030.cxx
 delete mode 100644 examples/c++/ehr.cxx
 delete mode 100644 examples/c++/eldriver.cxx
 delete mode 100644 examples/c++/electromagnet.cxx
 delete mode 100644 examples/c++/emg.cxx
 delete mode 100644 examples/c++/enc03r.cxx
 delete mode 100644 examples/c++/flex.cxx
 delete mode 100644 examples/c++/gas-mq2.cxx
 delete mode 100644 examples/c++/gas-mq3.cxx
 delete mode 100644 examples/c++/gas-mq4.cxx
 delete mode 100644 examples/c++/gas-mq5.cxx
 delete mode 100644 examples/c++/gas-mq6.cxx
 delete mode 100644 examples/c++/gas-mq7.cxx
 delete mode 100644 examples/c++/gas-mq8.cxx
 delete mode 100644 examples/c++/gas-mq9.cxx
 delete mode 100644 examples/c++/gas-tp401.cxx
 delete mode 100644 examples/c++/gp2y0a.cxx
 delete mode 100644 examples/c++/gprs.cxx
 delete mode 100644 examples/c++/grove-grovebutton.cxx
 delete mode 100644 examples/c++/grove-groveled-multi.cxx
 delete mode 100644 examples/c++/grove-groveled.cxx
 delete mode 100644 examples/c++/grove-grovelight.cxx
 delete mode 100644 examples/c++/grove-groverelay.cxx
 delete mode 100644 examples/c++/grove-groverotary.cxx
 delete mode 100644 examples/c++/grove-groveslide.cxx
 delete mode 100644 examples/c++/grove-grovetemp.cxx
 delete mode 100644 examples/c++/grovecollision.cxx
 delete mode 100644 examples/c++/groveehr.cxx
 delete mode 100644 examples/c++/groveeldriver.cxx
 delete mode 100644 examples/c++/groveelectromagnet.cxx
 delete mode 100644 examples/c++/groveemg.cxx
 delete mode 100644 examples/c++/grovegprs.cxx
 delete mode 100644 examples/c++/grovegsr.cxx
 delete mode 100644 examples/c++/grovelinefinder.cxx
 delete mode 100644 examples/c++/grovemd-stepper.cxx
 delete mode 100644 examples/c++/grovemd.cxx
 delete mode 100644 examples/c++/grovemoisture.cxx
 delete mode 100644 examples/c++/groveo2.cxx
 delete mode 100644 examples/c++/grovescam.cxx
 delete mode 100644 examples/c++/grovespeaker.cxx
 delete mode 100644 examples/c++/groveultrasonic.cxx
 delete mode 100644 examples/c++/grovevdiv.cxx
 delete mode 100644 examples/c++/grovewater.cxx
 delete mode 100644 examples/c++/grovewfs.cxx
 delete mode 100644 examples/c++/gsr.cxx
 delete mode 100644 examples/c++/guvas12d.cxx
 delete mode 100644 examples/c++/h3lis331dl.cxx
 delete mode 100644 examples/c++/h803x.cxx
 delete mode 100644 examples/c++/hcsr04.cxx
 delete mode 100644 examples/c++/hdc1000.cxx
 delete mode 100644 examples/c++/hdxxvxta.cxx
 delete mode 100644 examples/c++/hka5.cxx
 delete mode 100644 examples/c++/hlg150h.cxx
 delete mode 100644 examples/c++/hm11.cxx
 delete mode 100644 examples/c++/hmc5883l.cxx
 delete mode 100644 examples/c++/hmtrp.cxx
 delete mode 100644 examples/c++/hp20x.cxx
 delete mode 100644 examples/c++/ht9170.cxx
 delete mode 100644 examples/c++/htu21d.cxx
 delete mode 100644 examples/c++/hwxpxx.cxx
 delete mode 100644 examples/c++/hx711.cxx
 delete mode 100644 examples/c++/ili9341.cxx
 delete mode 100644 examples/c++/ims.cxx
 delete mode 100644 examples/c++/ina132.cxx
 delete mode 100644 examples/c++/interfaces-humiditysensor.cxx
 delete mode 100644 examples/c++/interfaces-lightcontroller.cxx
 delete mode 100644 examples/c++/interfaces-lightsensor.cxx
 delete mode 100644 examples/c++/interfaces-pressuresensor.cxx
 delete mode 100644 examples/c++/interfaces-temperaturesensor.cxx
 delete mode 100644 examples/c++/isd1820.cxx
 delete mode 100644 examples/c++/itg3200.cxx
 delete mode 100644 examples/c++/jhd1313m1-lcd.cxx
 delete mode 100644 examples/c++/joystick12.cxx
 delete mode 100644 examples/c++/kx122.cxx
 delete mode 100644 examples/c++/kxcjk1013.cxx
 delete mode 100755 examples/c++/kxtj3.cxx
 delete mode 100644 examples/c++/l298-stepper.cxx
 delete mode 100644 examples/c++/l298.cxx
 delete mode 100644 examples/c++/l3gd20-i2c.cxx
 delete mode 100644 examples/c++/l3gd20.cxx
 delete mode 100644 examples/c++/lcd-eboled.cxx
 delete mode 100644 examples/c++/lcd-ssd1306-oled.cxx
 delete mode 100644 examples/c++/lcd-ssd1308-oled.cxx
 delete mode 100644 examples/c++/lcd-ssd1327-oled.cxx
 delete mode 100644 examples/c++/lcdks.cxx
 delete mode 100644 examples/c++/lcm1602-i2c.cxx
 delete mode 100644 examples/c++/lcm1602-parallel.cxx
 delete mode 100644 examples/c++/ldt0028.cxx
 delete mode 100644 examples/c++/led.cxx
 delete mode 100644 examples/c++/lidarlitev3.cxx
 delete mode 100644 examples/c++/light.cxx
 delete mode 100644 examples/c++/linefinder.cxx
 delete mode 100644 examples/c++/lis2ds12.cxx
 delete mode 100644 examples/c++/lis3dh.cxx
 delete mode 100644 examples/c++/lm35.cxx
 delete mode 100644 examples/c++/lol.cxx
 delete mode 100644 examples/c++/loudness.cxx
 delete mode 100644 examples/c++/lp8860.cxx
 delete mode 100644 examples/c++/lpd8806.cxx
 delete mode 100644 examples/c++/lsm303agr.cxx
 delete mode 100644 examples/c++/lsm303d.cxx
 delete mode 100644 examples/c++/lsm303dlh.cxx
 delete mode 100644 examples/c++/lsm6ds3h.cxx
 delete mode 100644 examples/c++/lsm6dsl.cxx
 delete mode 100644 examples/c++/lsm9ds0.cxx
 delete mode 100644 examples/c++/m24lr64e.cxx
 delete mode 100644 examples/c++/mag3110.cxx
 delete mode 100644 examples/c++/max30100.cxx
 delete mode 100644 examples/c++/max31723.cxx
 delete mode 100644 examples/c++/max31855.cxx
 delete mode 100644 examples/c++/max44000.cxx
 delete mode 100644 examples/c++/max44009.cxx
 delete mode 100644 examples/c++/max5487.cxx
 delete mode 100644 examples/c++/maxds3231m.cxx
 delete mode 100644 examples/c++/maxsonarez.cxx
 delete mode 100644 examples/c++/mb704x.cxx
 delete mode 100644 examples/c++/mcp2515-txrx.cxx
 delete mode 100644 examples/c++/mcp2515.cxx
 delete mode 100644 examples/c++/mcp9808.cxx
 delete mode 100644 examples/c++/md-stepper.cxx
 delete mode 100644 examples/c++/md.cxx
 delete mode 100644 examples/c++/mg811.cxx
 delete mode 100644 examples/c++/mhz16.cxx
 delete mode 100644 examples/c++/mic.cxx
 delete mode 100644 examples/c++/micsv89.cxx
 delete mode 100644 examples/c++/mlx90614.cxx
 delete mode 100644 examples/c++/mma7361.cxx
 delete mode 100644 examples/c++/mma7455.cxx
 delete mode 100644 examples/c++/mma7660.cxx
 delete mode 100644 examples/c++/mma8x5x.cxx
 delete mode 100644 examples/c++/mmc35240.cxx
 delete mode 100644 examples/c++/moisture.cxx
 delete mode 100644 examples/c++/mpl3115a2.cxx
 delete mode 100644 examples/c++/mpr121.cxx
 delete mode 100644 examples/c++/mpu9150-ak8975.cxx
 delete mode 100644 examples/c++/mpu9150-mpu60x0.cxx
 delete mode 100644 examples/c++/mpu9150-mpu9250.cxx
 delete mode 100644 examples/c++/mpu9150.cxx
 delete mode 100644 examples/c++/mq303a.cxx
 delete mode 100644 examples/c++/ms5611.cxx
 delete mode 100644 examples/c++/ms5803.cxx
 delete mode 100644 examples/c++/my9221-grovecircularled.cxx
 delete mode 100644 examples/c++/my9221-groveledbar.cxx
 delete mode 100644 examples/c++/nlgpio16.cxx
 delete mode 100644 examples/c++/nmea_gps-i2c.cxx
 delete mode 100644 examples/c++/nmea_gps.cxx
 delete mode 100644 examples/c++/nrf24l01-broadcast.cxx
 delete mode 100644 examples/c++/nrf24l01-receiver.cxx
 delete mode 100644 examples/c++/nrf24l01-transmitter.cxx
 delete mode 100644 examples/c++/nrf8001-broadcast.cxx
 delete mode 100644 examples/c++/nrf8001-broadcast.hpp
 delete mode 100644 examples/c++/nrf8001-helloworld.cxx
 delete mode 100644 examples/c++/nrf8001-helloworld.hpp
 delete mode 100644 examples/c++/nunchuck.cxx
 delete mode 100644 examples/c++/o2.cxx
 delete mode 100644 examples/c++/otp538u.cxx
 delete mode 100644 examples/c++/ozw-aeotecdsb09104.cxx
 delete mode 100644 examples/c++/ozw-aeotecdw2e.cxx
 delete mode 100644 examples/c++/ozw-aeotecsdg2.cxx
 delete mode 100644 examples/c++/ozw-aeotecss6.cxx
 delete mode 100644 examples/c++/ozw-ozwdump.cxx
 delete mode 100644 examples/c++/ozw-tzemt400.cxx
 delete mode 100644 examples/c++/p9813.cxx
 delete mode 100644 examples/c++/pca9685.cxx
 delete mode 100644 examples/c++/pn532-writeurl.cxx
 delete mode 100644 examples/c++/pn532.cxx
 delete mode 100644 examples/c++/ppd42ns.cxx
 delete mode 100644 examples/c++/pulsensor.cxx
 delete mode 100644 examples/c++/relay.cxx
 delete mode 100644 examples/c++/rf22-client.cxx
 delete mode 100644 examples/c++/rf22-server.cxx
 delete mode 100644 examples/c++/rfr359f.cxx
 delete mode 100644 examples/c++/rgbringcoder.cxx
 delete mode 100644 examples/c++/rhusb.cxx
 delete mode 100644 examples/c++/rn2903-p2p-rx.cxx
 delete mode 100644 examples/c++/rn2903-p2p-tx.cxx
 delete mode 100644 examples/c++/rn2903.cxx
 delete mode 100644 examples/c++/rotary.cxx
 delete mode 100644 examples/c++/rotaryencoder.cxx
 delete mode 100644 examples/c++/rpr220-intr.cxx
 delete mode 100644 examples/c++/rpr220.cxx
 delete mode 100644 examples/c++/rsc.cxx
 delete mode 100644 examples/c++/scam.cxx
 delete mode 100644 examples/c++/sensortemplate.cxx
 delete mode 100644 examples/c++/servo-es08a.cxx
 delete mode 100644 examples/c++/sht1x.cxx
 delete mode 100644 examples/c++/si1132.cxx
 delete mode 100644 examples/c++/si114x.cxx
 delete mode 100644 examples/c++/si7005.cxx
 delete mode 100644 examples/c++/slide.cxx
 delete mode 100644 examples/c++/sm130.cxx
 delete mode 100644 examples/c++/smartdrive.cxx
 delete mode 100644 examples/c++/speaker-pwm.cxx
 delete mode 100644 examples/c++/speaker.cxx
 delete mode 100644 examples/c++/ssd1351.cxx
 delete mode 100644 examples/c++/st7735.cxx
 delete mode 100644 examples/c++/stepmotor.cxx
 delete mode 100644 examples/c++/sx1276-fsk.cxx
 delete mode 100644 examples/c++/sx1276-lora.cxx
 delete mode 100644 examples/c++/sx6119.cxx
 delete mode 100644 examples/c++/t3311.cxx
 delete mode 100644 examples/c++/t6713-co2-sensor.cxx
 delete mode 100644 examples/c++/t6713.cxx
 delete mode 100644 examples/c++/t8100.cxx
 delete mode 100644 examples/c++/ta12200.cxx
 delete mode 100644 examples/c++/tb7300.cxx
 delete mode 100644 examples/c++/tca9548a.cxx
 delete mode 100644 examples/c++/tcs3414cs.cxx
 delete mode 100644 examples/c++/tcs37727.cxx
 delete mode 100644 examples/c++/teams.cxx
 delete mode 100644 examples/c++/temperature.cxx
 delete mode 100644 examples/c++/tex00.cxx
 delete mode 100644 examples/c++/th02.cxx
 delete mode 100644 examples/c++/tm1637.cxx
 delete mode 100644 examples/c++/tmp006.cxx
 delete mode 100644 examples/c++/tsl2561.cxx
 delete mode 100644 examples/c++/ttp223.cxx
 delete mode 100644 examples/c++/uartat-le910.cxx
 delete mode 100644 examples/c++/uln200xa.cxx
 delete mode 100644 examples/c++/ultrasonic.cxx
 delete mode 100644 examples/c++/urm37-uart.cxx
 delete mode 100644 examples/c++/urm37.cxx
 delete mode 100644 examples/c++/vcap.cxx
 delete mode 100644 examples/c++/vdiv.cxx
 delete mode 100644 examples/c++/veml6070.cxx
 delete mode 100644 examples/c++/water.cxx
 delete mode 100644 examples/c++/waterlevel.cxx
 delete mode 100644 examples/c++/wfs.cxx
 delete mode 100644 examples/c++/wheelencoder.cxx
 delete mode 100644 examples/c++/wt5001.cxx
 delete mode 100644 examples/c++/xbee.cxx
 delete mode 100644 examples/c++/yg1006.cxx
 delete mode 100644 examples/c++/zfm20-register.cxx
 delete mode 100644 examples/c++/zfm20.cxx
 delete mode 100644 examples/c/CMakeLists.txt
 delete mode 100644 examples/c/a110x.c
 delete mode 100644 examples/c/abp.c
 delete mode 100755 examples/c/bh1749.c
 delete mode 100644 examples/c/bh1750.c
 delete mode 100755 examples/c/bh1792.c
 delete mode 100644 examples/c/biss0001.c
 delete mode 100644 examples/c/bma250e.c
 delete mode 100644 examples/c/bmg160.c
 delete mode 100644 examples/c/bmi160.c
 delete mode 100644 examples/c/bmm150.c
 delete mode 100644 examples/c/bmp280-bme280.c
 delete mode 100644 examples/c/bmp280.c
 delete mode 100644 examples/c/bmpx8x.c
 delete mode 100644 examples/c/bno055.c
 delete mode 100644 examples/c/button-intr.c
 delete mode 100644 examples/c/button.c
 delete mode 100644 examples/c/buzzer.c
 delete mode 100644 examples/c/cjq4435.c
 delete mode 100644 examples/c/collision.c
 delete mode 100644 examples/c/dfrec.c
 delete mode 100644 examples/c/dfrorp.c
 delete mode 100644 examples/c/dfrph.c
 delete mode 100644 examples/c/ds18b20.c
 delete mode 100644 examples/c/ecezo.c
 delete mode 100644 examples/c/emg.c
 delete mode 100644 examples/c/enc03r.c
 delete mode 100644 examples/c/flex.c
 delete mode 100644 examples/c/gas-mqx.c
 delete mode 100644 examples/c/gp2y0a.c
 delete mode 100644 examples/c/gsr.c
 delete mode 100644 examples/c/guvas12d.c
 delete mode 100644 examples/c/hcsr04.c
 delete mode 100644 examples/c/hka5.c
 delete mode 100644 examples/c/hmc5883l.c
 delete mode 100644 examples/c/ims.c
 delete mode 100644 examples/c/jhd1313m1.c
 delete mode 100644 examples/c/joystick12.c
 delete mode 100644 examples/c/kx122.c
 delete mode 100755 examples/c/kxtj3.c
 delete mode 100644 examples/c/lcdks.c
 delete mode 100644 examples/c/lcm1602-i2c.c
 delete mode 100644 examples/c/lcm1602-parallel.c
 delete mode 100644 examples/c/ldt0028.c
 delete mode 100644 examples/c/led.c
 delete mode 100644 examples/c/light.c
 delete mode 100644 examples/c/linefinder.c
 delete mode 100644 examples/c/lis2ds12.c
 delete mode 100644 examples/c/lis3dh.c
 delete mode 100644 examples/c/lm35.c
 delete mode 100644 examples/c/loudness.c
 delete mode 100644 examples/c/lsm303agr.c
 delete mode 100644 examples/c/lsm303d.c
 delete mode 100644 examples/c/lsm6ds3h.c
 delete mode 100644 examples/c/lsm6dsl.c
 delete mode 100644 examples/c/m24lr64e.c
 delete mode 100644 examples/c/max30100.c
 delete mode 100644 examples/c/mb704x.c
 delete mode 100644 examples/c/mcp2515-txrx.c
 delete mode 100644 examples/c/mcp2515.c
 delete mode 100644 examples/c/md-stepper.c
 delete mode 100644 examples/c/md.c
 delete mode 100644 examples/c/mma7361.c
 delete mode 100644 examples/c/mma7660.c
 delete mode 100644 examples/c/moisture.c
 delete mode 100644 examples/c/mpr121.c
 delete mode 100644 examples/c/mq303a.c
 delete mode 100644 examples/c/ms5803.c
 delete mode 100644 examples/c/my9221.c
 delete mode 100644 examples/c/nmea_gps-i2c.c
 delete mode 100644 examples/c/nmea_gps.c
 delete mode 100644 examples/c/nunchuck.c
 delete mode 100644 examples/c/o2.c
 delete mode 100644 examples/c/otp538u.c
 delete mode 100644 examples/c/ppd42ns.c
 delete mode 100644 examples/c/rn2903-p2p-rx.c
 delete mode 100644 examples/c/rn2903-p2p-tx.c
 delete mode 100644 examples/c/rn2903.c
 delete mode 100644 examples/c/rotaryencoder.c
 delete mode 100644 examples/c/rpr220-intr.c
 delete mode 100644 examples/c/rpr220.c
 delete mode 100644 examples/c/rsc.c
 delete mode 100644 examples/c/servo.c
 delete mode 100644 examples/c/sht1x.c
 delete mode 100644 examples/c/slide.c
 delete mode 100644 examples/c/speaker-pwm.c
 delete mode 100644 examples/c/speaker.c
 delete mode 100644 examples/c/tsl2561.c
 delete mode 100644 examples/c/ttp223.c
 delete mode 100644 examples/c/uartat-le910.c
 delete mode 100644 examples/c/uln200xa.c
 delete mode 100644 examples/c/urm37-uart.c
 delete mode 100644 examples/c/urm37.c
 delete mode 100644 examples/c/vdiv.c
 delete mode 100644 examples/c/veml6070.c
 delete mode 100644 examples/c/water.c
 delete mode 100644 examples/c/wfs.c
 delete mode 100644 examples/c/yg1006.c
 delete mode 100644 examples/java/A110X_Example.java
 delete mode 100644 examples/java/A110X_intr_Example.java
 delete mode 100644 examples/java/ADC121C021_Example.java
 delete mode 100644 examples/java/AM2315_Example.java
 delete mode 100644 examples/java/APA102_Example.java
 delete mode 100644 examples/java/Ad8232_Example.java
 delete mode 100644 examples/java/Ads1015_Example.java
 delete mode 100644 examples/java/Ads1115_Example.java
 delete mode 100644 examples/java/Adxl345_Example.java
 delete mode 100644 examples/java/AeotecDSB09104_Example.java
 delete mode 100644 examples/java/AeotecDW2E_Example.java
 delete mode 100644 examples/java/AeotecSDG2_Example.java
 delete mode 100644 examples/java/AeotecSS6_Example.java
 delete mode 100644 examples/java/Apds9002_Example.java
 delete mode 100755 examples/java/BH1749_Example.java
 delete mode 100644 examples/java/BH1750_Example.java
 delete mode 100755 examples/java/BH1792_Example.java
 delete mode 100644 examples/java/BISS0001_Example.java
 delete mode 100644 examples/java/BMA220_Example.java
 delete mode 100644 examples/java/BMA250E_Example.java
 delete mode 100644 examples/java/BMC150_Example.java
 delete mode 100644 examples/java/BME280_Example.java
 delete mode 100644 examples/java/BME280_Interface_Example.java
 delete mode 100644 examples/java/BMG160_Example.java
 delete mode 100644 examples/java/BMI055_Example.java
 delete mode 100644 examples/java/BMI160_Example.java
 delete mode 100644 examples/java/BMM150_Example.java
 delete mode 100644 examples/java/BMP280_Example.java
 delete mode 100644 examples/java/BMPX8X_Example.java
 delete mode 100644 examples/java/BMX055_Example.java
 delete mode 100644 examples/java/BNO055_Example.java
 delete mode 100644 examples/java/Button_Example.java
 delete mode 100644 examples/java/Button_intr_Example.java
 delete mode 100644 examples/java/Buzzer_Example.java
 delete mode 100644 examples/java/CJQ4435_Example.java
 delete mode 100644 examples/java/CMakeLists.txt
 delete mode 100644 examples/java/CWLSXXA_Example.java
 delete mode 100644 examples/java/Collision_Example.java
 delete mode 100644 examples/java/DFREC_Example.java
 delete mode 100644 examples/java/DFRORP_Example.java
 delete mode 100644 examples/java/DFRPH_Example.java
 delete mode 100644 examples/java/DS1307_Example.java
 delete mode 100644 examples/java/E50HX_Example.java
 delete mode 100644 examples/java/ECEZO_Example.java
 delete mode 100644 examples/java/ECS1030_Example.java
 delete mode 100644 examples/java/EHR_Example.java
 delete mode 100644 examples/java/ENC03R_Example.java
 delete mode 100644 examples/java/ES08A_Example.java
 delete mode 100644 examples/java/Emg_Example.java
 delete mode 100644 examples/java/FlexSensor_Example.java
 delete mode 100644 examples/java/GROVESCAM_Example.java
 delete mode 100644 examples/java/GUVAS12D_Example.java
 delete mode 100644 examples/java/Gp2y0a_Example.java
 delete mode 100644 examples/java/GroveButton_Example.java
 delete mode 100644 examples/java/GroveButton_intr_Example.java
 delete mode 100644 examples/java/GroveCollision_Example.java
 delete mode 100644 examples/java/GroveEHR_Example.java
 delete mode 100644 examples/java/GroveEmg_Example.java
 delete mode 100644 examples/java/GroveGsr_Example.java
 delete mode 100644 examples/java/GroveLEDBar_Example.java
 delete mode 100644 examples/java/GroveLED_Example.java
 delete mode 100644 examples/java/GroveLed_multi_Example.java
 delete mode 100644 examples/java/GroveLight_Example.java
 delete mode 100644 examples/java/GroveLineFinder_Example.java
 delete mode 100644 examples/java/GroveMD_Example.java
 delete mode 100644 examples/java/GroveMQ3_Example.java
 delete mode 100644 examples/java/GroveMQ9_Example.java
 delete mode 100644 examples/java/GroveMoisture_Example.java
 delete mode 100644 examples/java/GroveO2_Example.java
 delete mode 100644 examples/java/GroveQTouch_Example.java
 delete mode 100644 examples/java/GroveRelay_Example.java
 delete mode 100644 examples/java/GroveRotary_Example.java
 delete mode 100644 examples/java/GroveSlide_Example.java
 delete mode 100644 examples/java/GroveSpeaker_Example.java
 delete mode 100644 examples/java/GroveTemp_Example.java
 delete mode 100644 examples/java/GroveUltraSonic_Example.java
 delete mode 100644 examples/java/GroveVDiv_Example.java
 delete mode 100644 examples/java/GroveWFS_Example.java
 delete mode 100644 examples/java/GroveWater_Example.java
 delete mode 100644 examples/java/Gsr_Example.java
 delete mode 100644 examples/java/H3LIS331DL_Example.java
 delete mode 100644 examples/java/H803X_Example.java
 delete mode 100644 examples/java/HCSR04_Example.java
 delete mode 100644 examples/java/HKA5_Example.java
 delete mode 100644 examples/java/HM11_Example.java
 delete mode 100644 examples/java/HMTRP_Example.java
 delete mode 100644 examples/java/HP20x_Example.java
 delete mode 100644 examples/java/HTU21D_Example.java
 delete mode 100644 examples/java/Hmc5883l_Example.java
 delete mode 100644 examples/java/IMS_Example.java
 delete mode 100644 examples/java/Itg3200_Example.java
 delete mode 100644 examples/java/Jhd1313m1_Example.java
 delete mode 100644 examples/java/Jhd1313m1_lcd_Example.java
 delete mode 100644 examples/java/Joystick12_Example.java
 delete mode 100644 examples/java/Joystick12_example_Example.java
 delete mode 100644 examples/java/KX122_Example.java
 delete mode 100755 examples/java/KXTJ3_Example.java
 delete mode 100644 examples/java/LCD_EBOLED_Example.java
 delete mode 100644 examples/java/LCD_SSD1306_Example.java
 delete mode 100644 examples/java/LDT0028_Example.java
 delete mode 100644 examples/java/LE910_Example.java
 delete mode 100644 examples/java/LED_Example.java
 delete mode 100644 examples/java/LIS2DS12_Example.java
 delete mode 100644 examples/java/LIS3DH_Example.java
 delete mode 100644 examples/java/LM35_Example.java
 delete mode 100644 examples/java/LSM303AGR_Example.java
 delete mode 100644 examples/java/LSM303DLH_Example.java
 delete mode 100644 examples/java/LSM303D_Example.java
 delete mode 100644 examples/java/LSM6DS3H_Example.java
 delete mode 100644 examples/java/LSM6DSL_Example.java
 delete mode 100644 examples/java/LSM9DS0_Example.java
 delete mode 100644 examples/java/Lcm1602_i2c_Example.java
 delete mode 100644 examples/java/Lcm1602_parallel_Example.java
 delete mode 100644 examples/java/Light_Example.java
 delete mode 100644 examples/java/LineFinder_Example.java
 delete mode 100644 examples/java/LoL_Example.java
 delete mode 100644 examples/java/LoL_example_Example.java
 delete mode 100644 examples/java/Loudness_Example.java
 delete mode 100644 examples/java/M24LR64E_Example.java
 delete mode 100644 examples/java/MAX30100_Example.java
 delete mode 100644 examples/java/MAX31855_Example.java
 delete mode 100644 examples/java/MAX44000_Example.java
 delete mode 100644 examples/java/MAX5487_Example.java
 delete mode 100644 examples/java/MAXds3231m_Example.java
 delete mode 100644 examples/java/MB704X_Example.java
 delete mode 100644 examples/java/MCP2515_Example.java
 delete mode 100644 examples/java/MCP2515_TXRX_Example.java
 delete mode 100644 examples/java/MCP9808_Example.java
 delete mode 100644 examples/java/MD_Example.java
 delete mode 100644 examples/java/MG811_Example.java
 delete mode 100644 examples/java/MHZ16_Example.java
 delete mode 100644 examples/java/MMA7361_Example.java
 delete mode 100644 examples/java/MMA7455_Example.java
 delete mode 100644 examples/java/MMA7660_Example.java
 delete mode 100644 examples/java/MPL3115A2_Example.java
 delete mode 100644 examples/java/MPR121_Example.java
 delete mode 100644 examples/java/MPU9150_Example.java
 delete mode 100644 examples/java/MQ2_Example.java
 delete mode 100644 examples/java/MQ303A_Example.java
 delete mode 100644 examples/java/MQ4_Example.java
 delete mode 100644 examples/java/MQ5_Example.java
 delete mode 100644 examples/java/MQ6_Example.java
 delete mode 100644 examples/java/MQ7_Example.java
 delete mode 100644 examples/java/MQ8_Example.java
 delete mode 100644 examples/java/MS5803_Example.java
 delete mode 100644 examples/java/Microphone_Example.java
 delete mode 100644 examples/java/Moisture_Example.java
 delete mode 100644 examples/java/NLGPIO16_Example.java
 delete mode 100644 examples/java/NMEAGPS_Example.java
 delete mode 100644 examples/java/NMEAGPS_I2C_Example.java
 delete mode 100644 examples/java/NRF24L01_receiver_Example.java
 delete mode 100644 examples/java/NRF24L01_transmitter_Example.java
 delete mode 100644 examples/java/NUNCHUCK_Example.java
 delete mode 100644 examples/java/O2_Example.java
 delete mode 100644 examples/java/OTP538U_Example.java
 delete mode 100644 examples/java/P9813_Example.java
 delete mode 100644 examples/java/PN532_Example.java
 delete mode 100644 examples/java/PN532_writeurl_Example.java
 delete mode 100644 examples/java/PPD42NS_Example.java
 delete mode 100644 examples/java/Pulsensor_Example.java
 delete mode 100644 examples/java/RFR359F_Example.java
 delete mode 100644 examples/java/RHUSB_Example.java
 delete mode 100644 examples/java/RN2903_Example.java
 delete mode 100644 examples/java/RN2903_P2P_RX_Example.java
 delete mode 100644 examples/java/RN2903_P2P_TX_Example.java
 delete mode 100644 examples/java/RPR220_Example.java
 delete mode 100644 examples/java/RPR220_intr_Example.java
 delete mode 100644 examples/java/Relay_Example.java
 delete mode 100644 examples/java/RotaryEncoder_Example.java
 delete mode 100644 examples/java/Rotary_Example.java
 delete mode 100644 examples/java/SCAM_Example.java
 delete mode 100644 examples/java/SHT1X_Example.java
 delete mode 100644 examples/java/SM130_Example.java
 delete mode 100644 examples/java/SSD1308_oled_Example.java
 delete mode 100644 examples/java/SSD1327_oled_Example.java
 delete mode 100644 examples/java/ST7735_Example.java
 delete mode 100644 examples/java/SensorTemplate_Example.java
 delete mode 100644 examples/java/Slide_Example.java
 delete mode 100644 examples/java/SpeakerPWM_Example.java
 delete mode 100644 examples/java/Speaker_Example.java
 delete mode 100644 examples/java/StepMotor_Example.java
 delete mode 100644 examples/java/T8100_Example.java
 delete mode 100644 examples/java/TB7300_Example.java
 delete mode 100644 examples/java/TEAMS_Example.java
 delete mode 100644 examples/java/TEX00_Example.java
 delete mode 100644 examples/java/TM1637_Example.java
 delete mode 100644 examples/java/TP401_Example.java
 delete mode 100644 examples/java/TSL2561_Example.java
 delete mode 100644 examples/java/TTP223_Example.java
 delete mode 100644 examples/java/TZEMT400_Example.java
 delete mode 100644 examples/java/Temperature_Example.java
 delete mode 100644 examples/java/Th02_Example.java
 delete mode 100644 examples/java/ULN200XA_Example.java
 delete mode 100644 examples/java/VCAP_Example.java
 delete mode 100644 examples/java/VDiv_Example.java
 delete mode 100644 examples/java/VEML6070_Example.java
 delete mode 100644 examples/java/WFS_Example.java
 delete mode 100644 examples/java/WT5001_Example.java
 delete mode 100644 examples/java/WaterLevelSensor_Example.java
 delete mode 100644 examples/java/Water_Example.java
 delete mode 100644 examples/java/WheelEncoder_Example.java
 delete mode 100644 examples/java/YG1006_Example.java
 delete mode 100644 examples/java/ZFM20_Example.java
 delete mode 100644 examples/javascript/a110x.js
 delete mode 100644 examples/javascript/abp.js
 delete mode 100644 examples/javascript/ad8232.js
 delete mode 100644 examples/javascript/adafruitms1438-stepper.js
 delete mode 100644 examples/javascript/adafruitms1438.js
 delete mode 100644 examples/javascript/adc121c021.js
 delete mode 100644 examples/javascript/adis16448.js
 delete mode 100644 examples/javascript/ads1015.js
 delete mode 100644 examples/javascript/ads1115.js
 delete mode 100644 examples/javascript/ads1x15.js
 delete mode 100644 examples/javascript/adxl335.js
 delete mode 100644 examples/javascript/adxl345.js
 delete mode 100644 examples/javascript/adxrs610.js
 delete mode 100644 examples/javascript/aeotecdsb09104.js
 delete mode 100644 examples/javascript/aeotecdw2e.js
 delete mode 100644 examples/javascript/aeotecsdg2.js
 delete mode 100644 examples/javascript/aeotecss6.js
 delete mode 100644 examples/javascript/ak8975.js
 delete mode 100644 examples/javascript/apa102.js
 delete mode 100644 examples/javascript/apds9002.js
 delete mode 100644 examples/javascript/at42qt1070.js
 delete mode 100755 examples/javascript/bh1749.js
 delete mode 100644 examples/javascript/bh1750.js
 delete mode 100755 examples/javascript/bh1792.js
 delete mode 100644 examples/javascript/biss0001.js
 delete mode 100644 examples/javascript/bma220.js
 delete mode 100644 examples/javascript/bma250e.js
 delete mode 100644 examples/javascript/bmc150.js
 delete mode 100644 examples/javascript/bme280.js
 delete mode 100644 examples/javascript/bmg160.js
 delete mode 100644 examples/javascript/bmi055.js
 delete mode 100644 examples/javascript/bmi160.js
 delete mode 100644 examples/javascript/bmm150.js
 delete mode 100644 examples/javascript/bmp280.js
 delete mode 100644 examples/javascript/bmpx8x.js
 delete mode 100644 examples/javascript/bmx055.js
 delete mode 100644 examples/javascript/bno055.js
 delete mode 100644 examples/javascript/button.js
 delete mode 100644 examples/javascript/buzzer.js
 delete mode 100644 examples/javascript/cjq4435.js
 delete mode 100644 examples/javascript/collision.js
 delete mode 100644 examples/javascript/curieimu.js
 delete mode 100644 examples/javascript/cwlsxxa.js
 delete mode 100644 examples/javascript/dfrec.js
 delete mode 100644 examples/javascript/dfrorp.js
 delete mode 100644 examples/javascript/dfrph.js
 delete mode 100644 examples/javascript/ds1307.js
 delete mode 100644 examples/javascript/ds18b20.js
 delete mode 100644 examples/javascript/ds2413.js
 delete mode 100644 examples/javascript/e50hx.js
 delete mode 100644 examples/javascript/eboled.js
 delete mode 100644 examples/javascript/ecezo.js
 delete mode 100644 examples/javascript/ehr.js
 delete mode 100644 examples/javascript/eldriver.js
 delete mode 100644 examples/javascript/electromagnet.js
 delete mode 100644 examples/javascript/emg.js
 delete mode 100644 examples/javascript/enc03r.js
 delete mode 100644 examples/javascript/es08a.js
 delete mode 100644 examples/javascript/flex.js
 delete mode 100644 examples/javascript/gp2y0a.js
 delete mode 100644 examples/javascript/gprs.js
 delete mode 100644 examples/javascript/grove_mcfled.js
 delete mode 100644 examples/javascript/grovebutton.js
 delete mode 100644 examples/javascript/grovecircularled.js
 delete mode 100644 examples/javascript/grovecollision.js
 delete mode 100644 examples/javascript/groveehr.js
 delete mode 100644 examples/javascript/groveeldriver.js
 delete mode 100644 examples/javascript/groveelectromagnet.js
 delete mode 100644 examples/javascript/groveemg.js
 delete mode 100644 examples/javascript/grovegprs.js
 delete mode 100644 examples/javascript/grovegsr.js
 delete mode 100644 examples/javascript/groveled.js
 delete mode 100644 examples/javascript/groveledbar.js
 delete mode 100644 examples/javascript/grovelight.js
 delete mode 100644 examples/javascript/grovelinefinder.js
 delete mode 100644 examples/javascript/grovemd-stepper.js
 delete mode 100644 examples/javascript/grovemd.js
 delete mode 100644 examples/javascript/grovemoisture.js
 delete mode 100644 examples/javascript/groveo2.js
 delete mode 100644 examples/javascript/groverelay.js
 delete mode 100644 examples/javascript/groverotary.js
 delete mode 100644 examples/javascript/grovescam.js
 delete mode 100644 examples/javascript/groveslide.js
 delete mode 100644 examples/javascript/grovespeaker.js
 delete mode 100644 examples/javascript/grovetemp.js
 delete mode 100644 examples/javascript/groveultrasonic.js
 delete mode 100644 examples/javascript/grovevdiv.js
 delete mode 100644 examples/javascript/grovewater.js
 delete mode 100644 examples/javascript/grovewfs.js
 delete mode 100644 examples/javascript/gsr.js
 delete mode 100644 examples/javascript/guvas12d.js
 delete mode 100644 examples/javascript/h3lis331dl.js
 delete mode 100644 examples/javascript/h803x.js
 delete mode 100644 examples/javascript/hcsr04.js
 delete mode 100644 examples/javascript/hdxxvxta.js
 delete mode 100644 examples/javascript/hka5.js
 delete mode 100644 examples/javascript/hm11.js
 delete mode 100644 examples/javascript/hmc5883l.js
 delete mode 100644 examples/javascript/hmtrp.js
 delete mode 100644 examples/javascript/hp20x.js
 delete mode 100644 examples/javascript/ht9170.js
 delete mode 100644 examples/javascript/htu21d.js
 delete mode 100644 examples/javascript/hwxpxx.js
 delete mode 100644 examples/javascript/hx711.js
 delete mode 100644 examples/javascript/ili9341.js
 delete mode 100644 examples/javascript/ims.js
 delete mode 100644 examples/javascript/ina132.js
 delete mode 100644 examples/javascript/isd1820.js
 delete mode 100644 examples/javascript/itg3200.js
 delete mode 100644 examples/javascript/jhd1313m1-lcd.js
 delete mode 100644 examples/javascript/joystick12.js
 delete mode 100644 examples/javascript/kx122.js
 delete mode 100755 examples/javascript/kxtj3.js
 delete mode 100644 examples/javascript/l298-stepper.js
 delete mode 100644 examples/javascript/l298.js
 delete mode 100644 examples/javascript/lcdks.js
 delete mode 100644 examples/javascript/ldt0028.js
 delete mode 100644 examples/javascript/le910.js
 delete mode 100644 examples/javascript/led.js
 delete mode 100644 examples/javascript/light.js
 delete mode 100644 examples/javascript/linefinder.js
 delete mode 100644 examples/javascript/lis2ds12.js
 delete mode 100644 examples/javascript/lis3dh.js
 delete mode 100644 examples/javascript/lm35.js
 delete mode 100644 examples/javascript/loudness.js
 delete mode 100644 examples/javascript/lsm303agr.js
 delete mode 100644 examples/javascript/lsm303d.js
 delete mode 100644 examples/javascript/lsm303dhl.js
 delete mode 100644 examples/javascript/lsm6ds3h.js
 delete mode 100644 examples/javascript/lsm6dsl.js
 delete mode 100644 examples/javascript/lsm9ds0.js
 delete mode 100644 examples/javascript/m24lr64e.js
 delete mode 100644 examples/javascript/max30100.js
 delete mode 100644 examples/javascript/maxsonarez.js
 delete mode 100644 examples/javascript/mb704x.js
 delete mode 100644 examples/javascript/mcp2515-txrx.js
 delete mode 100644 examples/javascript/mcp2515.js
 delete mode 100644 examples/javascript/mcp9808.js
 delete mode 100644 examples/javascript/md-stepper.js
 delete mode 100644 examples/javascript/md.js
 delete mode 100644 examples/javascript/mg811.js
 delete mode 100644 examples/javascript/mhz16.js
 delete mode 100644 examples/javascript/mic.js
 delete mode 100644 examples/javascript/micsv89.js
 delete mode 100644 examples/javascript/mma7361.js
 delete mode 100644 examples/javascript/mma7660.js
 delete mode 100644 examples/javascript/moisture.js
 delete mode 100644 examples/javascript/mpr121.js
 delete mode 100644 examples/javascript/mpu60x0.js
 delete mode 100644 examples/javascript/mpu9150.js
 delete mode 100644 examples/javascript/mpu9250.js
 delete mode 100644 examples/javascript/mq2.js
 delete mode 100644 examples/javascript/mq3.js
 delete mode 100644 examples/javascript/mq303a.js
 delete mode 100644 examples/javascript/mq4.js
 delete mode 100644 examples/javascript/mq5.js
 delete mode 100644 examples/javascript/mq6.js
 delete mode 100644 examples/javascript/mq7.js
 delete mode 100644 examples/javascript/mq8.js
 delete mode 100644 examples/javascript/mq9.js
 delete mode 100644 examples/javascript/ms5611.js
 delete mode 100644 examples/javascript/ms5803.js
 delete mode 100644 examples/javascript/nlgpio16.js
 delete mode 100644 examples/javascript/nmea_gps.js
 delete mode 100644 examples/javascript/nmea_gps_i2c.js
 delete mode 100644 examples/javascript/nunchuck.js
 delete mode 100644 examples/javascript/o2.js
 delete mode 100644 examples/javascript/oled_ssd1306.js
 delete mode 100644 examples/javascript/oled_ssd1308.js
 delete mode 100644 examples/javascript/oled_ssd1327.js
 delete mode 100644 examples/javascript/otp538u.js
 delete mode 100644 examples/javascript/ozwdump.js
 delete mode 100644 examples/javascript/p9813.js
 delete mode 100644 examples/javascript/pca9685.js
 delete mode 100644 examples/javascript/pn532-writeurl.js
 delete mode 100644 examples/javascript/pn532.js
 delete mode 100644 examples/javascript/ppd42ns.js
 delete mode 100644 examples/javascript/relay.js
 delete mode 100644 examples/javascript/rfr359f.js
 delete mode 100644 examples/javascript/rgbringcoder.js
 delete mode 100644 examples/javascript/rhusb.js
 delete mode 100644 examples/javascript/rn2903-p2p-rx.js
 delete mode 100644 examples/javascript/rn2903-p2p-tx.js
 delete mode 100644 examples/javascript/rn2903.js
 delete mode 100644 examples/javascript/rotary.js
 delete mode 100644 examples/javascript/rotaryencoder.js
 delete mode 100644 examples/javascript/rpr220.js
 delete mode 100644 examples/javascript/rsc.js
 delete mode 100644 examples/javascript/scam.js
 delete mode 100644 examples/javascript/sensortemplate.js
 delete mode 100644 examples/javascript/sht1x.js
 delete mode 100644 examples/javascript/si114x.js
 delete mode 100644 examples/javascript/slide.js
 delete mode 100644 examples/javascript/sm130.js
 delete mode 100644 examples/javascript/speaker.js
 delete mode 100644 examples/javascript/speaker_pwm.js
 delete mode 100644 examples/javascript/st7735.js
 delete mode 100644 examples/javascript/stepmotor.js
 delete mode 100644 examples/javascript/sx1276-fsk.js
 delete mode 100644 examples/javascript/sx1276-lora.js
 delete mode 100644 examples/javascript/sx6119.js
 delete mode 100644 examples/javascript/t3311.js
 delete mode 100644 examples/javascript/t8100.js
 delete mode 100644 examples/javascript/ta12200.js
 delete mode 100644 examples/javascript/tb7300.js
 delete mode 100644 examples/javascript/tca9548.js
 delete mode 100644 examples/javascript/tcs3414cs.js
 delete mode 100644 examples/javascript/teams.js
 delete mode 100644 examples/javascript/temperature.js
 delete mode 100644 examples/javascript/tex00.js
 delete mode 100644 examples/javascript/tm1637.js
 delete mode 100644 examples/javascript/tp401.js
 delete mode 100644 examples/javascript/tsl2561.js
 delete mode 100644 examples/javascript/ttp223.js
 delete mode 100644 examples/javascript/tzemt400.js
 delete mode 100644 examples/javascript/uln200xa.js
 delete mode 100644 examples/javascript/ultrasonic.js
 delete mode 100644 examples/javascript/urm37-uart.js
 delete mode 100644 examples/javascript/urm37.js
 delete mode 100644 examples/javascript/vcap.js
 delete mode 100644 examples/javascript/vdiv.js
 delete mode 100644 examples/javascript/veml6070.js
 delete mode 100644 examples/javascript/water.js
 delete mode 100644 examples/javascript/waterlevel.js
 delete mode 100644 examples/javascript/wfs.js
 delete mode 100644 examples/javascript/wheelencoder.js
 delete mode 100644 examples/javascript/wt5001.js
 delete mode 100644 examples/javascript/xbee.js
 delete mode 100644 examples/javascript/yg1006.js
 delete mode 100644 examples/javascript/zfm20-register.js
 delete mode 100644 examples/javascript/zfm20.js

diff --git a/examples/CMakeLists.txt b/examples/CMakeLists.txt
deleted file mode 100644
index 3bc7537..0000000
--- a/examples/CMakeLists.txt
+++ /dev/null
@@ -1,132 +0,0 @@
-# Add an example executable target for the provided source file which depends
-# on a UPM library target.  Strings after the first '-' are ignored.
-#
-# Usage:
-#   add_example(source_file TARGETS <target0> <target1> <targetn> SUFFIX <target_suffix>)
-#
-# Parameters:
-#   source_file - C/C++ source file. Filename must follow a specific format:
-#       <library>-[additional].c(xx)
-#       library: Name of UPM library required by example
-#       -additional: Any other string used to identify the example
-#   TARGETS - Additional dependency target/s required to BUILD/RUN this example.  If TARGETS is
-#       set, these are in addition to the dependency library provided by the example filename.
-#   SUFFIX - Provide a means to differentiate between C/C++ dependency targets and
-#       example names.  Leave empty for CXX examples. Use '-c' for c targets.
-#           SUFFIX  Example file  Dependency target  Example binary
-#           ------  ------------  -----------------  --------------
-#           "-c"    foo.c         foo-c              foo-example-c
-#                   foo.cxx       foo                foo-example-cxx
-#
-# Parent scope variable:
-#   example_src_list - Any example target which is successfully created by
-#       add_example will be removed from the parent scope variable
-#       example_src_list (if it exists).  This provides a means to handle
-#       special case examples BEFORE handling all files in example_src_list.
-#
-# Examples:
-#   # Creates sensorfoo-example-cxx, depends on target: sensorfoo
-#   add_example(sensorfoo.cxx)
-#
-#   # Creates sensorfoo-example-c, depends on target: sensorfoo-c
-#   add_example(sensorfoo.c SUFFIX "-c")
-#
-#   # Creates sensorfoo-bar-example-c, depends on target: sensorfoo-c
-#   add_example(sensorfoo-bar.c SUFFIX "-c")
-#
-#   # Creates testfoobar-cxx, depends on targets: blib, blah
-#   add_example(testfoobar.c TARGETS blib blah)
-#
-#   Examples:
-#       a110x.c             Requires libupmc-a110x
-#       lcm1602-i2c.c       Requires libupmc-lcm1602
-#       bmp280-bme280.c     Requires libupmc-bmp280
-#       lcd-eboled.cxx   Requires libupm-lcd
-#
-#
-function (add_example example_src)
-    set (oneValueArgs SUFFIX)
-    set (multiValueArgs TARGETS)
-    # Parse function parameters
-    cmake_parse_arguments(add_example "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
-
-    # Attempt to remove this example source file from a list of example
-    # sources.  This allows for handling special case examples.
-    list (REMOVE_ITEM example_src_list ${example_src})
-    set (example_src_list ${example_src_list} PARENT_SCOPE)
-
-    # Get the base filename from the full filename
-    # For file /some/path/to/sensorfoo-bar.c, example_name = sensorfoo-bar
-    get_filename_component(example_name ${example_src} NAME_WE)
-
-    # Parse out <library>
-    # Example: sensorfoo-bar.c, library = sensorfoo
-    string (REPLACE "-" ";" split_name ${example_name})
-    list (GET split_name 0 library_name)
-
-    # Parse dependency target name from example_src filename (add on suffix)
-    # For sensorfoo, lib_target_names = sensorfoo-c
-    set (lib_target_names "${library_name}${add_example_SUFFIX}")
-
-    # If TARGETS is provided, add additional dependency targets
-    if (add_example_TARGETS)
-        list (APPEND lib_target_names "${add_example_TARGETS}")
-    endif ()
-
-    # Unfortunately, c++ and c library targets are not named the same. If
-    # no suffix is provided, assume C++ and add a suffix of -cxx to the
-    # example target name
-    #           library         example target
-    #       c:  sensorfoo-c     sensorfoo-bar-example-c
-    #     cxx:  sensorfoo       sensorfoo-bar-example-cxx
-    if (NOT add_example_SUFFIX)
-        set(add_example_SUFFIX "-cxx")
-    endif ()
-
-    # Create the target name for this example: mylibrary-bar-example-c
-    set (this_target_name "${example_name}-example${add_example_SUFFIX}")
-
-    # If a dependency target does NOT exist, print a warning and skip
-    foreach(_dep_target ${lib_target_names})
-        if (NOT TARGET ${_dep_target})
-            message(STATUS "Example ${example_src} is missing a required CMake target (${_dep_target}), skipping...")
-            return()
-        endif ()
-    endforeach ()
-
-    # Create an executable target for this example
-    add_executable (${this_target_name} ${example_src})
-
-    # Add each dependency to the library target
-    foreach(_dep_target ${lib_target_names})
-        target_link_libraries(${this_target_name} ${_dep_target} ${CMAKE_THREAD_LIBS_INIT} utilities-c)
-    endforeach ()
-endfunction (add_example example_src)
-
-# Add subdirectories if BUILDEXAMPLES=on
-if(BUILDEXAMPLES)
-    # Add C examples
-    add_subdirectory (c)
-
-    # Add C++ examples?
-    if (BUILDCPP)
-        add_subdirectory (c++)
-    endif ()
-
-    # Add java examples?
-    if(BUILDSWIGJAVA)
-        add_subdirectory (java)
-    endif()
-
-    # Add all examples as an install component (if building examples)
-    install (DIRECTORY ${PROJECT_SOURCE_DIR}/examples
-        DESTINATION ${CMAKE_INSTALL_DATADIR}/upm
-        COMPONENT ${CMAKE_PROJECT_NAME}-examples
-        FILES_MATCHING
-            PATTERN "*.c"
-            PATTERN "*.cxx"
-            PATTERN "*.hpp"
-            PATTERN "*.java"
-            PATTERN "*.js"
-            PATTERN "*.py")
-endif()
diff --git a/examples/c++/CMakeLists.txt b/examples/c++/CMakeLists.txt
deleted file mode 100644
index 6855335..0000000
--- a/examples/c++/CMakeLists.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# Create an list of all C++ source files in this directory
-file (GLOB example_src_list RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cxx")
-
-# - Handle special cases here --------------------------------------------------
-
-# Test humidity interface for 2 sensor libraries
-add_example(interfaces-humiditysensor.cxx TARGETS si7005 bmp280)
-# Test pressure interface for 2 sensor libraries
-add_example(interfaces-pressuresensor.cxx TARGETS bmp280 bmpx8x)
-# Test temperature interface for 3 sensor libraries
-add_example(interfaces-temperaturesensor.cxx TARGETS bmp280 bmpx8x si7005)
-# Test light interface for 2 sensor libraries
-add_example(interfaces-lightsensor.cxx TARGETS si1132 max44009)
-# Test light controller interface for 3 sensor libraries
-add_example(interfaces-lightcontroller.cxx TARGETS lp8860 ds1808lc hlg150h)
-
-# - Create an executable for all other src files in this directory -------------
-foreach (_example_src ${example_src_list})
-    add_example(${_example_src})
-endforeach ()
diff --git a/examples/c++/a110x-intr.cxx b/examples/c++/a110x-intr.cxx
deleted file mode 100644
index a19280e..0000000
--- a/examples/c++/a110x-intr.cxx
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stddef.h>
-
-#include "a110x.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-// Our pulse counter
-volatile unsigned int counter = 0;
-
-// Our interrupt handler
-void
-hallISR(void* arg)
-{
-    counter++;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an A110X sensor on digital pin D2
-    upm::A110X hall(2);
-
-    // This example uses a user-supplied interrupt handler to count
-    // pulses that occur when a magnetic field of the correct polarity
-    // is detected.  This could be used to measure the rotations per
-    // minute (RPM) of a rotor for example.
-
-    hall.installISR(hallISR, NULL);
-
-    while (shouldRun) {
-        cout << "Pulses detected: " << counter << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/a110x.cxx b/examples/c++/a110x.cxx
deleted file mode 100644
index 3acb086..0000000
--- a/examples/c++/a110x.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "a110x.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an A110X sensor on digital pin D2
-    upm::A110X hall(2);
-
-    // check every second for the presence of a magnetic field (south
-    // polarity)
-    while (shouldRun) {
-        bool val = hall.magnetDetected();
-        if (val)
-            cout << "Magnet (south polarity) detected." << endl;
-        else
-            cout << "No magnet detected." << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/abp.cxx b/examples/c++/abp.cxx
deleted file mode 100644
index e13b0a0..0000000
--- a/examples/c++/abp.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "abp.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an ABP sensor on i2c bus 0
-    upm::ABP abp(0, ABP_DEFAULT_ADDRESS);
-    while (shouldRun) {
-        abp.update();
-        cout << "Retrieved pressure: " << abp.getPressure() << endl;
-        cout << "Retrieved Temperature: " << abp.getTemperature() << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ad8232.cxx b/examples/c++/ad8232.cxx
deleted file mode 100644
index fe8de29..0000000
--- a/examples/c++/ad8232.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ad8232.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Ad8232 sensor on digital pins 10 (LO+), 11 (LO-)
-    // and an analog pin, 0 (OUTPUT)
-    upm::AD8232 ad8232(10, 11, 0);
-
-    // Output the raw numbers from the ADC, for plotting elsewhere.
-    // A return of 0 indicates a Lead Off (LO) condition.
-    // In theory, this data could be fed to software like Processing
-    // (https://www.processing.org/) to plot the data just like an
-    // EKG you would see in a hospital.
-    while (shouldRun) {
-        cout << ad8232.value() << endl;
-        upm_delay_us(1000);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/adafruitms1438-stepper.cxx b/examples/c++/adafruitms1438-stepper.cxx
deleted file mode 100644
index 64aef41..0000000
--- a/examples/c++/adafruitms1438-stepper.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "adafruitms1438.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an Adafruit MS 1438 on I2C bus 0
-
-    upm::AdafruitMS1438 ms(ADAFRUITMS1438_I2C_BUS, ADAFRUITMS1438_DEFAULT_I2C_ADDR);
-
-    // Setup for use with a stepper motor connected to the M1 & M2 ports
-
-    // set a PWM period of 50Hz
-
-    // disable first, to be safe
-    ms.disableStepper(AdafruitMS1438::STEPMOTOR_M12);
-
-    // configure for a NEMA-17, 200 steps per revolution
-    ms.stepConfig(AdafruitMS1438::STEPMOTOR_M12, 200);
-
-    // set speed at 10 RPM's
-    ms.setStepperSpeed(AdafruitMS1438::STEPMOTOR_M12, 10);
-    ms.setStepperDirection(AdafruitMS1438::STEPMOTOR_M12, AdafruitMS1438::DIR_CW);
-
-    // enable
-    cout << "Enabling..." << endl;
-    ms.enableStepper(AdafruitMS1438::STEPMOTOR_M12);
-
-    cout << "Rotating 1 full revolution at 10 RPM speed." << endl;
-    ms.stepperSteps(AdafruitMS1438::STEPMOTOR_M12, 200);
-
-    cout << "Sleeping for 2 seconds..." << endl;
-    upm_delay(2);
-    cout << "Rotating 1/2 revolution in opposite direction at 10 RPM speed." << endl;
-
-    ms.setStepperDirection(AdafruitMS1438::STEPMOTOR_M12, AdafruitMS1438::DIR_CCW);
-    ms.stepperSteps(AdafruitMS1438::STEPMOTOR_M12, 100);
-
-    cout << "Disabling..." << endl;
-    ms.disableStepper(AdafruitMS1438::STEPMOTOR_M12);
-
-    cout << "Exiting" << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/adafruitms1438.cxx b/examples/c++/adafruitms1438.cxx
deleted file mode 100644
index a151ddb..0000000
--- a/examples/c++/adafruitms1438.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "adafruitms1438.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an Adafruit MS 1438 on I2C bus 0
-
-    upm::AdafruitMS1438 ms(ADAFRUITMS1438_I2C_BUS, ADAFRUITMS1438_DEFAULT_I2C_ADDR);
-
-    // Setup for use with a DC motor connected to the M3 port
-
-    // set a PWM period of 50Hz
-    ms.setPWMPeriod(50);
-
-    // disable first, to be safe
-    ms.disableMotor(AdafruitMS1438::MOTOR_M3);
-
-    // set speed at 50%
-    ms.setMotorSpeed(AdafruitMS1438::MOTOR_M3, 50);
-    ms.setMotorDirection(AdafruitMS1438::MOTOR_M3, AdafruitMS1438::DIR_CW);
-
-    cout << "Spin M3 at half speed for 3 seconds, then reverse for 3 seconds." << endl;
-
-    ms.enableMotor(AdafruitMS1438::MOTOR_M3);
-
-    upm_delay(3);
-
-    cout << "Reversing M3" << endl;
-    ms.setMotorDirection(AdafruitMS1438::MOTOR_M3, AdafruitMS1438::DIR_CCW);
-
-    upm_delay(3);
-
-    cout << "Stopping M3" << endl;
-    ms.disableMotor(AdafruitMS1438::MOTOR_M3);
-
-    cout << "Exiting" << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/adafruitss.cxx b/examples/c++/adafruitss.cxx
deleted file mode 100644
index 54115ea..0000000
--- a/examples/c++/adafruitss.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Stan Gifford <stan@gifford.id.au>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-/**
- * Description
- * Demo program for Adafruit 16 channel servo shield/controller
- * Physical setup for tests is a single servo attached to one channel.
- * Note - when 3 or more GWS servos attached results unpredictable.
- * Adafruit do recommend a Cap be installed on the board which should alleviate
- * the issue.
- * I (and Adafruit) are unable to give any Capacitor sizing data.
- */
-
-#include <iostream>
-
-#include "adafruitss.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    int n;
-
-    //! [Interesting]
-    upm::adafruitss servos(6, 0x40);
-
-    for (;;) {
-        cout << "Setting all to 0" << endl;
-        for (n = 0; n < 16; n++)
-            servos.servo(n, 1, 0); // GWS Mini Servo = Type 1.
-        upm_delay_us(1000000);     // Wait 1 second
-
-        cout << "Setting all to 45" << endl;
-        for (n = 0; n < 16; n++)
-            servos.servo(n, 1, 45);
-        upm_delay_us(1000000); // Wait 1 second
-
-        cout << "Setting all to 90" << endl;
-        for (n = 0; n < 16; n++)
-            servos.servo(n, 1, 90);
-        upm_delay_us(1000000); // Wait 1 second
-
-        cout << "Setting all to 135" << endl;
-        for (n = 0; n < 16; n++)
-            servos.servo(n, 1, 135);
-        upm_delay_us(1000000); // Wait 1 second
-
-        cout << "Setting all to 180" << endl;
-        for (n = 0; n < 16; n++)
-            servos.servo(n, 1, 160);
-        upm_delay_us(2000000); // Wait 1 second
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/adc121c021.cxx b/examples/c++/adc121c021.cxx
deleted file mode 100644
index 5fbb452..0000000
--- a/examples/c++/adc121c021.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "adc121c021.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an ADC121C021 on I2C bus 0
-
-    upm::ADC121C021 adc(ADC121C021_I2C_BUS, ADC121C021_DEFAULT_I2C_ADDR);
-
-    // An analog sensor, such as a Grove light sensor,
-    // must be attached to the adc
-    // Prints the value and corresponding voltage every 50 milliseconds
-    while (shouldRun) {
-        uint16_t val = adc.value();
-        cout << "ADC value: " << val << " Volts = " << adc.valueToVolts(val) << endl;
-        upm_delay_us(50000);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/adis16448.cxx b/examples/c++/adis16448.cxx
deleted file mode 100644
index 8fe576b..0000000
--- a/examples/c++/adis16448.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-//////////////////////////////////////////////////////////////////////////////////////
-// The MIT License (MIT)
-//
-// Submit Date: 03/09/2015
-// Author: Juan Jose Chong <juanjchong@gmail.com>
-// Copyright (c) 2015 Juan Jose Chong
-//
-//////////////////////////////////////////////////////////////////////////////////////
-// adis16448.cxx
-//////////////////////////////////////////////////////////////////////////////////////
-//
-// This example code runs on an Intel Edison and uses mraa to acquire data
-// from an ADIS16448. This data is then scaled and printed onto the terminal.
-//
-// This software has been tested to connect to an ADIS16448 through a level
-// shifter
-// such as the TI TXB0104. The SPI lines (DIN, DOUT, SCLK, /CS) are all wired
-// through
-// the level shifter and the ADIS16448 is also being powered by the Intel
-// Edison.
-//
-// Permission is hereby granted, free of charge, to any person obtaining
-// a copy of this software and associated documentation files (the
-// "Software"), to deal in the Software without restriction, including
-// without limitation the rights to use, copy, modify, merge, publish,
-// distribute, sublicense, and/or sell copies of the Software, and to
-// permit persons to whom the Software is furnished to do so, subject to
-// the following conditions:
-//
-// The above copyright notice and this permission notice shall be
-// included in all copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-//
-//////////////////////////////////////////////////////////////////////////////////////
-#include <iostream>
-
-#include "adis16448.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    while (true) {
-        //! [Interesting]
-        upm::ADIS16448 imu(0, 3); // upm::ADIS16448(SPI,RST)
-
-        // Read the specified register, scale it, and display it on the screen
-        std::cout << "XGYRO_OUT:" << imu.gyroScale(imu.regRead(XGYRO_OUT)) << std::endl;
-        std::cout << "YGYRO_OUT:" << imu.gyroScale(imu.regRead(YGYRO_OUT)) << std::endl;
-        std::cout << "ZGYRO_OUT:" << imu.gyroScale(imu.regRead(ZGYRO_OUT)) << std::endl;
-        std::cout << " " << std::endl;
-        std::cout << "XACCL_OUT:" << imu.accelScale(imu.regRead(XACCL_OUT)) << std::endl;
-        std::cout << "YACCL_OUT:" << imu.accelScale(imu.regRead(YACCL_OUT)) << std::endl;
-        std::cout << "ZACCL_OUT:" << imu.accelScale(imu.regRead(ZACCL_OUT)) << std::endl;
-        std::cout << " " << std::endl;
-        //! [Interesting]
-        upm_delay(1);
-    }
-    return (0);
-}
diff --git a/examples/c++/ads1x15-adc-sensor.cxx b/examples/c++/ads1x15-adc-sensor.cxx
deleted file mode 100644
index ee6bf4b..0000000
--- a/examples/c++/ads1x15-adc-sensor.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <exception>
-#include <iostream>
-#include <stddef.h>
-
-#include "ads1015.hpp"
-#include "iADC.hpp"
-#include "mraa/gpio.hpp"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-#define FT4222_I2C_BUS 0
-#define EDISON_GPIO_SI7005_CS 20
-
-int
-main()
-{
-    /* Create an instance of the ADS1015 sensor */
-    upm::ADS1015 sensor(EDISON_I2C_BUS);
-    mraa::Gpio gpio(EDISON_GPIO_SI7005_CS);
-    gpio.dir(mraa::DIR_OUT_HIGH);
-
-    /* Show usage from the IADC interface */
-    upm::IADC* adc = static_cast<upm::IADC*>(&sensor);
-
-    if (adc == NULL) {
-        std::cout << "ADC not detected" << std::endl;
-        return 1;
-    }
-    std::cout << "ADC " << adc->getModuleName() << " detected. ";
-    std::cout << adc->getNumInputs() << " inputs available" << std::endl;
-    while (true) {
-        for (unsigned int i = 0; i < adc->getNumInputs(); ++i) {
-            std::cout << "Input " << i;
-            try {
-                float voltage = adc->getVoltage(i);
-                std::cout << ": Voltage = " << voltage << "V" << std::endl;
-            } catch (std::exception& e) {
-                std::cerr << e.what() << std::endl;
-            }
-        }
-        upm_delay(1);
-    }
-
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/ads1x15-ads1015.cxx b/examples/c++/ads1x15-ads1015.cxx
deleted file mode 100644
index 7196817..0000000
--- a/examples/c++/ads1x15-ads1015.cxx
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-/* This example demonstrates how to use one the ADS1015 ADC on the Grove Joule
- * Shield or the Sparkfun ADC Block for Edison with devices that output a small
- * differential voltage (e.g. geophones, piezoelectric bands or pads,
- * thermocouples).
- */
-
-#include <fstream>
-#include <iostream>
-#include <string>
-#include <thread>
-
-#include "ads1015.hpp"
-#include "ads1x15.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool running = true; // Controls main read/write loop
-
-// Thread function
-void
-stop()
-{
-    upm_delay(10);
-    running = false;
-}
-
-int
-main()
-{
-    //! [Interesting]
-    long id = 0;                        // Sample number
-    string fileName = "./ads1015.data"; // Output filename
-    ofstream f;
-
-    // Initialize and configure the ADS1015
-    ADS1015 ads1015(0, 0x48);
-
-    // Put the ADC into differential mode for pins A0 and A1
-    ads1015.getSample(ADS1X15::DIFF_0_1);
-
-    // Set the gain based on expected VIN range to -/+ 2.048 V
-    // Can be adjusted based on application to as low as -/+ 0.256 V, see API
-    // documentation for details
-    ads1015.setGain(ADS1X15::GAIN_TWO);
-
-    // Set the sample rate to 3300 samples per second (max) and turn on continuous
-    // sampling
-    ads1015.setSPS(ADS1015::SPS_3300);
-    ads1015.setContinuous(true);
-
-    // Enable exceptions from the output stream
-    f.exceptions(ofstream::failbit | ofstream::badbit);
-    // Open the file
-    try {
-        f.open(fileName);
-
-        // Output formatting
-        f.setf(ios_base::fixed);
-        f.precision(7);
-
-        // Start the thread that will stop logging after 10 seconds
-        thread timer(stop);
-
-        // Read sensor data and write it to the output file every ms
-        while (running) {
-            f << id++ << " " << ads1015.getLastSample() << endl;
-            upm_delay_us(1000);
-        }
-
-        // Clean-up and exit
-        timer.join();
-        f.close();
-    } catch (ios_base::failure& e) {
-        cout << "Failed to write to file: " << e.what() << endl;
-        return 1;
-    }
-    cout << "Wrote " << id << " samples to file: " << fileName << endl;
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/ads1x15-ads1115.cxx b/examples/c++/ads1x15-ads1115.cxx
deleted file mode 100644
index 2c96474..0000000
--- a/examples/c++/ads1x15-ads1115.cxx
+++ /dev/null
@@ -1,109 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-/* This example demonstrates how to use one of the ADS1115 ADCs on the
- * DFRobot Joule Shield with devices that output a small differential
- * voltage (e.g. geophones, piezoelectric bands or pads, thermocouples).
- */
-
-#include <fstream>
-#include <iostream>
-#include <string>
-#include <thread>
-
-#include "ads1115.hpp"
-#include "ads1x15.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool running = true; // Controls main read/write loop
-
-// Thread function
-void
-stop()
-{
-    upm_delay(10);
-    running = false;
-}
-
-int
-main()
-{
-    //! [Interesting]
-    long id = 0;                        // Sample number
-    string fileName = "./ads1115.data"; // Output filename
-    ofstream f;
-
-    // Initialize and configure the ADS1115 for the SM-24 Geophone
-    // There are two ADS1115 chips on the DFRobot Joule Shield on the same I2C bus
-    //     - 0x48 gives access to pins A0 - A3
-    //     - 0x49 gives access to pins A4 - A7
-    ADS1115 ads1115(0, 0x48);
-
-    // Put the ADC into differential mode for pins A0 and A1,
-    // the SM-24 Geophone is connected to these pins
-    ads1115.getSample(ADS1X15::DIFF_0_1);
-
-    // Set the gain based on expected VIN range to -/+ 2.048 V
-    // Can be adjusted based on application to as low as -/+ 0.256 V, see API
-    // documentation for details
-    ads1115.setGain(ADS1X15::GAIN_TWO);
-
-    // Set the sample rate to 860 samples per second (max) and turn on continuous
-    // sampling
-    ads1115.setSPS(ADS1115::SPS_860);
-    ads1115.setContinuous(true);
-
-    // Enable exceptions from the output stream
-    f.exceptions(ofstream::failbit | ofstream::badbit);
-    // Open the file
-    try {
-        f.open(fileName);
-
-        // Output formatting
-        f.setf(ios_base::fixed);
-        f.precision(7);
-
-        // Start the thread that will stop logging after 10 seconds
-        thread timer(stop);
-
-        // Read sensor data and write it to the output file every ms
-        while (running) {
-            f << id++ << " " << ads1115.getLastSample() << endl;
-            upm_delay_us(1000);
-        }
-
-        // Clean-up and exit
-        timer.join();
-        f.close();
-    } catch (ios_base::failure& e) {
-        cout << "Failed to write to file: " << e.what() << endl;
-        return 1;
-    }
-    cout << "Wrote " << id << " samples to file: " << fileName << endl;
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/ads1x15.cxx b/examples/c++/ads1x15.cxx
deleted file mode 100644
index b41f303..0000000
--- a/examples/c++/ads1x15.cxx
+++ /dev/null
@@ -1,327 +0,0 @@
-/*
- * Author: Marc Graham <marc@m2ag.net>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "ads1015.hpp"
-#include "ads1115.hpp"
-#include "ads1x15.hpp"
-
-int
-main()
-{
-    using namespace std;
-    using namespace upm;
-    int command;
-    //! [Interesting]
-    // Select the device you are testing here and adjust case 6 for the correct
-    // sample rates.
-    upm::ADS1115 ads(1, 0x49);
-    float inputVoltage;
-    int ans;
-
-    do {
-        cout << endl;
-        cout << "1 - get Conversion \t";
-        cout << "2 - get last conversion" << endl;
-        cout << "3 - get Gain \t\t";
-        cout << "4 - set Gain" << endl;
-        ;
-        cout << "5 - get Data Rate \t";
-        cout << "6 - set Data Rate" << endl;
-        cout << "7 - Set Upper Threshold \t";
-        cout << "8 - Set Lower Threshold \t";
-        cout << "9 - Display Thresholds \t";
-        cout << "10 - Set Default Thresholds \t";
-        cout << "11 - Set conversion ready" << endl;
-        cout << "12 - get Comp Que \t";
-        cout << "13 - set Comp Que" << endl;
-        cout << "14 - get Comp Pol \t";
-        cout << "15 - set Comp Pol" << endl;
-        cout << "16 - get Comp mode \t";
-        cout << "17 - set Comp mode " << endl;
-        cout << "18 - get Comp Latch\t";
-        cout << "19 - set Comp Latch " << endl;
-        cout << "20 - get Continuous \t";
-        cout << "21 - set Continuous \t" << endl;
-        cout << "-1 - exit" << endl;
-        cout << "Enter a command: ";
-        cin >> command;
-
-        switch (command) {
-            case 2:
-                cout << ads.getLastSample() << endl;
-                break;
-            case 3:
-                cout << std::hex << ads.getGain() << endl;
-                break;
-            case 5:
-                cout << std::hex << ads.getSPS() << endl;
-                break;
-            case 4:
-                int gain;
-                ADS1015::ADSGAIN set_gain;
-                cout << "select one of the following:" << endl;
-                cout << "1 -> gain 2/3 \t 2 -> gain1 \t 3 -> gain 2" << endl;
-                cout << "4 -> gain 4 \t 5 -> gain 8 \t 6 -> gain 15" << endl;
-                cin >> gain;
-                switch (gain) {
-                    case 1:
-                        set_gain = ADS1X15::GAIN_TWOTHIRDS;
-                        break;
-                    case 2:
-                        set_gain = ADS1X15::GAIN_ONE;
-                        break;
-                    case 3:
-                        set_gain = ADS1X15::GAIN_TWO;
-                        break;
-                    case 4:
-                        set_gain = ADS1X15::GAIN_FOUR;
-                        break;
-                    case 5:
-                        set_gain = ADS1X15::GAIN_EIGHT;
-                        break;
-                    case 6:
-                        set_gain = ADS1X15::GAIN_SIXTEEN;
-                        break;
-                    default:
-                        set_gain = ADS1X15::GAIN_ONE;
-                }
-                ads.setGain(set_gain);
-                break;
-            case 6:
-                int rate;
-                /*ADS1015::ADSDATARATE set_rate;
-          cout << "select one of the following:" << endl;
-          cout << "1 -> SPS_120 \t 2 -> SPS_250 \t 3 -> SPS_490 \t 4 -> SPS_920" <<
-          endl;
-          cout << "5 -> SPS_1600 \t 6 -> SPS_2400 \t 7 -> SPS_3300" << endl;
-          cin >> rate;
-          switch(rate){
-          case 1:
-               set_rate = ADS1015::SPS_128;
-               break;
-          case 2:
-               set_rate = ADS1015::SPS_250;
-               break;
-          case 3:
-               set_rate = ADS1015::SPS_490;
-               break;
-          case 4:
-               set_rate = ADS1015::SPS_920;
-               break;
-          case 5:
-               set_rate = ADS1015::SPS_1600;
-               break;
-          case 6:
-               set_rate = ADS1015::SPS_2400;
-               break;
-          case 7:
-               set_rate = ADS1015::SPS_3300;
-               break;
-          default:
-               set_rate = ADS1015::SPS_1600;
-          } */
-                ADS1115::ADSDATARATE set_rate;
-                cout << "select one of the following:" << endl;
-                cout << "1 -> SPS_8 \t 2 -> SPS_16 \t 3 -> SPS_32 \t 4 -> SPS_64" << endl;
-                cout << "5 -> SPS_128 \t 6 -> SPS_250 \t 7 -> SPS_475 \t 8-> SPS_860" << endl;
-                cin >> rate;
-                switch (rate) {
-                    case 1:
-                        set_rate = ADS1115::SPS_8;
-                        break;
-                    case 2:
-                        set_rate = ADS1115::SPS_16;
-                        break;
-                    case 3:
-                        set_rate = ADS1115::SPS_32;
-                        break;
-                    case 4:
-                        set_rate = ADS1115::SPS_64;
-                        break;
-                    case 5:
-                        set_rate = ADS1115::SPS_128;
-                        break;
-                    case 6:
-                        set_rate = ADS1115::SPS_250;
-                        break;
-                    case 7:
-                        set_rate = ADS1115::SPS_475;
-                        break;
-                    case 8:
-                        set_rate = ADS1115::SPS_860;
-                        break;
-                    default:
-                        set_rate = ADS1115::SPS_128;
-                }
-
-                ads.setSPS(set_rate);
-                break;
-            case 1:
-                int mode;
-                ADS1X15::ADSMUXMODE set_mode;
-                cout << "select one of the following:" << endl;
-                cout << "1 -> MUX_0_1 \t 2 -> MUX_0_3 \t 3 -> MUX_1_3 \t 4 -> MUX_2_3" << endl;
-                cout << "5 -> SINGLE_0 \t 6 -> SINGLE_1 \t 7 -> SINGLE_2 \t 8 -> "
-                        "SINGLE_3"
-                     << endl;
-                cin >> mode;
-                switch (mode) {
-                    case 1:
-                        set_mode = ADS1X15::DIFF_0_1;
-                        break;
-                    case 2:
-                        set_mode = ADS1X15::DIFF_0_3;
-                        break;
-                    case 3:
-                        set_mode = ADS1X15::DIFF_1_3;
-                        break;
-                    case 4:
-                        set_mode = ADS1X15::DIFF_2_3;
-                        break;
-                    case 5:
-                        set_mode = ADS1X15::SINGLE_0;
-                        break;
-                    case 6:
-                        set_mode = ADS1X15::SINGLE_1;
-                        break;
-                    case 7:
-                        set_mode = ADS1X15::SINGLE_2;
-                        break;
-                    case 8:
-                        set_mode = ADS1X15::SINGLE_3;
-                        break;
-                    default:
-                        set_mode = ADS1X15::DIFF_0_1;
-                        break;
-                }
-                cout << ads.getSample(set_mode) << endl;
-                break;
-            case 7:
-                cout << " enter a float value: ";
-                cin >> inputVoltage;
-                ads.setThresh(ADS1115::THRESH_HIGH, inputVoltage);
-                break;
-            case 8:
-                cout << " enter a float value: ";
-                cin >> inputVoltage;
-                ads.setThresh(ADS1115::THRESH_LOW, inputVoltage);
-                break;
-            case 9:
-                cout << "Upper " << ads.getThresh(ADS1X15::THRESH_HIGH) << endl;
-                cout << "Lower " << ads.getThresh(ADS1X15::THRESH_LOW) << endl;
-                break;
-            case 10:
-                ads.setThresh(ADS1115::THRESH_DEFAULT);
-                break;
-            case 11:
-                ads.setThresh(ADS1015::CONVERSION_RDY);
-                break;
-            case 12:
-                cout << ads.getCompQue() << endl;
-                break;
-            case 13:
-                int que;
-                cout << "select one of the following:" << endl;
-                cout << "1 -> CQUE_1CONV \t 2 -> CQUE_2CONV \t 3 -> CQUE_3CONV \t 4 -> "
-                        "CQUE_NONE"
-                     << endl;
-                cin >> que;
-                switch (que) {
-                    case 1:
-                        ads.setCompQue(ADS1X15::CQUE_1CONV);
-                        break;
-                    case 2:
-                        ads.setCompQue(ADS1X15::CQUE_2CONV);
-                        break;
-                    case 3:
-                        ads.setCompQue(ADS1X15::CQUE_4CONV);
-                        break;
-                    case 4:
-                    default:
-                        ads.setCompQue(ADS1X15::CQUE_NONE);
-                        break;
-                }
-                break;
-            case 14:
-                cout << ads.getCompPol() << endl;
-                break;
-            case 15:
-                cout << "select one of the following:" << endl;
-                cout << "1 -> active high \t 2 -> active low" << endl;
-                cin >> ans;
-                if (ans == 1)
-                    ads.setCompPol(true);
-                else
-                    ads.setCompPol(false);
-                break;
-            case 16:
-                cout << ads.getCompMode() << endl;
-                break;
-            case 17:
-                cout << "select one of the following:" << endl;
-                cout << "1 -> Window \t 2 -> Traditional (default)" << endl;
-                cin >> ans;
-                if (ans == 1)
-                    ads.setCompMode(true);
-                else
-                    ads.setCompMode();
-                break;
-            case 18:
-                cout << ads.getCompLatch() << endl;
-                break;
-            case 19:
-                cout << "select one of the following:" << endl;
-                cout << "1 -> Latching  \t 2 -> Non-latching (default)" << endl;
-                cin >> ans;
-                if (ans == 1)
-                    ads.setCompLatch(true);
-                else
-                    ads.setCompLatch();
-                break;
-            case 20:
-                cout << ads.getContinuous() << endl;
-                break;
-            case 21:
-                cout << "select one of the following:" << endl;
-                cout << "1 -> Power Down (default)  \t 2 -> Continuous" << endl;
-                cin >> ans;
-                if (ans == 1)
-                    ads.setContinuous(true);
-                else
-                    ads.setContinuous();
-                break;
-            case -1:
-                break;
-            default:
-
-                break;
-        }
-    } while (command != -1);
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/adxl335.cxx b/examples/c++/adxl335.cxx
deleted file mode 100644
index 74b56a6..0000000
--- a/examples/c++/adxl335.cxx
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "adxl335.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an ADXL335 accelerometer on analog pins A0, A1, and A2
-    upm::ADXL335 accel(0, 1, 2);
-
-    cout << "Please make sure the sensor is completely still. Sleeping for"
-         << " 2 seconds." << endl;
-    upm_delay(2);
-    cout << "Calibrating..." << endl;
-
-    accel.calibrate();
-
-    while (shouldRun) {
-        int x, y, z;
-        float aX, aY, aZ;
-
-        accel.values(&x, &y, &z);
-        cout << "Raw Values: X: " << x << " Y: " << y << " Z: " << z << endl;
-
-        accel.acceleration(&aX, &aY, &aZ);
-        cout << "Acceleration: X: " << aX << "g" << endl;
-        cout << "Acceleration: Y: " << aY << "g" << endl;
-        cout << "Acceleration: Z: " << aZ << "g" << endl;
-        cout << endl;
-
-        upm_delay_us(200000);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/adxl345.cxx b/examples/c++/adxl345.cxx
deleted file mode 100644
index 29c515a..0000000
--- a/examples/c++/adxl345.cxx
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-
-#include "adxl345.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    int16_t* raw;
-    float* acc;
-
-    // Note: Sensor only works at 3.3V on the Intel Edison with Arduino breakout
-    upm::Adxl345 accel(0);
-
-    while (true) {
-        accel.update();                // Update the data
-        raw = accel.getRawValues();    // Read raw sensor data
-        acc = accel.getAcceleration(); // Read acceleration (g)
-        fprintf(stdout, "Current scale: 0x%2xg\n", accel.getScale());
-        fprintf(stdout, "Raw: %6d %6d %6d\n", raw[0], raw[1], raw[2]);
-        fprintf(stdout, "AccX: %5.2f g\n", acc[0]);
-        fprintf(stdout, "AccY: %5.2f g\n", acc[1]);
-        fprintf(stdout, "AccZ: %5.2f g\n", acc[2]);
-        upm_delay(1);
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/adxrs610.cxx b/examples/c++/adxrs610.cxx
deleted file mode 100644
index 0651d2c..0000000
--- a/examples/c++/adxrs610.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "adxrs610.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a ADXRS610 sensor on analog pin A0 (dataout), and
-    // analog A1 (temp out) with an analog reference voltage of
-    // 5.0
-    upm::ADXRS610 sensor(0, 1, 5.0);
-
-    // set a deadband region around the zero point to report 0.0 (optional)
-    sensor.setDeadband(0.015);
-
-    // Every tenth of a second, sample the ADXRS610 and output it's
-    // corresponding temperature and angular velocity
-
-    while (shouldRun) {
-        cout << "Vel (deg/s): " << sensor.getAngularVelocity() << endl;
-        cout << "Temp (C): " << sensor.getTemperature() << endl;
-
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/am2315.cxx b/examples/c++/am2315.cxx
deleted file mode 100644
index 30c3854..0000000
--- a/examples/c++/am2315.cxx
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: William Penner <william.penner@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "am2315.hpp"
-#include "upm_utilities.h"
-
-volatile int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        printf("\nCtrl-C received.\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    // Register signal handler
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    float humidity = 0.0;
-    float temperature = 0.0;
-
-    upm::AM2315 sensor(0, AM2315_I2C_ADDRESS);
-
-    sensor.testSensor();
-
-    while (!doWork) {
-        humidity = sensor.getHumidity();
-        temperature = sensor.getTemperature();
-
-        std::cout << "humidity value = " << humidity << ", temperature value = " << temperature
-                  << std::endl;
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/apa102.cxx b/examples/c++/apa102.cxx
deleted file mode 100644
index c2f26b5..0000000
--- a/examples/c++/apa102.cxx
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Yannick Adam <yannick.adam@gmail.com>
- * Copyright (c) 2016 Yannick Adam
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "apa102.hpp"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a strip of 30 LEDs on SPI bus 0
-    upm::APA102 ledStrip(800, 0);
-
-    // Set all LEDs to Red
-    ledStrip.setAllLeds(31, 255, 0, 0);
-
-    // Set a section (10 to 20) to blue
-    ledStrip.setLeds(10, 20, 31, 0, 0, 255);
-
-    // Set a single LED to green
-    ledStrip.setLed(15, 31, 0, 255, 0);
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/apds9002.cxx b/examples/c++/apds9002.cxx
deleted file mode 100644
index b4dea64..0000000
--- a/examples/c++/apds9002.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "apds9002.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Luminance sensor on analog pin A0
-    upm::APDS9002 luminance(0);
-
-    while (shouldRun) {
-        int val = luminance.value();
-        cout << "Luminance value is " << val << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/apds9930.cxx b/examples/c++/apds9930.cxx
deleted file mode 100644
index fd4cdf3..0000000
--- a/examples/c++/apds9930.cxx
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Lay, Kuan Loon <kuan.loon.lay@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "apds9930.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-    // Instantiate a Digital Proximity and Ambient Light sensor on iio device 4
-    upm::APDS9930 light_proximity(4);
-
-    // Kernel driver implement upm_delay 5000-5100us after enable illuminance
-    // sensor
-    light_proximity.enableIlluminance(true);
-
-    // Kernel driver implement upm_delay 5000-5100us after enable proximity sensor
-    light_proximity.enableProximity(true);
-
-    // Tested this value works. Please change it on your platform
-    upm_delay_us(120000);
-
-    while (shouldRun) {
-        float lux = light_proximity.getAmbient();
-        cout << "Luminance value is " << lux << endl;
-        float proximity = light_proximity.getProximity();
-        cout << "Proximity value is " << proximity << endl;
-        upm_delay(1);
-    }
-    light_proximity.enableProximity(false);
-    light_proximity.enableIlluminance(false);
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/at42qt1070.cxx b/examples/c++/at42qt1070.cxx
deleted file mode 100644
index 6acfb48..0000000
--- a/examples/c++/at42qt1070.cxx
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "at42qt1070.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-void
-printButtons(upm::AT42QT1070& touch)
-{
-    bool buttonPressed = false;
-    uint8_t buttons = touch.getButtons();
-
-    cout << "Buttons Pressed: ";
-    for (int i = 0; i < 7; i++) {
-        if (buttons & (1 << i)) {
-            cout << i << " ";
-            buttonPressed = true;
-        }
-    }
-
-    if (!buttonPressed)
-        cout << "None";
-
-    cout << endl;
-
-    if (touch.isCalibrating())
-        cout << "Calibration is occurring." << endl;
-
-    if (touch.isOverflowed())
-        cout << "Overflow was detected." << endl;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an AT42QT1070 on I2C bus 0
-
-    upm::AT42QT1070 touch(AT42QT1070_I2C_BUS, AT42QT1070_DEFAULT_I2C_ADDR);
-
-    while (shouldRun) {
-        touch.updateState();
-        printButtons(touch);
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bh1749.cxx b/examples/c++/bh1749.cxx
deleted file mode 100755
index 5ea5e4d..0000000
--- a/examples/c++/bh1749.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <iostream>
-#include <unistd.h>
-#include <stdexcept>
-#include <signal.h>
-#include <vector>
-#include "bh1749.hpp"
-#include "upm_utilities.h"
-
-bool isStopped;
-upm::BH1749 dev;
-
-void signal_int_handler(int signo)
-{
-    if (signo == SIGINT)
-        isStopped = true;
-}
-
-//! [Interesting]
-void PrintData(void *args)
-{
-    std::vector<uint16_t> result = dev.GetMeasurements();
-    std::cout << "R: " << result.at(0) <<
-                ", G: " << result.at(1) <<
-                ", B: " << result.at(2) <<
-                ", IR: " << result.at(3) <<
-                ", G2: " << result.at(4) << std::endl;
-    dev.ResetInterrupt();
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, signal_int_handler);
-    dev.SoftReset();
-    dev.SensorInit(INT_JUDGE_1, MEAS_240MS, RGB_GAIN_1X, IR_GAIN_1X, RED);
-    dev.SetThresholdHigh(511);
-    std::cout << "Installing ISR" << std::endl;
-    dev.InstallISR(MRAA_GPIO_EDGE_FALLING, 33, &PrintData, NULL);
-    dev.EnableInterrupt();
-    dev.Enable();
-
-    while(!isStopped) {
-        upm_delay_ms(1000);
-    }
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/bh1750.cxx b/examples/c++/bh1750.cxx
deleted file mode 100644
index c565873..0000000
--- a/examples/c++/bh1750.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bh1750.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a BH1750 sensor using defaults (I2C bus (0), using
-    // the default I2C address (0x23), and setting the mode to highest
-    // resolution, lowest power mode).
-    upm::BH1750 sensor;
-
-    // Every second, sample the BH1750 and output the measured lux value
-
-    while (shouldRun) {
-        cout << "Detected Light Level (lux): " << sensor.getLux() << endl;
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bh1792.cxx b/examples/c++/bh1792.cxx
deleted file mode 100755
index d4baf83..0000000
--- a/examples/c++/bh1792.cxx
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <iostream>
-#include <signal.h>
-#include  <sys/time.h>
-#include "bh1792.hpp"
-#include "upm_utilities.h"
-
-bool isStopped;
-upm::BH1792 dev;
-
-void signal_int_handler(int signo)
-{
-    if (signo == SIGINT)
-        isStopped = true;
-}
-
-//! [Interesting]
-void PrintData(void *args)
-{
-    std::vector<std::vector<int>> fifo;
-    struct timespec now;
-
-    clock_gettime(CLOCK_MONOTONIC_RAW, &now);
-    try {
-        fifo = dev.GetFifoData();
-
-        std::cout << "\nHeart beat sensor FIFO data:" << std::endl;
-        for(int i = 0; i < 32; i++)
-            std::cout << i << ": off: " << fifo.at(i).at(0) << ", on: " <<
-                        fifo.at(i).at(1) << std::endl;
-
-        std::cout << "timestamp " << now.tv_sec << " sec, " << now.tv_nsec <<
-                    " nsec" << std::endl;
-    } catch (std::exception& e) {
-        std::cout << "Failed to read FIFO data" << std::endl;
-        throw;
-    }
-}
-
-int main(int argc, char **argv)
-{
-    float measTime;
-
-    signal(SIGINT, signal_int_handler);
-    dev.SoftReset();
-    dev.EnableSyncMode(256, 32);
-    std::cout << "Installing ISR" << std::endl;
-    dev.InstallISR(MRAA_GPIO_EDGE_FALLING, 33, &PrintData, NULL);
-    measTime = dev.GetMeasurementTimeMS();
-    dev.StartMeasurement();
-
-    while(!isStopped) {
-        usleep(measTime * 1000);
-    }
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/biss0001.cxx b/examples/c++/biss0001.cxx
deleted file mode 100644
index 91d55cd..0000000
--- a/examples/c++/biss0001.cxx
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "biss0001.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Motion sensor on GPIO pin D2
-    upm::BISS0001 motion(2);
-
-    while (shouldRun) {
-        bool val = motion.value();
-
-        if (val)
-            cout << "Detecting moving object";
-        else
-            cout << "No moving objects detected";
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bma220.cxx b/examples/c++/bma220.cxx
deleted file mode 100644
index 34ca7ec..0000000
--- a/examples/c++/bma220.cxx
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bma220.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BMA220 using default parameters (bus 0, addr 0x0a)
-    upm::BMA220 sensor;
-
-    // Output data every half second until interrupted
-    while (shouldRun) {
-        sensor.update();
-
-        float x, y, z;
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer: ";
-        cout << "AX: " << x << " AY: " << y << " AZ: " << z << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bma250e.cxx b/examples/c++/bma250e.cxx
deleted file mode 100644
index 11981fa..0000000
--- a/examples/c++/bma250e.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bma250e.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BMA250E using default I2C parameters
-    upm::BMA250E sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin
-    // for CS: BMA250E(0, -1, 10);
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmg160.cxx b/examples/c++/bmg160.cxx
deleted file mode 100644
index d1f93f0..0000000
--- a/examples/c++/bmg160.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmg160.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BMG160 using default I2C parameters
-    upm::BMG160 sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin
-    // for CS: BMG160(0, -1, 10);
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gyroscope x: " << x << " y: " << y << " z: " << z << " degrees/s" << endl;
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmi160.cxx b/examples/c++/bmi160.cxx
deleted file mode 100644
index 90baf8e..0000000
--- a/examples/c++/bmi160.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmi160.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a BMI160 instance using default i2c bus and address
-    upm::BMI160 sensor;
-
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        float dataX, dataY, dataZ;
-
-        sensor.getAccelerometer(&dataX, &dataY, &dataZ);
-        cout << "Accelerometer: ";
-        cout << "AX: " << dataX << " AY: " << dataY << " AZ: " << dataZ << endl;
-
-        sensor.getGyroscope(&dataX, &dataY, &dataZ);
-        cout << "Gryoscope:     ";
-        cout << "GX: " << dataX << " GY: " << dataY << " GZ: " << dataZ << endl;
-
-        sensor.getMagnetometer(&dataX, &dataY, &dataZ);
-        cout << "Magnetometer:  ";
-        cout << "MX: " << dataX << " MY: " << dataY << " MZ: " << dataZ << endl;
-
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmm150.cxx b/examples/c++/bmm150.cxx
deleted file mode 100644
index 1af97c6..0000000
--- a/examples/c++/bmm150.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmm150.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BMM150 using default I2C parameters
-    upm::BMM150 sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin
-    // for CS: BMM150(0, -1, 10);
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer x: " << x << " y: " << y << " z: " << z << " uT" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmp280-bme280.cxx b/examples/c++/bmp280-bme280.cxx
deleted file mode 100644
index 1fc3f18..0000000
--- a/examples/c++/bmp280-bme280.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bme280.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a BME280 instance using default i2c bus and address
-    upm::BME280 sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-    // BME280(0, -1, 10);
-
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-        cout << "Pressure: " << sensor.getPressure() << " Pa" << endl;
-        cout << "Computed Altitude: " << sensor.getAltitude() << " m" << endl;
-        cout << "Humidity: " << sensor.getHumidity() << " %RH" << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmp280.cxx b/examples/c++/bmp280.cxx
deleted file mode 100644
index f98c05a..0000000
--- a/examples/c++/bmp280.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmp280.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a BMP280 instance using default i2c bus and address
-    upm::BMP280 sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-    // BMP280(0, -1, 10);
-
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-        cout << "Pressure: " << sensor.getPressure() << " Pa" << endl;
-        cout << "Computed Altitude: " << sensor.getAltitude() << " m" << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmpx8x.cxx b/examples/c++/bmpx8x.cxx
deleted file mode 100644
index f4759d0..0000000
--- a/examples/c++/bmpx8x.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * This driver was rewritten based on the original driver written by:
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmpx8x.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a BMPX8X sensor on I2C using defaults.
-    upm::BMPX8X sensor;
-
-    // Print the pressure, altitude, sea level, and
-    // temperature values every 0.5 seconds
-    while (shouldRun) {
-        sensor.update();
-
-        cout << "Pressure: " << sensor.getPressure()
-             << " Pa, Temperature: " << sensor.getTemperature()
-             << " C, Altitude: " << sensor.getAltitude()
-             << " m, Sea level: " << sensor.getSealevelPressure() << " Pa" << endl;
-
-        upm_delay_us(500000);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/bmx055-bmc150.cxx b/examples/c++/bmx055-bmc150.cxx
deleted file mode 100644
index 3c8e866..0000000
--- a/examples/c++/bmx055-bmc150.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmc150.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BMC150 using default I2C parameters
-    upm::BMC150 sensor;
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer x: " << x << " y: " << y << " z: " << z << " uT" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmx055-bmi055.cxx b/examples/c++/bmx055-bmi055.cxx
deleted file mode 100644
index 761d465..0000000
--- a/examples/c++/bmx055-bmi055.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmi055.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BMI055 using default I2C parameters
-    upm::BMI055 sensor;
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gyroscope x: " << x << " y: " << y << " z: " << z << " degrees/s" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bmx055.cxx b/examples/c++/bmx055.cxx
deleted file mode 100644
index 4218a7e..0000000
--- a/examples/c++/bmx055.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bmx055.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BMX055 using default I2C parameters
-    upm::BMX055 sensor;
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gyroscope x: " << x << " y: " << y << " z: " << z << " degrees/s" << endl;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer x: " << x << " y: " << y << " z: " << z << " uT" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/bno055.cxx b/examples/c++/bno055.cxx
deleted file mode 100644
index d346af9..0000000
--- a/examples/c++/bno055.cxx
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "bno055.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an BNO055 using default parameters (bus 0, addr
-    // 0x28).  The default running mode is NDOF absolute orientation
-    // mode.
-    upm::BNO055 sensor;
-
-    // First we need to calibrate....
-    cout << "First we need to calibrate.  4 numbers will be output every" << endl;
-    cout << "second for each sensor.  0 means uncalibrated, and 3 means" << endl;
-    cout << "fully calibrated." << endl;
-    cout << "See the UPM documentation on this sensor for instructions on" << endl;
-    cout << "what actions are required to calibrate." << endl;
-    cout << endl;
-
-    // do the calibration...
-    while (shouldRun && !sensor.isFullyCalibrated()) {
-        int mag, acc, gyr, sys;
-        sensor.getCalibrationStatus(&mag, &acc, &gyr, &sys);
-
-        cout << "Magnetometer: " << mag << " Accelerometer: " << acc << " Gyroscope: " << gyr
-             << " System: " << sys << endl;
-
-        upm_delay(1);
-    }
-
-    cout << endl;
-    cout << "Calibration complete." << endl;
-    cout << endl;
-
-    // now output various fusion data every 250 milliseconds
-    while (shouldRun) {
-        float w, x, y, z;
-
-        sensor.update();
-
-        sensor.getEulerAngles(&x, &y, &z);
-        cout << "Euler: Heading: " << x << " Roll: " << y << " Pitch: " << z << " degrees" << endl;
-
-        sensor.getQuaternions(&w, &x, &y, &z);
-        cout << "Quaternion: W: " << w << " X: " << x << " Y: " << y << " Z: " << z << endl;
-
-        sensor.getLinearAcceleration(&x, &y, &z);
-        cout << "Linear Acceleration: X: " << x << " Y: " << y << " Z: " << z << " m/s^2" << endl;
-
-        sensor.getGravityVectors(&x, &y, &z);
-        cout << "Gravity Vector: X: " << x << " Y: " << y << " Z: " << z << " m/s^2" << endl;
-
-        cout << endl;
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/button.cxx b/examples/c++/button.cxx
deleted file mode 100644
index d5903b2..0000000
--- a/examples/c++/button.cxx
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "button.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    // This example uses GPIO 0
-    //! [Interesting]
-
-    // Create the button object using GPIO pin 0
-    upm::Button button(0);
-
-    // Read the input and print, waiting one second between readings
-    while (1) {
-        std::cout << button.name() << " value is " << button.value() << std::endl;
-        upm_delay(1);
-    }
-
-    // Delete the button object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/buzzer.cxx b/examples/c++/buzzer.cxx
deleted file mode 100644
index dc9465b..0000000
--- a/examples/c++/buzzer.cxx
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "buzzer.hpp"
-#include "buzzer_tones.h"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    int chord[] = { BUZZER_DO, BUZZER_RE, BUZZER_MI, BUZZER_FA, BUZZER_SOL, BUZZER_LA, BUZZER_SI };
-
-    // create Buzzer instance
-    upm::Buzzer sound(5);
-    // print sensor name
-    std::cout << sound.name() << std::endl;
-
-    // play each sound (DO, RE, MI, etc...) for .5 seconds, pausing
-    // for 0.1 seconds between notes
-    for (int chord_ind = 0; chord_ind < 7; chord_ind++) {
-        std::cout << sound.playSound(chord[chord_ind], 500000) << std::endl;
-        upm_delay_ms(100);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/cjq4435.cxx b/examples/c++/cjq4435.cxx
deleted file mode 100644
index c0d30ba..0000000
--- a/examples/c++/cjq4435.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "cjq4435.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a CJQ4435 MOSFET on a PWM capable digital pin D3
-    upm::CJQ4435 mosfet(3);
-
-    mosfet.setPeriodMS(10);
-    mosfet.enable(true);
-
-    while (shouldRun) {
-        // start with a duty cycle of 0.0 (off) and increment to 1.0 (on)
-        for (float i = 0.0; i <= 1.0; i += 0.1) {
-            mosfet.setDutyCycle(i);
-            upm_delay_us(100000);
-        }
-        upm_delay(1);
-        // Now take it back down
-        // start with a duty cycle of 1.0 (on) and decrement to 0.0 (off)
-        for (float i = 1.0; i >= 0.0; i -= 0.1) {
-            mosfet.setDutyCycle(i);
-            upm_delay_us(100000);
-        }
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/collision.cxx b/examples/c++/collision.cxx
deleted file mode 100644
index 8112251..0000000
--- a/examples/c++/collision.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "collision.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the Collision Sensor
-    // Instantiate a Collision on digital pin D2
-    upm::Collision collision(2);
-
-    bool collisionState = false;
-    cout << "No collision" << endl;
-    while (shouldRun) {
-        if (collision.isColliding() && !collisionState) {
-            cout << "Collision!" << endl;
-            collisionState = true;
-        } else if (collisionState) {
-            cout << "No collision" << endl;
-            collisionState = false;
-        }
-    }
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/curieimu.cxx b/examples/c++/curieimu.cxx
deleted file mode 100644
index 988cdbf..0000000
--- a/examples/c++/curieimu.cxx
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Author: Ron Evans (@deadprogram)
- * Author: Justin Zemlyansky (@JustInDevelopment)
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "curieimu.hpp"
-#include "upm_utilities.h"
-#include "mraa.h"
-#include "mraa/firmata.h"
-#include <iostream>
-#include <math.h>
-#include <unistd.h>
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    mraa_init();
-    mraa_add_subplatform(MRAA_GENERIC_FIRMATA, "/dev/ttyACM0");
-
-    upm::CurieImu sensor;
-
-    std::cout << "temperature is: " << (sensor.getTemperature() * pow(0.5, 9) + 23) << std::endl;
-
-    sensor.updateAccel();
-    int x = sensor.getAccelX(), y = sensor.getAccelY(), z = sensor.getAccelZ();
-    printf("accelerometer is: %d, %d, %d\n", x, y, z);
-
-    sensor.updateGyro();
-    int a = sensor.getGyroX(), b = sensor.getGyroY(), c = sensor.getGyroZ();
-    printf("gyroscope is: %d, %d, %d\n", a, b, c);
-
-    int axis, direction;
-    sensor.enableShockDetection(true);
-    for (int i = 0; i < 300; i++) {
-        if (sensor.isShockDetected()) {
-            sensor.getNextShock();
-            axis = sensor.getAxis();
-            direction = sensor.getDirection();
-            printf("shock data is: %d, %d\n", axis, direction);
-        }
-        upm_delay_us(10000);
-    }
-
-    sensor.updateMotion();
-    int m = sensor.getAccelX(), n = sensor.getAccelY(), o = sensor.getAccelZ(),
-        p = sensor.getGyroX(), q = sensor.getGyroY(), r = sensor.getGyroZ();
-    printf("motion is: %d, %d, %d, %d, %d, %d\n", m, n, o, p, q, r);
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/cwlsxxa.cxx b/examples/c++/cwlsxxa.cxx
deleted file mode 100644
index d4a2ebf..0000000
--- a/examples/c++/cwlsxxa.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "cwlsxxa.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    cout << "Initializing..." << endl;
-
-    // Instantiate an CWLSXXA instance, using A0 for CO2, A1 for
-    // humidity and A2 for temperature
-    upm::CWLSXXA sensor(0, 1, 2);
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << "Humidity: " << sensor.getHumidity() << " %" << endl;
-
-        cout << "CO2: " << sensor.getCO2() << " ppm" << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/dfrec.cxx b/examples/c++/dfrec.cxx
deleted file mode 100644
index 00dd84c..0000000
--- a/examples/c++/dfrec.cxx
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "dfrec.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a DFRobot EC sensor on analog pin A0, with a ds18b20
-    // temperature sensor connected to UART 0, and a device index (for
-    // the ds1820b uart bus) of 0, and an analog reference voltage of
-    // 5.0.
-    upm::DFREC sensor(0, 0, 0, 5.0);
-
-    // Every 2 seconds, update and print values
-    while (shouldRun) {
-        sensor.update();
-
-        cout << "EC = " << sensor.getEC() << " ms/cm" << endl;
-
-        cout << "Volts = " << sensor.getVolts() << ", Temperature = " << sensor.getTemperature()
-             << " C" << endl;
-
-        cout << endl;
-
-        upm_delay(2);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/dfrorp.cxx b/examples/c++/dfrorp.cxx
deleted file mode 100644
index 3b4f2d6..0000000
--- a/examples/c++/dfrorp.cxx
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "dfrorp.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a DFRobot ORP sensor on analog pin A0 with an analog
-    // reference voltage of 5.0.
-    upm::DFRORP sensor(0, 5.0);
-
-    // To calibrate:
-    //
-    // Disconnect the sensor probe (but leave the sensor interface board
-    // connected).  Then run one of the examples while holding down the
-    // 'calibrate' button on the device.  Read the ORP value reported
-    // (it should be fairly small).
-    //
-    // This value is what you should supply to setCalibrationOffset().
-    // Then reconnect the probe to the interface board and you should be
-    // ready to go.
-    //
-    // DO NOT press the calibrate button on the interface board while
-    // the probe is attached or you can permanently damage the probe.
-    sensor.setCalibrationOffset(0.97);
-
-    // Every second, update and print values
-    while (shouldRun) {
-        sensor.update();
-
-        cout << "ORP: " << sensor.getORP() << " mV" << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/dfrph.cxx b/examples/c++/dfrph.cxx
deleted file mode 100644
index 30dfc4f..0000000
--- a/examples/c++/dfrph.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "dfrph.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-#define DFRPH_AREF 5.0
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a DFRPH sensor on analog pin A0, with an analog
-    // reference voltage of DFRPH_AREF
-    upm::DFRPH sensor(0, DFRPH_AREF);
-
-    // After calibration, set the offset (based on calibration with a pH
-    // 7.0 buffer solution).  See the UPM sensor documentation for
-    // calibrations instructions.
-    sensor.setOffset(0.065);
-
-    // Every second, sample the pH and output it's corresponding
-    // analog voltage.
-
-    while (shouldRun) {
-        cout << "Detected volts: " << sensor.volts() << endl;
-        cout << "pH value: " << sensor.pH() << endl;
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ds1307.cxx b/examples/c++/ds1307.cxx
deleted file mode 100644
index c5a8deb..0000000
--- a/examples/c++/ds1307.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "ds1307.hpp"
-
-using namespace std;
-
-void
-printTime(upm::DS1307& rtc)
-{
-    cout << "The time is: " << rtc.month << "/" << rtc.dayOfMonth << "/" << rtc.year << " "
-         << rtc.hours << ":" << rtc.minutes << ":" << rtc.seconds;
-
-    if (rtc.amPmMode)
-        cout << ((rtc.pm) ? " PM " : " AM ");
-
-    cout << endl;
-
-    cout << "Clock is in " << ((rtc.amPmMode) ? "AM/PM mode" : "24hr mode") << endl;
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a DS1037 on I2C bus 0
-    upm::DS1307 rtc(0);
-
-    // always do this first
-    cout << "Loading the current time... " << endl;
-    if (!rtc.loadTime()) {
-        cerr << "rtc.loadTime() failed." << endl;
-        return 0;
-    }
-
-    printTime(rtc);
-
-    // set the year as an example
-    cout << "setting the year to 50" << endl;
-    rtc.year = 50;
-
-    rtc.setTime();
-
-    // reload the time and print it
-    rtc.loadTime();
-    printTime(rtc);
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ds1808lc.cxx b/examples/c++/ds1808lc.cxx
deleted file mode 100644
index da245de..0000000
--- a/examples/c++/ds1808lc.cxx
+++ /dev/null
@@ -1,41 +0,0 @@
-#include <iostream>
-#include <stdlib.h>
-#include <string>
-
-#include "ds1808lc.hpp"
-
-#define EDISON_I2C_BUS 1   // Edison I2C-1
-#define DS1808_GPIO_PWR 15 // Edison GP165
-
-void
-printState(upm::ILightController& lightController)
-{
-    if (lightController.isPowered()) {
-        std::cout << "Light is powered, brightness = " << lightController.getBrightness()
-                  << std::endl;
-    } else {
-        std::cout << "Light is not powered." << std::endl;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::DS1808LC lightController(DS1808_GPIO_PWR, EDISON_I2C_BUS);
-    std::cout << "Existing state: ";
-    printState(lightController);
-    if (argc == 2) {
-        std::string arg = argv[1];
-        int brightness = ::atoi(argv[1]);
-        if (brightness > 0) {
-            lightController.setPowerOn();
-            lightController.setBrightness(brightness);
-        } else
-            lightController.setPowerOff();
-    }
-    std::cout << "Now: ";
-    printState(lightController);
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/ds18b20.cxx b/examples/c++/ds18b20.cxx
deleted file mode 100644
index 6c1d439..0000000
--- a/examples/c++/ds18b20.cxx
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ds18b20.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    cout << "Initializing..." << endl;
-
-    // Instantiate an DS18B20 instance using the default values (uart 0)
-    upm::DS18B20 sensor;
-
-    cout << "Found " << sensor.devicesFound() << " device(s)" << endl;
-    cout << endl;
-
-    // bail if we didn't find anything
-    if (!sensor.devicesFound())
-        return 1;
-
-    // update and print available values every 2 seconds
-    while (shouldRun) {
-        // update our values for all of the detected sensors
-        sensor.update(-1);
-
-        // we show both C and F for temperature for the sensors
-        int i;
-        for (i = 0; i < sensor.devicesFound(); i++) {
-            cout << "Device " << i << ": Temperature: " << sensor.getTemperature(i) << " C / "
-                 << sensor.getTemperature(i, true) << " F" << endl;
-        }
-        cout << endl;
-
-        upm_delay(2);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ds2413.cxx b/examples/c++/ds2413.cxx
deleted file mode 100644
index 67e116b..0000000
--- a/examples/c++/ds2413.cxx
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "ds2413.hpp"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a DS2413 Module on a Dallas 1-wire bus connected to UART 0
-    upm::DS2413 sensor(0);
-
-    // find all of the DS2413 devices present on the bus
-    sensor.init();
-
-    // how many devices were found?
-    cout << "Found " << sensor.devicesFound() << " device(s)" << endl;
-
-    // read the gpio and latch values from the first device
-    // the lower 4 bits are of the form:
-    // <gpioB latch> <gpioB value> <gpioA latch> <gpioA value>
-    cout << "GPIO device 0 values: " << sensor.readGpios(0) << endl;
-
-    // set the gpio latch values of the first device
-    cout << "Setting GPIO latches to on" << endl;
-    sensor.writeGpios(0, 0x03);
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/e50hx.cxx b/examples/c++/e50hx.cxx
deleted file mode 100644
index 2d5695c..0000000
--- a/examples/c++/e50hx.cxx
+++ /dev/null
@@ -1,105 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "e50hx.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // You will need to edit this example to conform to your site and your
-    // devices, specifically the Device Object Instance ID passed to the
-    // constructor, and the arguments to initMaster() that are
-    // appropriate for your BACnet network.
-
-    string defaultDev = "/dev/ttyUSB0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device " << defaultDev << endl;
-    cout << "Initializing..." << endl;
-
-    // Instantiate an E50HX object for an E50HX device that has 1075425
-    // as it's unique Device Object Instance ID.  NOTE: You will
-    // certainly want to change this to the correct value for your
-    // device(s).
-    E50HX sensor(1075425);
-
-    // Initialize our BACnet master, if it has not already been
-    // initialized, with the device and baudrate, choosing 1000001 as
-    // our unique Device Object Instance ID, 2 as our MAC address and
-    // using default values for maxMaster and maxInfoFrames
-    sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-    // Uncomment to enable debugging output
-    // sensor.setDebug(true);
-
-    cout << endl;
-    cout << "Device Description: " << sensor.getDeviceDescription() << endl;
-    cout << "Device Location: " << sensor.getDeviceLocation() << endl;
-    cout << endl;
-
-    // update and print a few values every 5 seconds
-    while (shouldRun) {
-        cout << "System Voltage: " << sensor.getAnalogValue(E50HX::AV_System_Voltage) << " "
-             << sensor.getAnalogValueUnits(E50HX::AV_System_Voltage) << endl;
-
-        cout << "System Type: " << sensor.getAnalogValue(E50HX::AV_System_Type) << endl;
-
-        cout << "Energy Consumption: " << sensor.getAnalogInput(E50HX::AI_Energy) << " "
-             << sensor.getAnalogInputUnits(E50HX::AI_Energy) << endl;
-
-        cout << "Power Up Counter: " << sensor.getAnalogInput(E50HX::AI_Power_Up_Count) << endl;
-
-        cout << endl;
-        upm_delay(5);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ecezo.cxx b/examples/c++/ecezo.cxx
deleted file mode 100644
index dad9b6b..0000000
--- a/examples/c++/ecezo.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <ecezo.hpp>
-#include <iostream>
-#include <signal.h>
-#include <upm_utilities.h>
-
-using namespace std;
-using namespace upm;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a ECEZO sensor on uart 0 at 9600 baud.
-    upm::ECEZO sensor(0, 9600, false);
-
-    // For I2C, assuming the device is configured for address 0x64 on
-    // I2C bus 0, you could use something like:
-    //
-    // upm::ECEZO sensor(0, 0x64, true);
-
-    while (shouldRun) {
-        // this will take about 1 second to complete
-        sensor.update();
-
-        cout << "EC " << sensor.getEC() << " uS/cm, TDS " << sensor.getTDS() << " mg/L, Salinity "
-             << sensor.getSalinity() << " PSS-78, SG " << sensor.getSG() << endl;
-
-        upm_delay(5);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ecs1030.cxx b/examples/c++/ecs1030.cxx
deleted file mode 100644
index e2b2918..0000000
--- a/examples/c++/ecs1030.cxx
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "ecs1030.hpp"
-
-int is_running = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    upm::ECS1030 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    while (!is_running) {
-        std::cout << "I = " << sensor.getCurrency_A() << ", Power = " << sensor.getPower_A()
-                  << std::endl;
-        std::cout << "I = " << sensor.getCurrency_B() << ", Power = " << sensor.getPower_B()
-                  << std::endl;
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/ehr.cxx b/examples/c++/ehr.cxx
deleted file mode 100644
index 0300259..0000000
--- a/examples/c++/ehr.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ehr.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a  Ear-clip Heart Rate sensor on digital pin D2
-    upm::EHR heart(2);
-
-    // set the beat counter to 0, init the clock and start counting beats
-    heart.clearBeatCounter();
-    heart.initClock();
-    heart.startBeatCounter();
-
-    while (shouldRun) {
-        // we grab these just for display purposes in this example
-        uint32_t millis = heart.getMillis();
-        uint32_t beats = heart.beatCounter();
-
-        // heartRate() requires that at least 5 seconds pass before
-        // returning anything other than 0
-        int hr = heart.heartRate();
-
-        // output milliseconds passed, beat count, and computed heart rate
-        cout << "Millis: " << millis << " Beats: " << beats;
-        cout << " Heart Rate: " << hr << endl;
-
-        upm_delay(1);
-    }
-
-    heart.stopBeatCounter();
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/eldriver.cxx b/examples/c++/eldriver.cxx
deleted file mode 100644
index bc0ea87..0000000
--- a/examples/c++/eldriver.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "eldriver.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // This was tested with the El Driver Module
-    // Instantiate an El Driver on digital pin D2
-    upm::ElDriver eldriver(2);
-
-    bool lightState = true;
-
-    while (shouldRun) {
-        if (lightState)
-            eldriver.on();
-        else
-            eldriver.off();
-        lightState = !lightState;
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-    eldriver.off();
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/electromagnet.cxx b/examples/c++/electromagnet.cxx
deleted file mode 100644
index 2781aea..0000000
--- a/examples/c++/electromagnet.cxx
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-#include <sys/time.h>
-#include <time.h>
-
-#include "electromagnet.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-float
-get_time()
-{
-    return ((float) (clock())) / CLOCKS_PER_SEC;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the  Electromagnetic Module
-    // Instantiate a  Electromagnet on digital pin D2
-    upm::Electromagnet magnet(2);
-    cout << "Starting up magnet...." << endl;
-    magnet.off();
-
-    bool magnetState = false;
-    float time_passed = get_time();
-
-    // Turn magnet on and off every 5 seconds
-    while (shouldRun) {
-        if ((get_time() - time_passed) > 5.0) {
-            magnetState = !magnetState;
-            if (magnetState)
-                magnet.on();
-            else
-                magnet.off();
-            cout << "Turning magnet " << ((magnetState) ? "on" : "off") << endl;
-            time_passed = get_time();
-        }
-    }
-
-    //! [Interesting]
-    magnet.off();
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/emg.cxx b/examples/c++/emg.cxx
deleted file mode 100644
index 06afe4a..0000000
--- a/examples/c++/emg.cxx
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "emg.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the EMG Muscle Signal Reader Sensor Module
-    // Instantiate a EMG on analog pin A0
-    upm::EMG emg(0);
-    cout << "Calibrating...." << endl;
-    emg.calibrate();
-
-    while (shouldRun) {
-        cout << emg.value() << endl;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-    return 0;
-}
diff --git a/examples/c++/enc03r.cxx b/examples/c++/enc03r.cxx
deleted file mode 100644
index 8b43794..0000000
--- a/examples/c++/enc03r.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "enc03r.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-// analog voltage, usually 3.3 or 5.0
-#define CALIBRATION_SAMPLES 1000
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a ENC03R on analog pin A0
-    upm::ENC03R gyro(0);
-
-    // The first thing we need to do is calibrate the sensor.
-    cout << "Please place the sensor in a stable location, and do not" << endl;
-    cout << "move it while calibration takes place." << endl;
-    cout << "This may take a couple of minutes." << endl;
-
-    gyro.calibrate(CALIBRATION_SAMPLES);
-    cout << "Calibration complete.  Reference value: " << gyro.calibrationValue() << endl;
-
-    // Read the input and print both the raw value and the angular velocity,
-    // waiting 0.1 seconds between readings
-    while (shouldRun) {
-        gyro.update();
-
-        cout << "Angular velocity: " << gyro.angularVelocity() << " deg/s" << endl;
-
-        upm_delay_us(100000);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/flex.cxx b/examples/c++/flex.cxx
deleted file mode 100644
index b7872e8..0000000
--- a/examples/c++/flex.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "flex.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with a Spectra Symbol flex sensor.
-    // We attached a 22K resistor to a breadboard,
-    // with 1 end attached to GND and the other connected to
-    // both the flex sensor and A0.
-    // The flex sensor was connected on 1 pin to the 22K resistor and A0
-    // and on the other pin to 5V.
-
-    // Instantiate a Flex sensor on analog pin A0
-    upm::Flex flex(0);
-
-    while (shouldRun) {
-        cout << "Flex value: " << flex.value() << endl;
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/gas-mq2.cxx b/examples/c++/gas-mq2.cxx
deleted file mode 100644
index 622b22b..0000000
--- a/examples/c++/gas-mq2.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-
-#include "gas.hpp"
-#include "mq2.hpp"
-
-int is_running = 0;
-uint16_t buffer[128];
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Attach gas sensor to A0
-    upm::MQ2 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    // Infinite loop, ends when script is cancelled
-    // Repeatedly, take a sample every 2 milliseconds;
-    // find the average of 128 samples; and
-    // print a running graph of the averages using a resolution of 5
-    while (!is_running) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 5);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-mq3.cxx b/examples/c++/gas-mq3.cxx
deleted file mode 100644
index db5c261..0000000
--- a/examples/c++/gas-mq3.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-
-#include "gas.hpp"
-#include "mq3.hpp"
-
-int is_running = 0;
-uint16_t buffer[128];
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Attach gas sensor to A0
-    upm::MQ3 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    // Infinite loop, ends when script is cancelled
-    // Repeatedly, take a sample every 2 milliseconds;
-    // find the average of 128 samples; and
-    // print a running graph of the averages using a resolution of 5
-    while (!is_running) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 5);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-mq4.cxx b/examples/c++/gas-mq4.cxx
deleted file mode 100644
index ca8e872..0000000
--- a/examples/c++/gas-mq4.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-
-#include "gas.hpp"
-#include "mq4.hpp"
-
-bool shouldRun = true;
-
-using namespace std;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        shouldRun = false;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Attach gas sensor to Analog A0
-    upm::MQ4 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    uint16_t buffer[128];
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    // Infinite loop, ends when script is cancelled
-    // Repeatedly, take a sample every 2 microseconds;
-    // find the average of 128 samples; and
-    // print a running graph of asteriskss as averages
-    while (shouldRun) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 5);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-mq5.cxx b/examples/c++/gas-mq5.cxx
deleted file mode 100644
index 55503dc..0000000
--- a/examples/c++/gas-mq5.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-
-#include "gas.hpp"
-#include "mq5.hpp"
-
-int is_running = 0;
-uint16_t buffer[128];
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    upm::MQ5 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    while (!is_running) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 7);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-mq6.cxx b/examples/c++/gas-mq6.cxx
deleted file mode 100644
index 57fa057..0000000
--- a/examples/c++/gas-mq6.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-
-#include "gas.hpp"
-#include "mq6.hpp"
-
-bool shouldRun = true;
-
-using namespace std;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        shouldRun = false;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Attach gas sensor to Analog A0
-    upm::MQ6 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    uint16_t buffer[128];
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    // Infinite loop, ends when script is cancelled
-    // Repeatedly, take a sample every 2 microseconds;
-    // find the average of 128 samples; and
-    // print a running graph of asteriskss as averages
-    while (shouldRun) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 5);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-mq7.cxx b/examples/c++/gas-mq7.cxx
deleted file mode 100644
index ffa8f34..0000000
--- a/examples/c++/gas-mq7.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-
-#include "gas.hpp"
-#include "mq7.hpp"
-
-bool shouldRun = true;
-
-using namespace std;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        shouldRun = false;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Attach gas sensor to Analog A0
-    upm::MQ7 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    uint16_t buffer[128];
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    // Infinite loop, ends when script is cancelled
-    // Repeatedly, take a sample every 2 microseconds;
-    // find the average of 128 samples; and
-    // print a running graph of asteriskss as averages
-    while (shouldRun) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 5);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-mq8.cxx b/examples/c++/gas-mq8.cxx
deleted file mode 100644
index 6145ab6..0000000
--- a/examples/c++/gas-mq8.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-
-#include "gas.hpp"
-#include "mq8.hpp"
-
-bool shouldRun = true;
-
-using namespace std;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        shouldRun = false;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Attach gas sensor to Analog A0
-    upm::MQ8 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    uint16_t buffer[128];
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    // Infinite loop, ends when script is cancelled
-    // Repeatedly, take a sample every 2 microseconds;
-    // find the average of 128 samples; and
-    // print a running graph of asteriskss as averages
-    while (shouldRun) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 5);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-mq9.cxx b/examples/c++/gas-mq9.cxx
deleted file mode 100644
index 0bbadeb..0000000
--- a/examples/c++/gas-mq9.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-
-#include "gas.hpp"
-#include "mq9.hpp"
-
-int is_running = 0;
-uint16_t buffer[128];
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    upm::MQ9 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    while (!is_running) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx, 5);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gas-tp401.cxx b/examples/c++/gas-tp401.cxx
deleted file mode 100644
index a782967..0000000
--- a/examples/c++/gas-tp401.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-#include <stdio.h>
-#include <string>
-
-#include "tp401.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-//! [Interesting]
-// Give a qualitative meaning to the value from the sensor
-std::string
-airQuality(uint16_t value)
-{
-    if (value < 50)
-        return "Fresh Air";
-    if (value < 200)
-        return "Normal Indoor Air";
-    if (value < 400)
-        return "Low Pollution";
-    if (value < 600)
-        return "High Pollution - Action Recommended";
-    return "Very High Pollution - Take Action Immediately";
-}
-
-int
-main()
-{
-    upm::TP401 airSensor(0);
-
-    cout << airSensor.name() << endl;
-
-    fprintf(stdout, "Heating sensor for 3 minutes...\n");
-    // wait 3 minutes for sensor to warm up
-    for (int i = 0; i < 3; i++) {
-        if (i) {
-            fprintf(stdout, "Please wait, %d minute(s) passed..\n", i);
-        }
-        upm_delay(60);
-    }
-    fprintf(stdout, "Sensor ready!\n");
-
-    while (true) {
-        uint16_t value = airSensor.getSample(); // Read raw value
-        float ppm = airSensor.getPPM(); // Read CO ppm (can vary slightly from previous read)
-        fprintf(stdout, "raw: %4d ppm: %5.2f   %s\n", value, ppm, airQuality(value).c_str());
-        upm_delay_us(2500000); // Sleep for 2.5s
-    }
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/gp2y0a.cxx b/examples/c++/gp2y0a.cxx
deleted file mode 100644
index 4c04656..0000000
--- a/examples/c++/gp2y0a.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "gp2y0a.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-// analog voltage, usually 3.3 or 5.0
-#define GP2Y0A_AREF 5.0
-#define SAMPLES_PER_QUERY 20
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Note, for the Grove 80cm version of this sensor, due to the way
-    // it is wired, you need to plug this into the A0 port, where it
-    // will use the available A1 pin for data.
-
-    // Instantiate a GP2Y0A on analog pin A1
-    upm::GP2Y0A volts(1);
-
-    // The higher the voltage (closer to AREF) the closer the object is.  NOTE:
-    // the measured voltage will probably not exceed 3.3 volts.
-    // Every second, print the averaged voltage value (averaged over 20 samples).
-    while (shouldRun) {
-        cout << "AREF: " << GP2Y0A_AREF << ", Voltage value (higher means closer): "
-             << volts.value(GP2Y0A_AREF, SAMPLES_PER_QUERY) << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/gprs.cxx b/examples/c++/gprs.cxx
deleted file mode 100644
index cdf0498..0000000
--- a/examples/c++/gprs.cxx
+++ /dev/null
@@ -1,102 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "gprs.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-void
-printUsage(char* progname)
-{
-    cout << "Usage: " << progname << " [AT command]" << endl;
-    cout << endl;
-
-    cout << "If an argument is supplied on the command line, that argument is" << endl;
-    cout << "sent to the module and the response is printed out." << endl;
-    cout << endl;
-    cout << "If no argument is used, then the manufacturer and the current" << endl;
-    cout << "saved profiles are queried and the results printed out." << endl;
-    cout << endl;
-    cout << endl;
-}
-
-// simple helper function to send a command and wait for a response
-void
-sendCommand(upm::GPRS& sensor, string cmd)
-{
-    // commands need to be terminated with a carriage return
-    cmd += "\r";
-
-    sensor.writeDataStr(cmd);
-
-    // wait up to 1 second
-    if (sensor.dataAvailable(1000)) {
-        cout << "Returned: " << sensor.readDataStr(1024) << endl;
-    } else {
-        cerr << "Timed out waiting for response" << endl;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Instantiate a GPRS Module on UART 0
-    upm::GPRS sensor(0);
-
-    // Set the baud rate, 19200 baud is the default.
-    if (sensor.setBaudRate(19200) != 0) {
-        cerr << "Failed to set tty baud rate" << endl;
-        return 1;
-    }
-
-    printUsage(argv[0]);
-
-    if (argc > 1) {
-        cout << "Sending command line argument (" << argv[1] << ")..." << endl;
-        sendCommand(sensor, argv[1]);
-    } else {
-        // query the module manufacturer
-        cout << "Querying module manufacturer (AT+CGMI)..." << endl;
-        sendCommand(sensor, "AT+CGMI");
-
-        upm_delay(1);
-
-        // query the saved profiles
-        cout << "Querying the saved profiles (AT&V)..." << endl;
-        sendCommand(sensor, "AT&V");
-
-        // A comprehensive list is available from the datasheet at:
-        // http://www.seeedstudio.com/wiki/images/7/72/AT_Commands_v1.11.pdf
-    }
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/grove-grovebutton.cxx b/examples/c++/grove-grovebutton.cxx
deleted file mode 100644
index eae504c..0000000
--- a/examples/c++/grove-grovebutton.cxx
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "grovebutton.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    // This example uses GPIO 0
-    //! [Interesting]
-
-    // Create the button object using GPIO pin 0
-    upm::GroveButton button(0);
-
-    // Read the input and print, waiting one second between readings
-    while (1) {
-        std::cout << button.name() << " value is " << button.value() << std::endl;
-        upm_delay(1);
-    }
-
-    // Delete the button object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/grove-groveled-multi.cxx b/examples/c++/grove-groveled-multi.cxx
deleted file mode 100644
index b82512b..0000000
--- a/examples/c++/grove-groveled-multi.cxx
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014-2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "groveled.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a grove LED on D2.  Here we are controlling a Grove
-    // Multi-color flash LED.  We just just need to turn it on - it will
-    // then cycle through various colors (red, green, blue, purple) on it's
-    // own until turned off.
-    upm::GroveLed led(2);
-
-    // start the light show
-    led.on();
-
-    // just upm_delay until interrupted
-    while (shouldRun)
-        upm_delay(1);
-
-    //! [Interesting]
-
-    led.off();
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/grove-groveled.cxx b/examples/c++/grove-groveled.cxx
deleted file mode 100644
index 02b8e0e..0000000
--- a/examples/c++/grove-groveled.cxx
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "groveled.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Create the Grove LED object using GPIO pin 2
-    upm::GroveLed led(2);
-
-    // Print the name
-    std::cout << led.name() << std::endl;
-
-    // Turn the LED on and off 10 times, pausing one second
-    // between transitions
-    for (int i = 0; i < 10; i++) {
-        led.on();
-        upm_delay(1);
-        led.off();
-        upm_delay(1);
-    }
-
-    // Delete the Grove LED object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/grove-grovelight.cxx b/examples/c++/grove-grovelight.cxx
deleted file mode 100644
index b0255c6..0000000
--- a/examples/c++/grove-grovelight.cxx
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "grovelight.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Create the light sensor object using AIO pin 0
-    upm::GroveLight light(0);
-
-    // Read the input and print both the raw value and a rough lux value,
-    // waiting one second between readings
-    while (1) {
-        std::cout << light.name() << " raw value is " << light.raw_value() << ", which is roughly "
-                  << light.value() << " lux" << std::endl;
-        upm_delay(1);
-    }
-
-    // Delete the light sensor object
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/grove-groverelay.cxx b/examples/c++/grove-groverelay.cxx
deleted file mode 100644
index 653a748..0000000
--- a/examples/c++/grove-groverelay.cxx
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "groverelay.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    // This example uses GPIO 0
-    //! [Interesting]
-
-    // Create the relay switch object using GPIO pin 0
-    upm::GroveRelay relay(0);
-
-    // Close and then open the relay switch 3 times,
-    // waiting one second each time.  The LED on the relay switch
-    // will light up when the switch is on (closed).
-    // The switch will also make a noise between transitions.
-    for (int i = 0; i < 3; i++) {
-        relay.on();
-        if (relay.isOn())
-            std::cout << relay.name() << " is on" << std::endl;
-        upm_delay(1);
-        relay.off();
-        if (relay.isOff())
-            std::cout << relay.name() << " is off" << std::endl;
-        upm_delay(1);
-    }
-
-    // Delete the relay switch object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/grove-groverotary.cxx b/examples/c++/grove-groverotary.cxx
deleted file mode 100644
index a101a0b..0000000
--- a/examples/c++/grove-groverotary.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-#include <stdio.h>
-#include <string>
-
-#include "groverotary.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-    // Instantiate a rotary sensor on analog pin A0
-    upm::GroveRotary knob(0);
-
-    // Print sensor name to confirm it initialized properly
-    cout << knob.name() << endl;
-
-    while (true) {
-        float abs_value = knob.abs_value(); // Absolute raw value
-        float abs_deg = knob.abs_deg();     // Absolute degrees
-        float abs_rad = knob.abs_rad();     // Absolute radians
-        float rel_value = knob.rel_value(); // Relative raw value
-        float rel_deg = knob.rel_deg();     // Relative degrees
-        float rel_rad = knob.rel_rad();     // Relative radians
-
-        fprintf(stdout,
-                "Absolute: %4d raw %5.2f deg = %3.2f rad Relative: %4d raw %5.2f "
-                "deg %3.2f rad\n",
-                (int16_t) abs_value,
-                abs_deg,
-                abs_rad,
-                (int16_t) rel_value,
-                rel_deg,
-                rel_rad);
-
-        upm_delay_us(2500000); // Sleep for 2.5s
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/grove-groveslide.cxx b/examples/c++/grove-groveslide.cxx
deleted file mode 100644
index 5b734ce..0000000
--- a/examples/c++/grove-groveslide.cxx
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-#include <stdio.h>
-#include <string>
-
-#include "groveslide.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-    upm::GroveSlide slide(0);
-
-    cout << slide.name() << endl;
-
-    while (true) {
-        float adc_value = slide.raw_value(); // Read raw value
-        float volts = slide.voltage_value(); // Read voltage, board reference set at 5.0V
-        fprintf(stdout, "%4d = %.2f V\n", (uint16_t) adc_value, volts);
-
-        upm_delay_us(2500000); // Sleep for 2.5s
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/grove-grovetemp.cxx b/examples/c++/grove-grovetemp.cxx
deleted file mode 100644
index 600fdb4..0000000
--- a/examples/c++/grove-grovetemp.cxx
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdio.h>
-#include <string>
-
-#include "grovetemp.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Create the temperature sensor object using AIO pin 0
-    upm::GroveTemp temp(0);
-    std::cout << temp.name() << std::endl;
-
-    // Read the temperature ten times, printing both the Celsius and
-    // equivalent Fahrenheit temperature, waiting one second between readings
-    for (int i = 0; i < 10; i++) {
-        int celsius = temp.value();
-        int fahrenheit = (int) (celsius * 9.0 / 5.0 + 32.0);
-        printf("%d degrees Celsius, or %d degrees Fahrenheit\n", celsius, fahrenheit);
-        upm_delay(1);
-    }
-
-    // Delete the temperature sensor object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/grovecollision.cxx b/examples/c++/grovecollision.cxx
deleted file mode 100644
index 5471f81..0000000
--- a/examples/c++/grovecollision.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "grovecollision.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the Grove Collision Sensor
-    // Instantiate a Grove Collision on digital pin D2
-    upm::GroveCollision collision(2);
-
-    bool collisionState = false;
-    cout << "No collision" << endl;
-    while (shouldRun) {
-        if (collision.isColliding() && !collisionState) {
-            cout << "Collision!" << endl;
-            collisionState = true;
-        } else if (collisionState) {
-            cout << "No collision" << endl;
-            collisionState = false;
-        }
-    }
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/groveehr.cxx b/examples/c++/groveehr.cxx
deleted file mode 100644
index 261edc4..0000000
--- a/examples/c++/groveehr.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "groveehr.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Ear-clip Heart Rate sensor on digital pin D2
-    upm::GroveEHR heart(2);
-
-    // set the beat counter to 0, init the clock and start counting beats
-    heart.clearBeatCounter();
-    heart.initClock();
-    heart.startBeatCounter();
-
-    while (shouldRun) {
-        // we grab these just for display purposes in this example
-        uint32_t millis = heart.getMillis();
-        uint32_t beats = heart.beatCounter();
-
-        // heartRate() requires that at least 5 seconds pass before
-        // returning anything other than 0
-        int hr = heart.heartRate();
-
-        // output milliseconds passed, beat count, and computed heart rate
-        cout << "Millis: " << millis << " Beats: " << beats;
-        cout << " Heart Rate: " << hr << endl;
-
-        upm_delay(1);
-    }
-
-    heart.stopBeatCounter();
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/groveeldriver.cxx b/examples/c++/groveeldriver.cxx
deleted file mode 100644
index a390b6a..0000000
--- a/examples/c++/groveeldriver.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "groveeldriver.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the Grove El Driver Module
-    // Instantiate a Grove El Driver on digital pin D2
-    upm::GroveElDriver eldriver(2);
-
-    bool lightState = true;
-
-    while (shouldRun) {
-        if (lightState)
-            eldriver.on();
-        else
-            eldriver.off();
-        lightState = !lightState;
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-    eldriver.off();
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/groveelectromagnet.cxx b/examples/c++/groveelectromagnet.cxx
deleted file mode 100644
index 01df036..0000000
--- a/examples/c++/groveelectromagnet.cxx
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-#include <sys/time.h>
-#include <time.h>
-
-#include "groveelectromagnet.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-float
-get_time()
-{
-    return ((float) (clock())) / CLOCKS_PER_SEC;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the Grove Electromagnetic Module
-    // Instantiate a Grove Electromagnet on digital pin D2
-    upm::GroveElectromagnet magnet(2);
-    cout << "Starting up magnet...." << endl;
-    magnet.off();
-
-    bool magnetState = false;
-    float time_passed = get_time();
-
-    // Turn magnet on and off every 5 seconds
-    while (shouldRun) {
-        if ((get_time() - time_passed) > 5.0) {
-            magnetState = !magnetState;
-            if (magnetState)
-                magnet.on();
-            else
-                magnet.off();
-            cout << "Turning magnet " << ((magnetState) ? "on" : "off") << endl;
-            time_passed = get_time();
-        }
-    }
-
-    //! [Interesting]
-    magnet.off();
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/groveemg.cxx b/examples/c++/groveemg.cxx
deleted file mode 100644
index 6e1ae05..0000000
--- a/examples/c++/groveemg.cxx
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "groveemg.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the GroveEMG Muscle Signal Reader Sensor Module
-    // Instantiate a GroveEMG on analog pin A0
-    upm::GroveEMG emg(0);
-    cout << "Calibrating...." << endl;
-    emg.calibrate();
-
-    while (shouldRun) {
-        cout << emg.value() << endl;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-    return 0;
-}
diff --git a/examples/c++/grovegprs.cxx b/examples/c++/grovegprs.cxx
deleted file mode 100644
index 1d99177..0000000
--- a/examples/c++/grovegprs.cxx
+++ /dev/null
@@ -1,102 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "grovegprs.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-void
-printUsage(char* progname)
-{
-    cout << "Usage: " << progname << " [AT command]" << endl;
-    cout << endl;
-
-    cout << "If an argument is supplied on the command line, that argument is" << endl;
-    cout << "sent to the module and the response is printed out." << endl;
-    cout << endl;
-    cout << "If no argument is used, then the manufacturer and the current" << endl;
-    cout << "saved profiles are queried and the results printed out." << endl;
-    cout << endl;
-    cout << endl;
-}
-
-// simple helper function to send a command and wait for a response
-void
-sendCommand(upm::GroveGPRS& sensor, string cmd)
-{
-    // commands need to be terminated with a carriage return
-    cmd += "\r";
-
-    sensor.writeDataStr(cmd);
-
-    // wait up to 1 second
-    if (sensor.dataAvailable(1000)) {
-        cout << "Returned: " << sensor.readDataStr(1024) << endl;
-    } else {
-        cerr << "Timed out waiting for response" << endl;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Instantiate a GroveGPRS Module on UART 0
-    upm::GroveGPRS sensor(0);
-
-    // Set the baud rate, 19200 baud is the default.
-    if (sensor.setBaudRate(19200) != 0) {
-        cerr << "Failed to set tty baud rate" << endl;
-        return 1;
-    }
-
-    printUsage(argv[0]);
-
-    if (argc > 1) {
-        cout << "Sending command line argument (" << argv[1] << ")..." << endl;
-        sendCommand(sensor, argv[1]);
-    } else {
-        // query the module manufacturer
-        cout << "Querying module manufacturer (AT+CGMI)..." << endl;
-        sendCommand(sensor, "AT+CGMI");
-
-        upm_delay(1);
-
-        // query the saved profiles
-        cout << "Querying the saved profiles (AT&V)..." << endl;
-        sendCommand(sensor, "AT&V");
-
-        // A comprehensive list is available from the datasheet at:
-        // http://www.seeedstudio.com/wiki/images/7/72/AT_Commands_v1.11.pdf
-    }
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/grovegsr.cxx b/examples/c++/grovegsr.cxx
deleted file mode 100644
index 89a7f7b..0000000
--- a/examples/c++/grovegsr.cxx
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "grovegsr.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the GroveGSR Galvanic Skin Response Sensor module.
-
-    // Instantiate a GroveGSR on analog pin A0
-    upm::GroveGSR gsr(0);
-    cout << "Calibrating...." << endl;
-    gsr.calibrate();
-
-    while (shouldRun) {
-        cout << gsr.value() << endl;
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/grovelinefinder.cxx b/examples/c++/grovelinefinder.cxx
deleted file mode 100644
index 7c5245f..0000000
--- a/examples/c++/grovelinefinder.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "grovelinefinder.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Line Finder sensor on digital pin D2
-    upm::GroveLineFinder finder(2);
-
-    // check every second for the presence of white detection
-    while (shouldRun) {
-        bool val = finder.whiteDetected();
-        if (val)
-            cout << "White detected." << endl;
-        else
-            cout << "Black detected." << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/grovemd-stepper.cxx b/examples/c++/grovemd-stepper.cxx
deleted file mode 100644
index 3be01f1..0000000
--- a/examples/c++/grovemd-stepper.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "grovemd.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an I2C Grove Motor Driver on I2C bus 0
-
-    upm::GroveMD motors(GROVEMD_I2C_BUS, GROVEMD_DEFAULT_I2C_ADDR);
-
-    // This example demonstrates using the GroveMD to drive a stepper motor
-
-    // configure it, for this example, we'll assume 200 steps per rev
-    motors.configStepper(200);
-
-    // set for half a rotation
-    motors.setStepperSteps(100);
-
-    // let it go - clockwise rotation, 10 RPM speed
-    motors.enableStepper(upm::GroveMD::STEP_DIR_CW, 10);
-
-    upm_delay(3);
-
-    // Now do it backwards...
-    motors.setStepperSteps(100);
-    motors.enableStepper(upm::GroveMD::STEP_DIR_CCW, 10);
-
-    // now disable
-    motors.disableStepper();
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/grovemd.cxx b/examples/c++/grovemd.cxx
deleted file mode 100644
index adf13e0..0000000
--- a/examples/c++/grovemd.cxx
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "grovemd.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an I2C Grove Motor Driver on I2C bus 0
-
-    upm::GroveMD motors(GROVEMD_I2C_BUS, GROVEMD_DEFAULT_I2C_ADDR);
-
-    // set direction to CW and set speed to 50%
-    cout << "Spin M1 and M2 at half speed for 3 seconds" << endl;
-    motors.setMotorDirections(upm::GroveMD::DIR_CW, upm::GroveMD::DIR_CW);
-    motors.setMotorSpeeds(127, 127);
-
-    upm_delay(3);
-    // counter clockwise
-    cout << "Reversing M1 and M2 for 3 seconds" << endl;
-    motors.setMotorDirections(upm::GroveMD::DIR_CCW, upm::GroveMD::DIR_CCW);
-    upm_delay(3);
-
-    //! [Interesting]
-
-    cout << "Stopping motors" << endl;
-    motors.setMotorSpeeds(0, 0);
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/grovemoisture.cxx b/examples/c++/grovemoisture.cxx
deleted file mode 100644
index 6fe4f09..0000000
--- a/examples/c++/grovemoisture.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "grovemoisture.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Moisture sensor on analog pin A0
-    upm::GroveMoisture moisture(0);
-
-    // Values (approximate):
-    // 0-300, sensor in air or dry soil
-    // 300-600, sensor in humid soil
-    // 600+, sensor in wet soil or submerged in water.
-    // Read the value every second and print the corresponding moisture level
-    while (shouldRun) {
-        int val = moisture.value();
-        cout << "Moisture value: " << val << ", ";
-        if (val >= 0 && val < 300)
-            cout << "dry";
-        else if (val >= 300 && val < 600)
-            cout << "moist";
-        else
-            cout << "wet";
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/groveo2.cxx b/examples/c++/groveo2.cxx
deleted file mode 100644
index 5dbc7cb..0000000
--- a/examples/c++/groveo2.cxx
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "groveo2.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the O2 Oxygen Concentration Sensor Module
-    // Instantiate a GroveO2 on analog pin A0
-    upm::GroveO2 O2(0);
-    while (shouldRun) {
-        cout << "The output voltage is: " << O2.voltageValue() << "mV" << endl;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-    return 0;
-}
diff --git a/examples/c++/grovescam.cxx b/examples/c++/grovescam.cxx
deleted file mode 100644
index 81abc6f..0000000
--- a/examples/c++/grovescam.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "grovescam.hpp"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Instantiate a Grove Serial Camera on UART 0
-    upm::GROVESCAM camera(0);
-
-    // make sure port is initialized properly.  115200 baud is the default.
-    if (!camera.setupTty()) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    if (camera.init())
-        cout << "Initialized..." << endl;
-    else
-        cout << "init() failed" << endl;
-
-    if (camera.preCapture())
-        cout << "preCapture succeeded..." << endl;
-    else
-        cout << "preCapture failed." << endl;
-
-    if (camera.doCapture())
-        cout << "doCapture succeeded..." << endl;
-    else
-        cout << "doCapture failed." << endl;
-
-    cout << "Image size is " << camera.getImageSize() << " bytes" << endl;
-
-    if (camera.getImageSize() > 0) {
-        cout << "Storing image.jpg..." << endl;
-        if (camera.storeImage("image.jpg"))
-            cout << "storeImage succeeded..." << endl;
-        else
-            cout << "storeImage failed." << endl;
-    }
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/grovespeaker.cxx b/examples/c++/grovespeaker.cxx
deleted file mode 100644
index 8a4427f..0000000
--- a/examples/c++/grovespeaker.cxx
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "grovespeaker.hpp"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-    // Instantiate a Grove Speaker on digital pin D2
-    upm::GroveSpeaker speaker(2);
-
-    // Play all 7 of the lowest notes
-    speaker.playAll();
-
-    // Play a medium C-sharp
-    speaker.playSound('c', true, "med");
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/groveultrasonic.cxx b/examples/c++/groveultrasonic.cxx
deleted file mode 100644
index cc36ecc..0000000
--- a/examples/c++/groveultrasonic.cxx
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Jun Kato <i@junkato.jp>
- * Copyright (c) 2015 Jun Kato.
- *
- * Thanks to Seeed Studio for a working arduino sketch
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <signal.h>
-#include <stdio.h>
-
-#include "groveultrasonic.hpp"
-#include "upm_utilities.h"
-
-bool running = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        running = false;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-    // upm::GroveUltraSonic *sonar = NULL;
-    upm::GroveUltraSonic sonar(2);
-    while (running) {
-        int width = sonar.getDistance();
-        printf("Echo width = %d\n", width);
-        printf("Distance inches = %f.2\n\n", width / 148.0);
-        upm_delay(3);
-    }
-    //! [Interesting]
-    printf("exiting application\n");
-    return 0;
-}
diff --git a/examples/c++/grovevdiv.cxx b/examples/c++/grovevdiv.cxx
deleted file mode 100644
index f090c69..0000000
--- a/examples/c++/grovevdiv.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "grovevdiv.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Voltage Divider sensor on analog pin A0
-    upm::GroveVDiv vDiv(0);
-
-    // collect data and output measured voltage according to the setting
-    // of the scaling switch (3 or 10)
-    while (shouldRun) {
-        unsigned int val = vDiv.value(100);
-        float gain3val = vDiv.computedValue(3, val);
-        float gain10val = vDiv.computedValue(10, val);
-        cout << "ADC value: " << val << " Gain 3: " << gain3val << "v Gain 10: " << gain10val << "v"
-             << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/grovewater.cxx b/examples/c++/grovewater.cxx
deleted file mode 100644
index 88ed496..0000000
--- a/examples/c++/grovewater.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "grovewater.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Water sensor on digital pin D2
-    upm::GroveWater water(2);
-
-    while (shouldRun) {
-        bool val = water.isWet();
-        if (val)
-            cout << "Sensor is wet." << endl;
-        else
-            cout << "Sensor is dry." << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/grovewfs.cxx b/examples/c++/grovewfs.cxx
deleted file mode 100644
index 45e5342..0000000
--- a/examples/c++/grovewfs.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "grovewfs.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Water Flow Sensor on digital pin D2
-    upm::GroveWFS flow(2);
-
-    // set the flow counter to 0 and start counting
-    flow.clearFlowCounter();
-    flow.startFlowCounter();
-
-    while (shouldRun) {
-        // we grab these (,illis and flowCount) just for display
-        // purposes in this example
-        uint32_t millis = flow.getMillis();
-        uint32_t flowCount = flow.flowCounter();
-
-        float fr = flow.flowRate();
-
-        // output milliseconds passed, flow count, and computed flow rate
-        cout << "Millis: " << millis << " Flow Count: " << flowCount;
-        cout << " Flow Rate: " << fr << " LPM" << endl;
-
-        // best to gather data for at least one second for reasonable
-        // results.
-        upm_delay(2);
-    }
-
-    flow.stopFlowCounter();
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/gsr.cxx b/examples/c++/gsr.cxx
deleted file mode 100644
index 9e55943..0000000
--- a/examples/c++/gsr.cxx
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "gsr.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the GSR Galvanic Skin Response Sensor module.
-
-    // Instantiate a GSR on analog pin A0
-    upm::GSR gsr(0);
-    cout << "Calibrating...." << endl;
-    gsr.calibrate();
-
-    while (shouldRun) {
-        cout << gsr.value() << endl;
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/guvas12d.cxx b/examples/c++/guvas12d.cxx
deleted file mode 100644
index 7496055..0000000
--- a/examples/c++/guvas12d.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "guvas12d.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-// analog voltage, usually 3.3 or 5.0
-#define GUVAS12D_AREF 5.0
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // This was tested with the Grove UV Sensor module.
-    // It has a sensing range from between 240-370nm.  It's strongest
-    // response is around 320-360nm.
-
-    // Instantiate a GUVAS12D on analog pin A0
-    upm::GUVAS12D volts(0);
-
-    // The higher the voltage the more intense the UV radiation.
-
-    while (shouldRun) {
-        cout << "Volts: " << volts.volts() << ", Intensity: " << volts.intensity() << " mW/m^2"
-             << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/h3lis331dl.cxx b/examples/c++/h3lis331dl.cxx
deleted file mode 100644
index fe269b3..0000000
--- a/examples/c++/h3lis331dl.cxx
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "h3lis331dl.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an H3LIS331DL on I2C bus 0
-
-    upm::H3LIS331DL accel(H3LIS331DL_I2C_BUS, H3LIS331DL_DEFAULT_I2C_ADDR);
-
-    // Initialize the device with default values
-    accel.init();
-
-    while (shouldRun) {
-        int x, y, z;
-        float ax, ay, az;
-
-        accel.update();
-
-        accel.getRawXYZ(&x, &y, &z);
-        accel.getAcceleration(&ax, &ay, &az);
-
-        cout << "Raw: X = " << x << " Y = " << y << " Z = " << z << endl;
-
-        cout << "Acceleration: AX = " << ax << " AY = " << ay << " AZ = " << az << endl;
-
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/h803x.cxx b/examples/c++/h803x.cxx
deleted file mode 100644
index 8738cb4..0000000
--- a/examples/c++/h803x.cxx
+++ /dev/null
@@ -1,121 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "h803x.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyUSB0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device " << defaultDev << endl;
-    cout << "Initializing..." << endl;
-
-    // Instantiate an H803X instance, using MODBUS slave address 1, and
-    // default comm parameters (9600, 8, N, 2)
-    upm::H803X sensor(defaultDev, 1);
-
-    // output the Slave ID string
-    cout << "Slave ID: " << sensor.getSlaveID() << endl;
-    cout << endl;
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // H8035 / H8036
-        cout << "Consumption (kWh): " << sensor.getConsumption() << endl;
-        cout << "Real Power (kW): " << sensor.getRealPower() << endl;
-
-        if (sensor.isH8036()) {
-            // The H8036 has much more data available...
-
-            cout << "Reactive Power (kVAR): " << sensor.getReactivePower() << endl;
-            cout << "Apparent Power (kVA): " << sensor.getApparentPower() << endl;
-            cout << "Power Factor: " << sensor.getPowerFactor() << endl;
-            cout << "Volts Line to Line: " << sensor.getVoltsLineToLine() << endl;
-            cout << "Volts Line to Neutral: " << sensor.getVoltsLineToNeutral() << endl;
-
-            cout << "Current: " << sensor.getCurrent() << endl;
-
-            cout << "Real Power Phase A (kW): " << sensor.getRealPowerPhaseA() << endl;
-            cout << "Real Power Phase B (kW): " << sensor.getRealPowerPhaseB() << endl;
-            cout << "Real Power Phase C (kW): " << sensor.getRealPowerPhaseC() << endl;
-
-            cout << "Power Factor Phase A: " << sensor.getPowerFactorPhaseA() << endl;
-            cout << "Power Factor Phase B: " << sensor.getPowerFactorPhaseB() << endl;
-            cout << "Power Factor Phase C: " << sensor.getPowerFactorPhaseC() << endl;
-
-            cout << "Volts Phase A to B: " << sensor.getVoltsPhaseAToB() << endl;
-            cout << "Volts Phase B to C: " << sensor.getVoltsPhaseBToC() << endl;
-            cout << "Volts Phase A to C: " << sensor.getVoltsPhaseAToC() << endl;
-            cout << "Volts Phase A to Neutral: " << sensor.getVoltsPhaseAToNeutral() << endl;
-            cout << "Volts Phase B to Neutral: " << sensor.getVoltsPhaseBToNeutral() << endl;
-            cout << "Volts Phase C to Neutral: " << sensor.getVoltsPhaseCToNeutral() << endl;
-
-            cout << "Current Phase A: " << sensor.getCurrentPhaseA() << endl;
-            cout << "Current Phase B: " << sensor.getCurrentPhaseB() << endl;
-            cout << "Current Phase C: " << sensor.getCurrentPhaseC() << endl;
-
-            cout << "Avg Real Power (kW): " << sensor.getAvgRealPower() << endl;
-            cout << "Min Real Power (kW): " << sensor.getMinRealPower() << endl;
-            cout << "Max Real Power (kW): " << sensor.getMaxRealPower() << endl;
-        }
-
-        cout << endl;
-
-        upm_delay(2);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/hcsr04.cxx b/examples/c++/hcsr04.cxx
deleted file mode 100644
index b5a6d85..0000000
--- a/examples/c++/hcsr04.cxx
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "hcsr04.hpp"
-#include "upm_utilities.h"
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        shouldRun = false;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    upm::HCSR04 sonar(2, 4);
-    signal(SIGINT, sig_handler);
-
-    upm_delay(1);
-
-    while (shouldRun) {
-        std::cout << "get distance" << std::endl;
-        double distance = sonar.getDistance(HCSR04_CM);
-        std::cout << "distance " << distance << std::endl;
-        upm_delay(2);
-    }
-    std::cout << "Exiting... " << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/hdc1000.cxx b/examples/c++/hdc1000.cxx
deleted file mode 100644
index dd12b3d..0000000
--- a/examples/c++/hdc1000.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/* Author: Norbert Wesp <nwesp@phytec.de>
- * Copyright (c) 2017 Phytec Messtechnik GmbH.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "hdc1000.hpp"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-bool run = true;
-
-void
-sig_handler(int sig)
-{
-    if (sig == SIGINT)
-        run = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    std::cout << "Initializing test-application..." << std::endl;
-
-    // Instantiate an HDC1000 instance on bus 1
-    upm::HDC1000 mySensor(1);
-
-    // update and print available values every second
-    while (run) {
-        std::cout << "Humidity: " << mySensor.getHumidity(true) << std::endl
-                  << "Temperature: " << mySensor.getTemperature(true) << std::endl;
-
-        std::cout << std::endl;
-
-        upm_delay(1);
-    }
-
-    std::cout << "Exiting test-application..." << std::endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/hdxxvxta.cxx b/examples/c++/hdxxvxta.cxx
deleted file mode 100644
index ccd644c..0000000
--- a/examples/c++/hdxxvxta.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "hdxxvxta.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    cout << "Initializing..." << endl;
-
-    // Instantiate an HDXXVXTA instance, using A1 for humidity and A0
-    // for temperature
-    upm::HDXXVXTA sensor(1, 0);
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << "Humidity: " << sensor.getHumidity() << " %" << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/hka5.cxx b/examples/c++/hka5.cxx
deleted file mode 100644
index 8d7102e..0000000
--- a/examples/c++/hka5.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "hka5.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a HKA5 sensor on uart 0.  We don't use the set or
-    // reset pins, so we pass -1 for them.
-    upm::HKA5 sensor(0, -1, -1);
-
-    // update once every 2 seconds and output data
-    while (shouldRun) {
-        sensor.update();
-
-        cout << "PM 1  : " << sensor.getPM1() << " ug/m3" << endl;
-        cout << "PM 2.5: " << sensor.getPM2_5() << " ug/m3" << endl;
-        cout << "PM 10 : " << sensor.getPM10() << " ug/m3" << endl;
-        cout << endl;
-
-        upm_delay(2);
-    }
-
-    if (shouldRun)
-        cerr << "Timed out" << endl;
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/hlg150h.cxx b/examples/c++/hlg150h.cxx
deleted file mode 100644
index 660058c..0000000
--- a/examples/c++/hlg150h.cxx
+++ /dev/null
@@ -1,43 +0,0 @@
-#include <iostream>
-#include <stdlib.h>
-#include <string>
-
-#include "hlg150h.hpp"
-#include "iLightController.hpp"
-
-#define HLG150H_GPIO_RELAY 21
-#define HLG150H_GPIO_PWM 22
-
-void
-printState(upm::ILightController& lightController)
-{
-    if (lightController.isPowered()) {
-        std::cout << "Light is powered, brightness = " << lightController.getBrightness()
-                  << std::endl;
-    } else {
-        std::cout << "Light is not powered." << std::endl;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::HLG150H lightController(HLG150H_GPIO_RELAY, HLG150H_GPIO_PWM);
-    std::cout << "Existing state: ";
-    printState(lightController);
-    if (argc == 2) {
-        std::string arg = argv[1];
-        int brightness = ::atoi(argv[1]);
-        if (brightness > 0) {
-            lightController.setPowerOn();
-            lightController.setBrightness(brightness);
-        } else
-            lightController.setPowerOff();
-    }
-    std::cout << "Now: ";
-    printState(lightController);
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/hm11.cxx b/examples/c++/hm11.cxx
deleted file mode 100644
index d65a1b0..0000000
--- a/examples/c++/hm11.cxx
+++ /dev/null
@@ -1,116 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdio.h>
-#include <string.h>
-#include <string>
-
-#include "hm11.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-void
-printUsage(char* progname)
-{
-    cout << "Usage: " << progname << " [AT command]" << endl;
-    cout << endl;
-
-    cout << "If an argument is supplied on the command line, that argument is" << endl;
-    cout << "sent to the module and the response is printed out." << endl;
-    cout << endl;
-    cout << "If no argument is used, then the address and PIN of the module" << endl;
-    cout << "are queried and the results printed out." << endl;
-    cout << endl;
-    cout << endl;
-}
-
-// simple helper function to send a command and wait for a response
-void
-sendCommand(upm::HM11& ble, char* cmd)
-{
-    char buffer[BUFSIZ];
-    ble.writeData(cmd, strlen(cmd));
-
-    // wait up to 1 second
-    if (ble.dataAvailable(1000)) {
-        memset(buffer, 0, BUFSIZ);
-
-        ble.readData(buffer, BUFSIZ - 1);
-        cout << "Returned: " << buffer << endl;
-    } else {
-        cerr << "Timed out waiting for response" << endl;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a HM11 BLE Module on UART 0
-
-    upm::HM11 ble(0);
-
-    // make sure port is initialized properly.  9600 baud is the default.
-    if (!ble.setupTty(B9600)) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    printUsage(argv[0]);
-
-    if (argc > 1) {
-        cout << "Sending command line argument (" << argv[1] << ")..." << endl;
-        sendCommand(ble, argv[1]);
-    } else {
-        // query the module address
-        char addr[] = "AT+ADDR?";
-        cout << "Querying module address (" << addr << ")..." << endl;
-        sendCommand(ble, addr);
-
-        upm_delay(1);
-
-        // query the module address
-        char pin[] = "AT+PASS?";
-        cout << "Querying module PIN (" << pin << ")..." << endl;
-        sendCommand(ble, pin);
-
-        // Other potentially useful commands are:
-        //
-        // AT+VERS? - query module version
-        // AT+ROLE0 - set as slave
-        // AT+ROLE1 - set as master
-        // AT+CLEAR - clear all previous settings
-        // AT+RESET - restart the device
-        //
-        // A comprehensive list is available from the datasheet at:
-        // http://www.seeedstudio.com/wiki/images/c/cd/Bluetooth4_en.pdf
-    }
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/hmc5883l.cxx b/examples/c++/hmc5883l.cxx
deleted file mode 100644
index 04cee8c..0000000
--- a/examples/c++/hmc5883l.cxx
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-
-#include "hmc5883l.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate on I2C
-    upm::Hmc5883l compass(0);
-
-    compass.set_declination(0.2749); // Set your declination from
-    // true north in radians
-
-    // Print out the coordinates, heading, and direction every second
-    while (true) {
-        compass.update(); // Update the coordinates
-        const int16_t* pos = compass.coordinates();
-        fprintf(stdout, "coor: %5d %5d %5d ", pos[0], pos[1], pos[2]);
-        fprintf(stdout, "heading: %5.2f direction: %3.2f\n", compass.heading(), compass.direction());
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/hmtrp.cxx b/examples/c++/hmtrp.cxx
deleted file mode 100644
index 16816d1..0000000
--- a/examples/c++/hmtrp.cxx
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string.h>
-#include <string>
-
-#include "hmtrp.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-void
-printUsage()
-{
-    cout << "Usage:" << endl;
-    cout << "Pass a commandline argument (any argument) to this program" << endl;
-    cout << "to query the radio configuration and output it.  NOTE: the" << endl;
-    cout << "radio must be in CONFIG mode for this to work." << endl;
-    cout << endl;
-    cout << "Running this program without arguments will simply transmit" << endl;
-    cout << "'Hello World!' every second, and output any data received from" << endl;
-    cout << "another radio." << endl;
-    cout << endl;
-}
-
-const size_t bufferLength = 256;
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a HMTRP radio device on uart 0
-
-    upm::HMTRP radio(0);
-
-    // make sure port is initialized properly.  9600 baud is the default.
-    if (!radio.setupTty(B9600)) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    printUsage();
-
-    // By default, this radio simply transmits data sent via writeData()
-    // and reads any available data via readData().
-
-    // It can be placed into a configuration mode by grounding the
-    // CONFIG pin on the module.  When this is done, the various
-    // configuration query and config methods can be used.  In this
-    // example, by default, we just read any data available fom the
-    // device, and periodically transmit "Hello World".
-
-    // If any argument was specified on the command line, do a simple
-    // configuration query and output the results.  The radio must be in
-    // CONFIG mode for this to work.
-
-    if (argc > 1) {
-        // config mode
-        uint32_t freq;
-        uint32_t dataRate;
-        uint16_t rxBandwidth;
-        uint8_t modulation;
-        uint8_t txPower;
-        uint32_t uartBaud;
-
-        if (radio.getConfig(&freq, &dataRate, &rxBandwidth, &modulation, &txPower, &uartBaud)) {
-            cout << "Radio configuration:" << endl;
-            cout << "freq: " << freq << " dataRate: " << dataRate << " rxBandwidth: " << rxBandwidth
-                 << "Khz" << endl;
-
-            cout << "modulation: " << int(modulation) << "Khz txPower: " << int(txPower)
-                 << " uartBaud: " << uartBaud << endl;
-        } else {
-            cerr << "getConfig() failed.  Make sure the radio is in "
-                 << "CONFIG mode." << endl;
-        }
-    } else {
-        // normal read/write mode
-        char radioBuffer[bufferLength];
-        int counter = 0;
-        cout << "Running in normal read/write mode." << endl;
-
-        while (shouldRun) {
-            // we don't want the read to block in this example, so always
-            // check to see if data is available first.
-            if (radio.dataAvailable()) {
-                memset(radioBuffer, 0, bufferLength);
-                int rv = radio.readData(radioBuffer, bufferLength - 1);
-
-                if (rv > 0)
-                    cout << "Received: " << radioBuffer << endl;
-
-                if (rv < 0) // some sort of read error occurred
-                {
-                    cerr << "Port read error." << endl;
-                    break;
-                }
-
-                continue;
-            }
-
-            upm_delay_us(100000); // 100ms
-            counter++;
-            // every second, transmit "Hello World"
-            if (counter > 10) {
-                static const char* hello = "Hello World!";
-                cout << "Transmitting hello world..." << endl;
-                radio.writeData((char*) hello, strlen(hello) + 1);
-                counter = 0;
-            }
-        }
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/hp20x.cxx b/examples/c++/hp20x.cxx
deleted file mode 100644
index fdcf015..0000000
--- a/examples/c++/hp20x.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "hp20x.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an HP20X on default I2C bus and address
-
-    upm::HP20X bar;
-
-    // Initialize the device with default values
-    bar.init();
-
-    // Output data every second until interrupted
-    while (shouldRun) {
-        printf("Temperature: %f Celsius\n", bar.getTemperature());
-        printf("Pressure:    %f Millibars\n", bar.getPressure());
-        printf("Altitude:    %f Meters\n", bar.getAltitude());
-
-        printf("\n");
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ht9170.cxx b/examples/c++/ht9170.cxx
deleted file mode 100644
index 53352c2..0000000
--- a/examples/c++/ht9170.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ht9170.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a DTMF decoder
-    upm::HT9170 dtmf(12, 11, 10, 9, 8);
-
-    // Now we just spin in a loop, upm_delaying every 100ms, checking to see
-    // if a digit is available.  If so, we decode and print the digit,
-    // and continue looping.
-
-    while (shouldRun) {
-        if (dtmf.digitReady()) {
-            cout << "Got DTMF code: " << dtmf.decodeDigit() << endl;
-            // now spin until digitReady() goes false again
-            while (dtmf.digitReady())
-                ;
-        }
-
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/htu21d.cxx b/examples/c++/htu21d.cxx
deleted file mode 100644
index 5f8d71b..0000000
--- a/examples/c++/htu21d.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: William Penner <william.penner@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "htu21d.hpp"
-#include "upm_utilities.h"
-
-volatile int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        printf("\nCtrl-C received.\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    // Register signal handler
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    float humidity = 0.0;
-    float temperature = 0.0;
-    float compRH = 0.0;
-
-    upm::HTU21D sensor(0, HTU21D_I2C_ADDRESS);
-
-    sensor.testSensor();
-
-    while (!doWork) {
-        compRH = sensor.getCompRH(true);
-        humidity = sensor.getHumidity(false);
-        temperature = sensor.getTemperature(false);
-
-        std::cout << "humidity value = " << humidity << ", temperature value = " << temperature
-                  << ", compensated RH value = " << compRH << std::endl;
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/hwxpxx.cxx b/examples/c++/hwxpxx.cxx
deleted file mode 100644
index 50d04a4..0000000
--- a/examples/c++/hwxpxx.cxx
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "hwxpxx.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyUSB0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device " << defaultDev << endl;
-    cout << "Initializing..." << endl;
-
-    // Instantiate an HWXPXX instance, using MODBUS slave address 3, and
-    // default comm parameters (19200, 8, N, 2)
-    upm::HWXPXX sensor(defaultDev, 3);
-
-    // output the Slave ID (manufacturer, model, serno)
-    cout << "Slave ID: " << sensor.getSlaveID() << endl;
-
-    // stored temperature and humidity offsets
-    cout << "Temperature Offset: " << sensor.getTemperatureOffset() << endl;
-    cout << "Humidity Offset: " << sensor.getHumidityOffset() << endl;
-
-    cout << endl;
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << "Humidity: " << sensor.getHumidity() << " %" << endl;
-
-        cout << "Slider: " << sensor.getSlider() << " %" << endl;
-
-        cout << "Override Switch Status: " << sensor.getOverrideSwitchStatus() << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/hx711.cxx b/examples/c++/hx711.cxx
deleted file mode 100644
index 4dedd4e..0000000
--- a/examples/c++/hx711.cxx
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
-*
-* Author: Rafael da Mata Neri <rafael.neri@gmail.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy
-* of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
-* of
-* the Software, and to permit persons to whom the Software is furnished to do
-* so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-* FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-
-//! [Interesting]
-#include "hx711.hpp"
-
-int
-main(int argc, char** argv)
-{
-    upm::HX711 scale(3, 2);
-
-    // 2837: value obtained via calibration
-    scale.setScale(2837);
-    scale.tare();
-    std::cout << scale.getUnits() << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/ili9341.cxx b/examples/c++/ili9341.cxx
deleted file mode 100644
index cde0ff6..0000000
--- a/examples/c++/ili9341.cxx
+++ /dev/null
@@ -1,84 +0,0 @@
-/**
- * Author: Shawn Hymel
- * Copyright (c) 2016 SparkFun Electronics
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "ili9341.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Pins (Edison)
-    // CS_LCD   GP44 (MRAA 31)
-    // CS_SD    GP43 (MRAA 38) unused
-    // DC       GP12 (MRAA 20)
-    // RESEST   GP13 (MRAA 14)
-    upm::ILI9341 lcd(31, 38, 20, 14);
-
-    // Fill the screen with a solid color
-    lcd.fillScreen(lcd.color565(0, 40, 16));
-
-    // Draw some shapes
-    lcd.drawFastVLine(10, 10, 100, ILI9341_RED);
-    lcd.drawFastHLine(20, 10, 50, ILI9341_CYAN);
-    lcd.drawLine(160, 30, 200, 60, ILI9341_GREEN);
-    lcd.fillRect(20, 30, 75, 60, ILI9341_ORANGE);
-    lcd.drawCircle(70, 50, 20, ILI9341_PURPLE);
-    lcd.fillCircle(120, 50, 20, ILI9341_PURPLE);
-    lcd.drawTriangle(50, 100, 10, 140, 90, 140, ILI9341_YELLOW);
-    lcd.fillTriangle(150, 100, 110, 140, 190, 140, ILI9341_YELLOW);
-    lcd.drawRoundRect(20, 150, 50, 30, 10, ILI9341_RED);
-    lcd.drawRoundRect(130, 150, 50, 30, 10, ILI9341_RED);
-    lcd.fillRoundRect(75, 150, 50, 30, 10, ILI9341_RED);
-
-    // Write some text
-    lcd.setCursor(0, 200);
-    lcd.setTextColor(ILI9341_LIGHTGREY);
-    lcd.setTextWrap(true);
-    lcd.setTextSize(1);
-    lcd.print("Text 1\n");
-    lcd.setTextSize(2);
-    lcd.print("Text 2\n");
-    lcd.setTextSize(3);
-    lcd.print("Text 3\n");
-    lcd.setTextSize(4);
-    lcd.print("Text 4\n");
-
-    // Test screen rotation
-    for (int r = 0; r < 4; r++) {
-        lcd.setRotation(r);
-        lcd.fillRect(0, 0, 5, 5, ILI9341_WHITE);
-        upm_delay(1);
-    }
-
-    // Invert colors, wait, then revert back
-    lcd.invertDisplay(true);
-    upm_delay(2);
-    lcd.invertDisplay(false);
-
-    // Don't forget to free up that memory!
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/ims.cxx b/examples/c++/ims.cxx
deleted file mode 100644
index ae574dc..0000000
--- a/examples/c++/ims.cxx
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ims.hpp"
-#include "ims_defs.h"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a IMS instance using i2c bus 0 and default address
-    upm::IMS sensor(0);
-
-    int i2c_addr_cur = IMS_ADDRESS_DEFAULT + 1;
-    while (shouldRun) {
-        std::cout << std::hex << "Version: 0x" << sensor.get_version() << " light: 0x"
-                  << sensor.get_light() << " moisture: 0x" << sensor.get_moisture()
-                  << " temp: " << sensor.get_temperature() << " C" << std::endl;
-
-        // Change the address and continue
-        if (i2c_addr_cur >= 128)
-            i2c_addr_cur = 1;
-        std::cout << "Changing device address to 0x" << i2c_addr_cur << std::endl;
-        sensor.reset_i2c_address(i2c_addr_cur++);
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    std::cout << "Exiting..." << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/ina132.cxx b/examples/c++/ina132.cxx
deleted file mode 100644
index 8cb6ee4..0000000
--- a/examples/c++/ina132.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ina132.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the INA132 Differential Amplifier Sensor module.
-
-    // Instantiate an INA132 on analog pin A0
-    upm::INA132 amplifier(0);
-
-    while (shouldRun) {
-        cout << amplifier.value() << endl;
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/interfaces-humiditysensor.cxx b/examples/c++/interfaces-humiditysensor.cxx
deleted file mode 100644
index 52973dc..0000000
--- a/examples/c++/interfaces-humiditysensor.cxx
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <exception>
-#include <iostream>
-#include <stddef.h>
-
-#include "bme280.hpp"
-#include "iHumiditySensor.hpp"
-#include "mraa/common.h"
-#include "si7005.hpp"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-#define FT4222_I2C_BUS 0
-
-#define EDISON_GPIO_SI7005_CS 20
-
-//! [Interesting]
-// Simple example of using ILightSensor to determine
-// which sensor is present and return its name.
-// ILightSensor is then used to get readings from sensor
-
-upm::IHumiditySensor*
-getHumiditySensor()
-{
-    upm::IHumiditySensor* humiditySensor = NULL;
-
-    try {
-        humiditySensor = new upm::BME280(mraa_get_sub_platform_id(FT4222_I2C_BUS));
-        return humiditySensor;
-    } catch (std::exception& e) {
-        std::cerr << "BME280: " << e.what() << std::endl;
-    }
-
-    try {
-        humiditySensor = new upm::SI7005(EDISON_I2C_BUS, EDISON_GPIO_SI7005_CS);
-        return humiditySensor;
-    } catch (std::exception& e) {
-        std::cerr << "SI7005: " << e.what() << std::endl;
-    }
-    return humiditySensor;
-}
-
-int
-main()
-{
-    upm::IHumiditySensor* humiditySensor = getHumiditySensor();
-    if (humiditySensor == NULL) {
-        std::cout << "Humidity sensor not detected" << std::endl;
-        return 1;
-    }
-    std::cout << "Humidity sensor " << humiditySensor->getModuleName() << " detected" << std::endl;
-    while (true) {
-        try {
-            int value = humiditySensor->getHumidityRelative();
-            std::cout << "Humidity = " << value << "%" << std::endl;
-        } catch (std::exception& e) {
-            std::cerr << e.what() << std::endl;
-        }
-        upm_delay(1);
-    }
-    delete humiditySensor;
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/interfaces-lightcontroller.cxx b/examples/c++/interfaces-lightcontroller.cxx
deleted file mode 100644
index cc99a11..0000000
--- a/examples/c++/interfaces-lightcontroller.cxx
+++ /dev/null
@@ -1,98 +0,0 @@
-#include <exception>
-#include <iostream>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string>
-
-#include "ds1808lc.hpp"
-#include "hlg150h.hpp"
-#include "iLightController.hpp"
-#include "lp8860.hpp"
-
-#define EDISON_I2C_BUS 1  // Edison I2C-1
-#define GPIO_SI7005_CS 20 // Edison GP12
-#define HLG150H_GPIO_RELAY 21
-#define HLG150H_GPIO_PWM 22
-#define LP8860_GPIO_PWR 45         // Edison GP45
-#define DS1808_GPIO_PWR 15         // Edison GP165
-#define DS1808_GPIO_EDISON_LIVE 36 // Edison GP14
-
-//! [Interesting]
-// Simple example of using ILightController to determine
-// which controller is present and return its name.
-// ILightController is then used to get readings from sensor
-
-upm::ILightController*
-getLightController()
-{
-    upm::ILightController* lightController = NULL;
-    try {
-        lightController = new upm::LP8860(LP8860_GPIO_PWR, EDISON_I2C_BUS);
-        return lightController;
-    } catch (std::exception& e) {
-        std::cerr << "LP8860: " << e.what() << std::endl;
-    }
-    try {
-        lightController = new upm::DS1808LC(DS1808_GPIO_PWR, EDISON_I2C_BUS);
-        return lightController;
-    } catch (std::exception& e) {
-        std::cerr << "DS1808LC: " << e.what() << std::endl;
-    }
-    try {
-        lightController = new upm::HLG150H(HLG150H_GPIO_RELAY, HLG150H_GPIO_PWM);
-        return lightController;
-    } catch (std::exception& e) {
-        std::cerr << "HLG150H: " << e.what() << std::endl;
-    }
-    return lightController;
-}
-
-void
-printState(upm::ILightController* lightController)
-{
-    if (lightController->isPowered()) {
-        std::cout << "Light is powered, brightness = " << lightController->getBrightness()
-                  << std::endl;
-    } else {
-        std::cout << "Light is not powered." << std::endl;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    int status = 0;
-    // MraaUtils::setGpio(GPIO_SI7005_CS, 1);
-
-    upm::ILightController* lightController = getLightController();
-    if (lightController != NULL) {
-        std::cout << "Detected light controller " << lightController->getModuleName() << std::endl;
-    } else {
-        std::cerr << "Error. Unsupported platform." << std::endl;
-        return 1;
-    }
-
-    try {
-        std::cout << "Existing state: ";
-        printState(lightController);
-        if (argc == 2) {
-            std::string arg = argv[1];
-            int brightness = ::atoi(argv[1]);
-            if (brightness > 0) {
-                lightController->setPowerOn();
-                lightController->setBrightness(brightness);
-            } else
-                lightController->setPowerOff();
-        }
-        std::cout << "Now: ";
-        printState(lightController);
-    } catch (std::exception& e) {
-        std::cout << "Error: " << e.what() << std::endl;
-        status = 1;
-    }
-
-    delete lightController;
-    return status;
-}
-
-//! [Interesting]
diff --git a/examples/c++/interfaces-lightsensor.cxx b/examples/c++/interfaces-lightsensor.cxx
deleted file mode 100644
index 9f754f8..0000000
--- a/examples/c++/interfaces-lightsensor.cxx
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <exception>
-#include <iostream>
-#include <stddef.h>
-
-#include "iLightSensor.hpp"
-#include "max44009.hpp"
-#include "mraa/common.h"
-#include "si1132.hpp"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-#define FT4222_I2C_BUS 0
-
-//! [Interesting]
-// Simple example of using ILightSensor to determine
-// which sensor is present and return its name.
-// ILightSensor is then used to get readings from sensor
-
-upm::ILightSensor*
-getLightSensor()
-{
-    upm::ILightSensor* lightSensor = NULL;
-    try {
-        lightSensor = new upm::SI1132(mraa_get_sub_platform_id(FT4222_I2C_BUS));
-        return lightSensor;
-    } catch (std::exception& e) {
-        std::cerr << "SI1132: " << e.what() << std::endl;
-    }
-    try {
-        lightSensor = new upm::MAX44009(EDISON_I2C_BUS);
-        return lightSensor;
-    } catch (std::exception& e) {
-        std::cerr << "MAX44009: " << e.what() << std::endl;
-    }
-    return lightSensor;
-}
-
-int
-main()
-{
-    upm::ILightSensor* lightSensor = getLightSensor();
-    if (lightSensor == NULL) {
-        std::cout << "Light sensor not detected" << std::endl;
-        return 1;
-    }
-    std::cout << "Light sensor " << lightSensor->getModuleName() << " detected" << std::endl;
-    while (true) {
-        try {
-            float value = lightSensor->getVisibleLux();
-            std::cout << "Light level = " << value << " lux" << std::endl;
-        } catch (std::exception& e) {
-            std::cerr << e.what() << std::endl;
-        }
-        upm_delay(1);
-    }
-    delete lightSensor;
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/interfaces-pressuresensor.cxx b/examples/c++/interfaces-pressuresensor.cxx
deleted file mode 100644
index 437011a..0000000
--- a/examples/c++/interfaces-pressuresensor.cxx
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <exception>
-#include <iostream>
-#include <stddef.h>
-
-#include "bme280.hpp"
-#include "bmpx8x.hpp"
-#include "iPressureSensor.hpp"
-#include "mraa/common.h"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-#define FT4222_I2C_BUS 0
-
-//! [Interesting]
-// Simple example of using ILightSensor to determine
-// which sensor is present and return its name.
-// ILightSensor is then used to get readings from sensor
-
-upm::IPressureSensor*
-getPressureSensor()
-{
-    upm::IPressureSensor* pressureSensor = NULL;
-    try {
-        pressureSensor = new upm::BME280(mraa_get_sub_platform_id(FT4222_I2C_BUS));
-        return pressureSensor;
-    } catch (std::exception& e) {
-        std::cerr << "BME280: " << e.what() << std::endl;
-    }
-
-    try {
-        pressureSensor = new upm::BMPX8X(EDISON_I2C_BUS);
-        return pressureSensor;
-    } catch (std::exception& e) {
-        std::cerr << "BMPX8X: " << e.what() << std::endl;
-    }
-    return pressureSensor;
-}
-
-int
-main()
-{
-    upm::IPressureSensor* pressureSensor = getPressureSensor();
-    if (pressureSensor == NULL) {
-        std::cout << "Pressure sensor not detected" << std::endl;
-        return 1;
-    }
-    std::cout << "Pressure sensor " << pressureSensor->getModuleName() << " detected" << std::endl;
-    while (true) {
-        try {
-            int value = pressureSensor->getPressurePa();
-            std::cout << "Pressure = " << value << " Pa" << std::endl;
-        } catch (std::exception& e) {
-            std::cerr << e.what() << std::endl;
-        }
-        upm_delay(1);
-    }
-    delete pressureSensor;
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/interfaces-temperaturesensor.cxx b/examples/c++/interfaces-temperaturesensor.cxx
deleted file mode 100644
index 8871166..0000000
--- a/examples/c++/interfaces-temperaturesensor.cxx
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <exception>
-#include <iostream>
-#include <stddef.h>
-
-#include "bme280.hpp"
-#include "bmpx8x.hpp"
-#include "iTemperatureSensor.hpp"
-#include "mraa/common.h"
-#include "si7005.hpp"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-#define FT4222_I2C_BUS 0
-
-#define EDISON_GPIO_SI7005_CS 20
-
-//! [Interesting]
-// Simple example of using ITemperatureSensor to determine
-// which sensor is present and return its name.
-// ITemperatureSensor is then used to get readings from sensor
-
-upm::ITemperatureSensor*
-getTemperatureSensor()
-{
-    upm::ITemperatureSensor* temperatureSensor = NULL;
-
-    try {
-        temperatureSensor = new upm::BME280(mraa_get_sub_platform_id(FT4222_I2C_BUS));
-        return temperatureSensor;
-    } catch (std::exception& e) {
-        std::cerr << "BME280: " << e.what() << std::endl;
-    }
-
-    try {
-        temperatureSensor = new upm::SI7005(EDISON_I2C_BUS, EDISON_GPIO_SI7005_CS);
-        return temperatureSensor;
-    } catch (std::exception& e) {
-        std::cerr << "SI7005: " << e.what() << std::endl;
-    }
-    try {
-        temperatureSensor = new upm::BMPX8X(EDISON_I2C_BUS);
-        return temperatureSensor;
-    } catch (std::exception& e) {
-        std::cerr << "BMPX8X: " << e.what() << std::endl;
-    }
-    return temperatureSensor;
-}
-
-int
-main()
-{
-    upm::ITemperatureSensor* temperatureSensor = getTemperatureSensor();
-    if (temperatureSensor == NULL) {
-        std::cout << "Temperature sensor not detected" << std::endl;
-        return 1;
-    }
-    std::cout << "Temperature sensor " << temperatureSensor->getModuleName() << " detected"
-              << std::endl;
-    while (true) {
-        try {
-            int value = temperatureSensor->getTemperatureCelsius();
-            std::cout << "Temperature = " << value << "C" << std::endl;
-        } catch (std::exception& e) {
-            std::cerr << e.what() << std::endl;
-        }
-        upm_delay(1);
-    }
-    delete temperatureSensor;
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/isd1820.cxx b/examples/c++/isd1820.cxx
deleted file mode 100644
index 77f9ddf..0000000
--- a/examples/c++/isd1820.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "isd1820.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a ISD1820 on digital pins 2 (play) and 3 (record)
-    // This example was tested on the Grove Recorder.
-
-    upm::ISD1820 recorder(2, 3);
-
-    // if an argument was specified (any argument), go into record mode,
-    // else playback a previously recorded sample
-
-    cout << "Supply any argument to the command line to record." << endl;
-    cout << "Running this example without arguments will play back any " << endl;
-    cout << "previously recorded sound." << endl;
-    cout << "There is approximately 10 seconds of recording time." << endl;
-
-    cout << endl;
-
-    bool doRecord = false;
-
-    if (argc > 1)
-        doRecord = true;
-
-    // depending on what was selected, do it, and upm_delay for 15 seconds
-
-    if (doRecord)
-        recorder.record(true);
-    else
-        recorder.play(true);
-
-    // There are about 10 seconds of recording/playback time, so we will
-    // upm_delay for a little extra time.
-    cout << "Sleeping for 15 seconds..." << endl;
-    upm_delay(15);
-
-    // now, turn off whatever we were doing.
-
-    if (doRecord)
-        recorder.record(false);
-    else
-        recorder.play(false);
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/itg3200.cxx b/examples/c++/itg3200.cxx
deleted file mode 100644
index 1fab3ba..0000000
--- a/examples/c++/itg3200.cxx
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-
-#include "itg3200.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    int16_t* rot;
-    float* ang;
-
-    // Note: Sensor not supported on Intel Edison with Arduino breakout
-    upm::Itg3200 gyro(0);
-
-    while (true) {
-        gyro.update();             // Update the data
-        rot = gyro.getRawValues(); // Read raw sensor data
-        ang = gyro.getRotation();  // Read rotational speed (deg/sec)
-        fprintf(stdout, "Raw: %6d %6d %6d\n", rot[0], rot[1], rot[2]);
-        fprintf(stdout, "AngX: %5.2f\n", ang[0]);
-        fprintf(stdout, "AngY: %5.2f\n", ang[1]);
-        fprintf(stdout, "AngZ: %5.2f\n", ang[2]);
-        fprintf(stdout, "Temp: %5.2f Raw: %6d\n", gyro.getTemperature(), gyro.getRawTemp());
-        upm_delay(1);
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/jhd1313m1-lcd.cxx b/examples/c++/jhd1313m1-lcd.cxx
deleted file mode 100644
index f7f712f..0000000
--- a/examples/c++/jhd1313m1-lcd.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Yevgeniy Kiveish <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-#include <string>
-
-#include "jhd1313m1.hpp"
-#include "upm_utilities.h"
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // 0x62 RGB_ADDRESS, 0x3E LCD_ADDRESS
-    upm::Jhd1313m1 lcd(0, 0x3E, 0x62);
-
-    int ndx = 0;
-    uint8_t rgb[7][3] = { { 0xd1, 0x00, 0x00 }, { 0xff, 0x66, 0x22 }, { 0xff, 0xda, 0x21 },
-                          { 0x33, 0xdd, 0x00 }, { 0x11, 0x33, 0xcc }, { 0x22, 0x00, 0x66 },
-                          { 0x33, 0x00, 0x44 } };
-    while (shouldRun) {
-        // Alternate rows on the LCD
-        lcd.setCursor(ndx % 2, 0);
-        // Change the color
-        uint8_t r = rgb[ndx % 7][0];
-        uint8_t g = rgb[ndx % 7][1];
-        uint8_t b = rgb[ndx % 7][2];
-        lcd.setColor(r, g, b);
-        lcd.write("Hello World " + std::to_string(ndx));
-        // Echo via printf
-        printf("Hello World %d rgb: 0x%02x%02x%02x\n", ndx++, r, g, b);
-
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/joystick12.cxx b/examples/c++/joystick12.cxx
deleted file mode 100644
index 0a88eb8..0000000
--- a/examples/c++/joystick12.cxx
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Author: Alexander Komarov <alexander.komarov@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "joystick12.hpp"
-#include "upm_utilities.h"
-
-int is_running = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Instantiate a joystick on analog pins A0 and A1
-    upm::Joystick12 sensor(0, 1);
-    signal(SIGINT, sig_handler);
-
-    // Print the X and Y input values every second
-    while (!is_running) {
-        float x = sensor.getXInput();
-        float y = sensor.getYInput();
-        std::cout << "Driving X:" << x << ": and Y:" << y << std::endl;
-        upm_delay(1);
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/kx122.cxx b/examples/c++/kx122.cxx
deleted file mode 100644
index 14d0be2..0000000
--- a/examples/c++/kx122.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Samuli Rissanen <samuli.rissanen@hotmail.com>
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <iostream>
-
-#include <signal.h>
-#include <unistd.h>
-
-#include "kx122.hpp"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT){
-    shouldRun = false;
-  }
-}
-
-int main(int argc, char **argv)
-{
-  signal(SIGINT,sig_handler);
-
-  //! [Interesting]
-  upm::KX122 sensor(0,-1,24);
-
-  sensor.softwareReset();
-  sensor.deviceInit(KX122_ODR_50,HIGH_RES,KX122_RANGE_2G);
-
-  float x,y,z;
-  int wait_time = sensor.getSamplePeriod() * MICRO_S;
-  if (wait_time < 0) wait_time = 1000;
-
-  while(shouldRun){
-    sensor.getAccelerationData(&x,&y,&z);
-
-    printf("%.02f | %.02f | %.02f\n",x,y,z);
-    upm_delay_us(wait_time);
-  }
-  //! [Interesting]
-
-  return 0;
-}
diff --git a/examples/c++/kxcjk1013.cxx b/examples/c++/kxcjk1013.cxx
deleted file mode 100644
index 389b4ad..0000000
--- a/examples/c++/kxcjk1013.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Lay, Kuan Loon <kuan.loon.lay@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iomanip>
-#include <iostream>
-#include <signal.h>
-
-#include "kxcjk1013.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-void
-data_callback(char* data, void* args)
-{
-    float x, y, z;
-    upm::KXCJK1013* accelerometer = static_cast<upm::KXCJK1013*>(args);
-
-    accelerometer->extract3Axis(data, &x, &y, &z);
-    cout << fixed << setprecision(1);
-    cout << x << '\t' << y << '\t' << z << "[m/s^2]" << endl;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-    // Instantiate a KXCJK1013 Accelerometer Sensor on iio device 0
-    upm::KXCJK1013 accelerometer(0);
-    // Available scales are 0.009582(2g), 0.019163(4g), and 0.038326(8g)
-    accelerometer.setScale(0.019163);
-    // Available sampling frequency are 0.781000, 1.563000, 3.125000, 6.250000,
-    // 12.500000, 25, 50,
-    // 100, 200, 400, 800, and 1600
-    accelerometer.setSamplingFrequency(25.0);
-    accelerometer.enable3AxisChannel();
-    accelerometer.installISR(data_callback, &accelerometer);
-    accelerometer.enableBuffer(16);
-
-    while (shouldRun) {
-        upm_delay(1);
-    }
-    accelerometer.disableBuffer();
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/kxtj3.cxx b/examples/c++/kxtj3.cxx
deleted file mode 100755
index 609cae9..0000000
--- a/examples/c++/kxtj3.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <iostream>
-#include <iomanip>
-#include <unistd.h>
-#include <signal.h>
-#include "kxtj3.hpp"
-#include "upm_utilities.h"
-
-#define SENSOR_ADDR 0x0f
-#define I2C_BUS 0
-#define SAMPLE_COUNT 10
-
-bool isStopped = false;
-
-void signal_int_handler(int signo)
-{
-    if (signo == SIGINT)
-        isStopped = true;
-}
-
-void print_acceleration_data(upm::KXTJ3 &dev)
-{
-    float wait_time = dev.GetAccelerationSamplePeriod() * SECOND_IN_MICRO_S;
-    int sample_counter = SAMPLE_COUNT;
-    std::vector<float> xyz;
-    while ((sample_counter-- > 0) && !isStopped)
-    {
-        xyz = dev.GetAccelerationVector();
-        std::cout << std::fixed << std::setprecision(3)
-                  << xyz[0] << " | " << xyz[1] << " | " << xyz[2] << std::endl;
-        upm_delay_us(wait_time);
-    }
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, signal_int_handler);
-
-    std::cout << "Sensor init" << std::endl;
-    upm::KXTJ3 dev(I2C_BUS, SENSOR_ADDR);
-
-    std::cout << "Setting settings:\nODR: 25 Hz\nResolution: "
-              << "High\nAcceleration range: 16g with 14bits" << std::endl;
-    dev.SensorInit(KXTJ3_ODR_25, HIGH_RES, KXTJ3_RANGE_16G_14);
-    std::cout << "Showing acceleration data:" << std::endl;
-    print_acceleration_data(dev);
-
-    std::cout << "Closing sensor" << std::endl;
-    return 0;
-}
diff --git a/examples/c++/l298-stepper.cxx b/examples/c++/l298-stepper.cxx
deleted file mode 100644
index 2e05a46..0000000
--- a/examples/c++/l298-stepper.cxx
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "l298.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-
-    // Instantiate a Stepper motor on a L298 Dual H-Bridge.
-
-    // This was tested with the NEMA-17 12V, 350mA, with 200 steps per rev.
-    upm::L298 l298(200, 3, 4, 7, 8, 9);
-
-    l298.setSpeed(10); // 10 RPMs
-    l298.setDirection(upm::L298::DIR_CW);
-    l298.enable(true);
-    cout << "Rotating 1 full revolution at 10 RPM speed." << endl;
-    // move 200 steps, a full rev
-    l298.stepperSteps(200);
-    cout << "Sleeping for 2 seconds..." << endl;
-    upm_delay(2);
-    cout << "Rotating 1/2 revolution in opposite direction at 10 RPM speed." << endl;
-    l298.setDirection(upm::L298::DIR_CCW);
-    l298.stepperSteps(100);
-    // release
-    l298.enable(false);
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/l298.cxx b/examples/c++/l298.cxx
deleted file mode 100644
index 8bc37cb..0000000
--- a/examples/c++/l298.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "l298.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-
-    // Instantiate one of the 2 possible DC motors on a L298 Dual
-    // H-Bridge.  For controlling a stepper motor, see the l298-stepper
-    // example.
-    upm::L298 l298(3, 4, 7);
-
-    cout << "Starting motor at 50% for 3 seconds..." << endl;
-    l298.setSpeed(50);
-    l298.setDirection(upm::L298::DIR_CW);
-    l298.enable(true);
-
-    upm_delay(3);
-
-    cout << "Reversing direction..." << endl;
-    l298.setDirection(upm::L298::DIR_NONE); // fast stop
-    l298.setDirection(upm::L298::DIR_CCW);
-    upm_delay(3);
-
-    l298.setSpeed(0);
-    l298.enable(false);
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/l3gd20-i2c.cxx b/examples/c++/l3gd20-i2c.cxx
deleted file mode 100644
index 129359b..0000000
--- a/examples/c++/l3gd20-i2c.cxx
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iomanip>
-#include <iostream>
-#include <math.h>
-#include <signal.h>
-
-#include "l3gd20.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-float
-rad2deg(float x)
-{
-    return x * (180.0 / M_PI);
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an L3GD20 using default parameters
-    upm::L3GD20 sensor(L3GD20_DEFAULT_I2C_BUS, L3GD20_DEFAULT_I2C_ADDR);
-
-    // set some parameters (these are already the defaults, but are
-    // provided here as an example)
-
-    // 250 deg/s sensitivity
-    sensor.setRange(sensor.FS_250);
-
-    // Set ODR to 95Hz, 25Hz cut-off
-    sensor.setODR(sensor.ODR_CUTOFF_95_25);
-
-    // If you already have calibration data, you can specify it here
-    //  sensor.loadCalibratedData(-0.0296269637, -0.0080939643, -0.0077121737);
-
-    // now output data every 100 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        cout << "Calibrated: " << sensor.getCalibratedStatus() << endl;
-
-        // output is in radians/s
-        sensor.getGyroscope(&x, &y, &z);
-        cout << fixed << setprecision(1) << "Gyroscope x: " << x << " y: " << y << " z: " << z
-             << " radians" << endl;
-
-        // same data converted to degrees/s
-        cout << "Gyroscope x: " << rad2deg(x) << " y: " << rad2deg(y) << " z: " << rad2deg(z)
-             << " degrees" << endl;
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature(false) << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-
-        cout << endl;
-
-        upm_delay_us(100000);
-    }
-
-    // dump the calibration values if we managed to calibrate
-    if (sensor.getCalibratedStatus()) {
-        float calX, calY, calZ;
-        sensor.getCalibratedData(&calX, &calY, &calZ);
-
-        cout << setprecision(10) << "Calibration values x: " << calX << " y: " << calY
-             << " z: " << calZ << endl;
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/l3gd20.cxx b/examples/c++/l3gd20.cxx
deleted file mode 100644
index d19abd7..0000000
--- a/examples/c++/l3gd20.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Lay, Kuan Loon <kuan.loon.lay@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iomanip>
-#include <iostream>
-#include <signal.h>
-
-#include "l3gd20.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-void
-data_callback(char* data, void* args)
-{
-    float x, y, z;
-    upm::L3GD20* gyroscope = static_cast<upm::L3GD20*>(args);
-
-    if (gyroscope->extract3Axis(data, &x, &y, &z)) {
-        cout << fixed << setprecision(1);
-        cout << x << '\t' << y << '\t' << z << "[rad/sec]" << endl;
-    }
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-    upm::L3GD20 gyroscope(3);
-    // Instantiate a L3GD20 Gyroscope Sensor on iio device 3
-    // Available scales are 0.000153(250dps), 0.000305(500dps), and
-    // 0.001222(2000dps)
-    gyroscope.setScale(0.001222);
-    // Available sampling frequency are 95, 190, 380, and 760
-    gyroscope.setSamplingFrequency(95.0);
-    gyroscope.enable3AxisChannel();
-    gyroscope.installISR(data_callback, &gyroscope);
-    gyroscope.enableBuffer(16);
-
-    while (shouldRun) {
-        upm_delay(1);
-    }
-    gyroscope.disableBuffer();
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lcd-eboled.cxx b/examples/c++/lcd-eboled.cxx
deleted file mode 100644
index 220fc26..0000000
--- a/examples/c++/lcd-eboled.cxx
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "eboled.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an Edison Block OLED using default values
-    upm::EBOLED lcd;
-
-    lcd.clear();
-    lcd.setCursor(10, 15);
-    lcd.write("Hello");
-    lcd.setCursor(30, 15);
-    lcd.write("World!");
-    lcd.refresh();
-
-    cout << "Sleeping for 5 seconds..." << endl;
-    upm_delay(5);
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/lcd-ssd1306-oled.cxx b/examples/c++/lcd-ssd1306-oled.cxx
deleted file mode 100644
index da1327f..0000000
--- a/examples/c++/lcd-ssd1306-oled.cxx
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Author Marc Graham <marc@m2ag.net>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Adapted from ssd1308 library.
- * Author: Yevgeniy Kiveish <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdint.h>
-
-#include "ssd1306.hpp"
-#include "upm_utilities.h"
-
-#define DEVICE_ADDRESS 0x3C
-#define BUS_NUMBER 0x0
-
-static uint8_t intel_logo[] =
-{ 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   128, 128,
-  128, 128, 192, 192, 192, 224, 224, 224, 224, 240, 240, 248, 248, 120, 120, 120, 120, 60,  60,
-  60,  60,  60,  62,  30,  30,  30,  30,  30,  30,  30,  31,  15,  15,  15,  15,  15,  15,  15,
-  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  31,  31,
-  31,  31,  31,  30,  62,  62,  62,  62,  126, 126, 124, 124, 252, 252, 248, 248, 240, 240, 240,
-  224, 224, 224, 192, 128, 128, 128, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   128, 128, 128, 128, 128,
-  128, 128, 128, 0,   56,  56,  28,  30,  14,  15,  15,  7,   7,   7,   7,   3,   3,   1,   1,
-  1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   192, 192, 192,
-  192, 192, 192, 192, 192, 0,   0,   0,   0,   192, 193, 195, 195, 195, 7,   15,  15,  63,  127,
-  255, 255, 255, 254, 252, 252, 240, 192, 0,   0,   0,   0,   0,   0,   0,   0,   128, 192, 192,
-  240, 248, 124, 124, 60,  0,   0,   0,   0,   159, 159, 159, 159, 159, 159, 159, 159, 0,   0,
-  0,   0,   128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
-  128, 128, 128, 0,   0,   0,   0,   0,   0,   254, 254, 254, 254, 254, 254, 254, 254, 128, 128,
-  128, 128, 128, 0,   0,   0,   0,   0,   0,   0,   128, 128, 128, 192, 192, 192, 192, 192, 192,
-  128, 128, 128, 0,   0,   0,   0,   0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255,
-  0,   0,   0,   0,   3,   7,   3,   3,   3,   0,   0,   0,   0,   0,   1,   1,   255, 255, 255,
-  255, 255, 255, 255, 0,   0,   224, 248, 252, 252, 255, 127, 15,  15,  3,   1,   0,   0,   0,
-  0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   255, 255, 255,
-  255, 255, 255, 255, 255, 15,  15,  15,  15,  15,  15,  255, 255, 255, 255, 255, 255, 255, 252,
-  0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 15,  15,  15,  15,  15,  224, 224,
-  252, 254, 255, 255, 255, 255, 159, 159, 143, 143, 135, 135, 143, 159, 255, 255, 255, 255, 255,
-  255, 252, 248, 0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   128, 224, 248, 248, 255, 255, 255, 255, 255, 127, 15,  255,
-  255, 255, 255, 255, 255, 7,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   255,
-  255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255,
-  0,   0,   0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   255,
-  255, 255, 255, 255, 255, 255, 255, 192, 192, 192, 192, 192, 31,  31,  255, 255, 255, 255, 255,
-  255, 231, 231, 199, 199, 199, 199, 199, 199, 199, 199, 231, 231, 231, 231, 199, 135, 0,   0,
-  0,   63,  255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   224, 240, 248, 248, 252, 254,
-  255, 255, 255, 127, 63,  63,  31,  15,  7,   7,   1,   0,   0,   63,  63,  255, 255, 255, 255,
-  255, 240, 192, 192, 128, 0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   3,   7,   7,   7,
-  7,   7,   0,   0,   0,   0,   7,   7,   7,   7,   7,   7,   7,   7,   0,   0,   0,   0,   0,
-  0,   7,   7,   7,   7,   7,   7,   7,   7,   0,   0,   0,   0,   0,   0,   3,   3,   7,   7,
-  7,   7,   7,   7,   7,   7,   7,   0,   0,   0,   1,   3,   3,   3,   7,   7,   7,   7,   15,
-  15,  15,  15,  7,   7,   7,   7,   7,   3,   3,   3,   1,   0,   0,   0,   0,   1,   3,   3,
-  7,   135, 135, 135, 192, 192, 0,   0,   7,   7,   3,   3,   3,   1,   1,   1,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   7,   15,  15,  31,  127, 127, 127, 255,
-  255, 252, 252, 252, 248, 240, 240, 240, 224, 224, 224, 192, 192, 192, 192, 128, 128, 128, 128,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192, 224, 224, 224, 224, 240,
-  240, 240, 240, 248, 248, 248, 248, 252, 252, 252, 254, 254, 255, 255, 255, 255, 255, 255, 127,
-  127, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   3,   3,   7,
-  7,   7,   15,  15,  31,  31,  31,  63,  63,  63,  63,  63,  127, 127, 127, 127, 127, 255, 255,
-  255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-  254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 127, 127, 127, 127, 127,
-  127, 127, 127, 63,  63,  63,  63,  63,  31,  31,  31,  31,  31,  15,  15,  15,  15,  7,   7,
-  7,   7,   3,   3,   3,   3,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 };
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::SSD1306 lcd(BUS_NUMBER, DEVICE_ADDRESS);
-
-    lcd.clear();
-    lcd.stopscroll();
-    lcd.draw(intel_logo, 1024);
-
-    upm_delay(3);
-
-    lcd.clear();
-    lcd.setCursor(2, 0);
-    lcd.write("Hello");
-    lcd.setCursor(3, 0);
-    lcd.write("World");
-
-    upm_delay(3);
-
-    lcd.invert(true);
-
-    upm_delay(3);
-
-    lcd.dim(true);
-
-    upm_delay(3);
-
-    lcd.dim(false);
-
-    upm_delay(3);
-
-    lcd.invert(false);
-    lcd.startscrollright(0x00, 0x0F);
-
-    upm_delay(5);
-
-    lcd.stopscroll();
-    lcd.startscrollleft(0x00, 0x0F);
-
-    upm_delay(5);
-
-    lcd.stopscroll();
-    lcd.startscrolldiagleft(0x00, 0x0F);
-
-    upm_delay(5);
-
-    lcd.stopscroll();
-    lcd.startscrolldiagright(0x00, 0x0F);
-
-    upm_delay(5);
-
-    lcd.stopscroll();
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/lcd-ssd1308-oled.cxx b/examples/c++/lcd-ssd1308-oled.cxx
deleted file mode 100644
index 999483d..0000000
--- a/examples/c++/lcd-ssd1308-oled.cxx
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Author: Yevgeniy Kiveish <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdint.h>
-
-#include "ssd1308.hpp"
-
-#define DEVICE_ADDRESS 0x3C
-#define BUS_NUMBER 0x0
-
-static uint8_t intel_logo[] =
-{ 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   128, 128,
-  128, 128, 192, 192, 192, 224, 224, 224, 224, 240, 240, 248, 248, 120, 120, 120, 120, 60,  60,
-  60,  60,  60,  62,  30,  30,  30,  30,  30,  30,  30,  31,  15,  15,  15,  15,  15,  15,  15,
-  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  15,  31,  31,
-  31,  31,  31,  30,  62,  62,  62,  62,  126, 126, 124, 124, 252, 252, 248, 248, 240, 240, 240,
-  224, 224, 224, 192, 128, 128, 128, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   128, 128, 128, 128, 128,
-  128, 128, 128, 0,   56,  56,  28,  30,  14,  15,  15,  7,   7,   7,   7,   3,   3,   1,   1,
-  1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   192, 192, 192,
-  192, 192, 192, 192, 192, 0,   0,   0,   0,   192, 193, 195, 195, 195, 7,   15,  15,  63,  127,
-  255, 255, 255, 254, 252, 252, 240, 192, 0,   0,   0,   0,   0,   0,   0,   0,   128, 192, 192,
-  240, 248, 124, 124, 60,  0,   0,   0,   0,   159, 159, 159, 159, 159, 159, 159, 159, 0,   0,
-  0,   0,   128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
-  128, 128, 128, 0,   0,   0,   0,   0,   0,   254, 254, 254, 254, 254, 254, 254, 254, 128, 128,
-  128, 128, 128, 0,   0,   0,   0,   0,   0,   0,   128, 128, 128, 192, 192, 192, 192, 192, 192,
-  128, 128, 128, 0,   0,   0,   0,   0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255,
-  0,   0,   0,   0,   3,   7,   3,   3,   3,   0,   0,   0,   0,   0,   1,   1,   255, 255, 255,
-  255, 255, 255, 255, 0,   0,   224, 248, 252, 252, 255, 127, 15,  15,  3,   1,   0,   0,   0,
-  0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   255, 255, 255,
-  255, 255, 255, 255, 255, 15,  15,  15,  15,  15,  15,  255, 255, 255, 255, 255, 255, 255, 252,
-  0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 15,  15,  15,  15,  15,  224, 224,
-  252, 254, 255, 255, 255, 255, 159, 159, 143, 143, 135, 135, 143, 159, 255, 255, 255, 255, 255,
-  255, 252, 248, 0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   128, 224, 248, 248, 255, 255, 255, 255, 255, 127, 15,  255,
-  255, 255, 255, 255, 255, 7,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   255,
-  255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255,
-  0,   0,   0,   0,   0,   0,   255, 255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   255,
-  255, 255, 255, 255, 255, 255, 255, 192, 192, 192, 192, 192, 31,  31,  255, 255, 255, 255, 255,
-  255, 231, 231, 199, 199, 199, 199, 199, 199, 199, 199, 231, 231, 231, 231, 199, 135, 0,   0,
-  0,   63,  255, 255, 255, 255, 255, 255, 255, 0,   0,   0,   0,   224, 240, 248, 248, 252, 254,
-  255, 255, 255, 127, 63,  63,  31,  15,  7,   7,   1,   0,   0,   63,  63,  255, 255, 255, 255,
-  255, 240, 192, 192, 128, 0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   3,   7,   7,   7,
-  7,   7,   0,   0,   0,   0,   7,   7,   7,   7,   7,   7,   7,   7,   0,   0,   0,   0,   0,
-  0,   7,   7,   7,   7,   7,   7,   7,   7,   0,   0,   0,   0,   0,   0,   3,   3,   7,   7,
-  7,   7,   7,   7,   7,   7,   7,   0,   0,   0,   1,   3,   3,   3,   7,   7,   7,   7,   15,
-  15,  15,  15,  7,   7,   7,   7,   7,   3,   3,   3,   1,   0,   0,   0,   0,   1,   3,   3,
-  7,   135, 135, 135, 192, 192, 0,   0,   7,   7,   3,   3,   3,   1,   1,   1,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   7,   15,  15,  31,  127, 127, 127, 255,
-  255, 252, 252, 252, 248, 240, 240, 240, 224, 224, 224, 192, 192, 192, 192, 128, 128, 128, 128,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192, 224, 224, 224, 224, 240,
-  240, 240, 240, 248, 248, 248, 248, 252, 252, 252, 254, 254, 255, 255, 255, 255, 255, 255, 127,
-  127, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   3,   3,   7,
-  7,   7,   15,  15,  31,  31,  31,  63,  63,  63,  63,  63,  127, 127, 127, 127, 127, 255, 255,
-  255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-  254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 127, 127, 127, 127, 127,
-  127, 127, 127, 63,  63,  63,  63,  63,  31,  31,  31,  31,  31,  15,  15,  15,  15,  7,   7,
-  7,   7,   3,   3,   3,   3,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
-  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 };
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::SSD1308 lcd(BUS_NUMBER, DEVICE_ADDRESS);
-
-    lcd.clear();
-    lcd.draw(intel_logo, 1024);
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/lcd-ssd1327-oled.cxx b/examples/c++/lcd-ssd1327-oled.cxx
deleted file mode 100644
index aa3d6cc..0000000
--- a/examples/c++/lcd-ssd1327-oled.cxx
+++ /dev/null
@@ -1,125 +0,0 @@
-/*
- * Author: Yevgeniy Kiveish <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdint.h>
-
-#include "ssd1327.hpp"
-
-#define DEVICE_ADDRESS 0x3C
-#define BUS_NUMBER 0x0
-
-static uint8_t SeeedLogo[] =
-{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x06, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x80,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x01, 0xC0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
-  0x07, 0x80, 0x01, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0F, 0x80, 0x01, 0xE0,
-  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0F, 0x00, 0x01, 0xE0, 0x08, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x30, 0x0F, 0x00, 0x01, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
-  0x0F, 0x00, 0x01, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0F, 0x00, 0x01, 0xE0,
-  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0F, 0x00, 0x01, 0xE0, 0x18, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x38, 0x0F, 0x00, 0x01, 0xE0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
-  0x0F, 0x80, 0x01, 0xE0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x0F, 0x80, 0x01, 0xE0,
-  0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x0F, 0x80, 0x03, 0xE0, 0x78, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x1E, 0x07, 0x80, 0x03, 0xE0, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
-  0x07, 0x80, 0x03, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x07, 0x80, 0x03, 0xC1,
-  0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x87, 0xC0, 0x07, 0xC1, 0xF0, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x0F, 0x83, 0xC0, 0x07, 0x83, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
-  0xC3, 0xC0, 0x07, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE1, 0xE0, 0x07, 0x0F,
-  0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0xE0, 0x0F, 0x0F, 0x80, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x01, 0xF8, 0xF0, 0x0E, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
-  0xF8, 0x70, 0x1C, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x30, 0x18, 0x7E,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x18, 0x30, 0xFC, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x1F, 0x88, 0x21, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x0F, 0xC4, 0x47, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x0F, 0x80,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06,
-  0x00, 0x00, 0x60, 0x00, 0x7E, 0x3F, 0x0F, 0xC3, 0xF0, 0xFA, 0x0F, 0xDF, 0xE1, 0x9F, 0xEC, 0x7E,
-  0xE6, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x1C, 0xDF, 0xE1, 0xB9, 0xEC, 0xE7, 0xE0, 0x61, 0xD8, 0x66,
-  0x1B, 0x86, 0x1C, 0x06, 0x61, 0xB0, 0x6D, 0xC3, 0x7C, 0x7F, 0xFF, 0xFF, 0xFF, 0x06, 0x0F, 0x86,
-  0x61, 0xB0, 0x6D, 0x83, 0x3E, 0x7F, 0xFF, 0xFF, 0xFF, 0x06, 0x07, 0xC6, 0x61, 0xB0, 0x6D, 0x83,
-  0xC3, 0x61, 0x18, 0x46, 0x03, 0x86, 0x18, 0x66, 0x61, 0xB0, 0x6D, 0xC3, 0xFE, 0x7F, 0x9F, 0xE7,
-  0xF9, 0xFE, 0x1F, 0xE6, 0x3F, 0x9F, 0xEC, 0xFE, 0x7E, 0x3F, 0x0F, 0xC3, 0xF0, 0xFA, 0x0F, 0xC6,
-  0x3F, 0x9F, 0xEC, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00,
-  0x00, 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x20, 0x82, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0xF3, 0xCF, 0x70, 0x9E, 0x79, 0xE7, 0x80, 0x00, 0x00,
-  0x00, 0x00, 0x7D, 0x9E, 0x68, 0x20, 0xB2, 0xC8, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x9E,
-  0x6F, 0x20, 0xB2, 0xF9, 0xE7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x46, 0x9A, 0x61, 0x20, 0xB2, 0xCB,
-  0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xF3, 0xCF, 0x30, 0x9E, 0x79, 0xE7, 0x90, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x02, 0x00, 0x00, 0x82, 0x60, 0x00, 0x00,
-  0xF8, 0x00, 0x00, 0x40, 0x40, 0x02, 0x00, 0x00, 0x83, 0x60, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x40,
-  0x60, 0xB7, 0x79, 0xE7, 0x81, 0xC7, 0x92, 0x70, 0x89, 0xE7, 0x9E, 0x78, 0x7C, 0xE2, 0xC9, 0x2C,
-  0x81, 0xCC, 0xD2, 0x40, 0xFB, 0x21, 0xB2, 0x48, 0x40, 0x62, 0xF9, 0x2C, 0x80, 0x8C, 0xD2, 0x40,
-  0x8B, 0xE7, 0xB0, 0x48, 0x40, 0xE2, 0xC9, 0x2C, 0x80, 0x84, 0xD2, 0x40, 0x8B, 0x2D, 0x92, 0x48,
-  0x7D, 0xB3, 0x79, 0x27, 0x80, 0x87, 0x9E, 0x40, 0x8D, 0xE7, 0x9E, 0x48, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::SSD1327 lcd(BUS_NUMBER, 0x3C);
-
-    // If you don't set the display to be white, the seeed logo will appear jagged
-    lcd.setGrayLevel(12);
-    lcd.draw(SeeedLogo, 96 * 96 / 8);
-
-    // Simple print hello world
-    for (uint8_t i = 0; i < 12; i++) {
-        lcd.setCursor(i, 0);
-        lcd.setGrayLevel(i);
-        lcd.write("Hello World");
-    }
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/lcdks.cxx b/examples/c++/lcdks.cxx
deleted file mode 100644
index 07722e0..0000000
--- a/examples/c++/lcdks.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lcdks.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a LCDKS (LCD Keypad Shield) using default pins
-
-    // NOTE: The default pins do not include support for a gpio
-    // controlled backlight.  If you need one, you will need to specify
-    // all neccessary pins to the constructor.
-    upm::LCDKS lcd;
-
-    lcd.setCursor(0, 0);
-    lcd.write("LCDKS driver");
-    lcd.setCursor(1, 2);
-    lcd.write("Hello World");
-
-    // output current key value every second.
-    while (shouldRun) {
-        cout << "Button value: " << lcd.getKeyValue() << endl;
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/lcm1602-i2c.cxx b/examples/c++/lcm1602-i2c.cxx
deleted file mode 100644
index f71c4fa..0000000
--- a/examples/c++/lcm1602-i2c.cxx
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Thomas Ingleby <thomas.c.ingleby@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "lcm1602.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::Lcm1602 lcd(0, 0x27);
-    lcd.setCursor(0, 0);
-    lcd.write("Hello World");
-    //! [Interesting]
-    upm_delay(3);
-    lcd.setCursor(1, 2);
-    lcd.write("Hello World");
-    upm_delay(3);
-    lcd.setCursor(2, 4);
-    lcd.write("Hello World");
-    upm_delay(3);
-    lcd.setCursor(3, 6);
-    lcd.write("Hello World");
-    upm_delay(3);
-    return 0;
-}
diff --git a/examples/c++/lcm1602-parallel.cxx b/examples/c++/lcm1602-parallel.cxx
deleted file mode 100644
index b5533c7..0000000
--- a/examples/c++/lcm1602-parallel.cxx
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Sergey Kiselev <sergey.kiselev@intel.com>
- * Author: Yevgeniy Kiveish <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 - 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-
-#include "lcm1602.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // LCD connection:
-    // LCD RS pin to digital pin 8
-    // LCD Enable pin to digital pin 13
-    // LCD D4 pin to digital pin 2
-    // LCD D5 pin to digital pin 3
-    // LCD D6 pin to digital pin 4
-    // LCD D7 pin to digital pin 5
-    // LCD R/W pin to ground
-    // 10K trimmer potentiometer:
-    //   ends to +5V and ground
-    //   wiper to LCD VO pin (pin 3)
-    upm::Lcm1602 lcd(8, 13, 2, 3, 4, 5, 20, 2);
-    lcd.setCursor(0, 0);
-    lcd.write("Hello World");
-    lcd.setCursor(1, 2);
-    lcd.write("Hello World");
-
-    printf("Sleeping for 5 seconds\n");
-    upm_delay(5);
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/ldt0028.cxx b/examples/c++/ldt0028.cxx
deleted file mode 100644
index 8754610..0000000
--- a/examples/c++/ldt0028.cxx
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <cmath>
-#include <iomanip>
-#include <iostream>
-#include <stdint.h>
-
-#include "ldt0028.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    const int NUMBER_OF_SECONDS = 10;
-    const int MICROSECONDS_PER_SECOND = 1000000;
-    const int SAMPLES_PER_SECOND = 50;
-    const int THRESHOLD = 100;
-
-    // Create the LDT0-028 Piezo Vibration Sensor object using AIO pin 0
-    upm::LDT0028 sensor(0);
-
-    // Read the signal every 20 milliseconds for 10 seconds
-    std::cout << "For the next " << NUMBER_OF_SECONDS << " seconds, " << SAMPLES_PER_SECOND
-              << " samples will be taken every second." << std::endl
-              << std::endl;
-    uint16_t buffer[NUMBER_OF_SECONDS * SAMPLES_PER_SECOND];
-    for (int i = 0; i < NUMBER_OF_SECONDS * SAMPLES_PER_SECOND; i++) {
-        buffer[i] = (uint16_t) sensor.getSample();
-        upm_delay_us(MICROSECONDS_PER_SECOND / SAMPLES_PER_SECOND);
-    }
-
-    // Print the number of times the reading was greater than the threshold
-    int count = 0;
-    for (int i = 0; i < NUMBER_OF_SECONDS * SAMPLES_PER_SECOND; i++) {
-        if (buffer[i] > THRESHOLD) {
-            count++;
-        }
-    }
-    std::cout << sensor.name() << " exceeded the threshold value of " << THRESHOLD << " a total of "
-              << count << " times," << std::endl
-              << "out of a total of " << NUMBER_OF_SECONDS * SAMPLES_PER_SECOND << " readings."
-              << std::endl
-              << std::endl;
-
-    // Print a graphical representation of the average value sampled
-    // each second for the past 10 seconds, using a scale factor of 15
-    std::cout << "Now printing a graphical representation of the average reading " << std::endl
-              << "each second for the last " << NUMBER_OF_SECONDS << " seconds." << std::endl;
-    const int SCALE_FACTOR = 15;
-    for (int i = 0; i < NUMBER_OF_SECONDS; i++) {
-        long sum = 0;
-        for (int j = 0; j < SAMPLES_PER_SECOND; j++) {
-            sum += buffer[i * SAMPLES_PER_SECOND + j];
-        }
-        double average = (double) sum / (double) SAMPLES_PER_SECOND;
-        int stars_to_print = (int) round(average / SCALE_FACTOR);
-        std::cout << "(" << std::setw(4) << (int) round(average) << ") | ";
-        for (int j = 0; j < stars_to_print; j++) {
-            std::cout << "*";
-        }
-        std::cout << std::endl;
-    }
-
-    // Delete the sensor object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/led.cxx b/examples/c++/led.cxx
deleted file mode 100644
index be4c73b..0000000
--- a/examples/c++/led.cxx
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "led.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Create the Grove LED object using GPIO pin 2
-    upm::Led led(2);
-
-    // Print the name
-    std::cout << led.name() << std::endl;
-
-    // Turn the LED on and off 10 times, pausing one second
-    // between transitions
-    for (int i = 0; i < 10; i++) {
-        led.on();
-        upm_delay(1);
-        led.off();
-        upm_delay(1);
-    }
-
-    // Delete the Grove LED object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/lidarlitev3.cxx b/examples/c++/lidarlitev3.cxx
deleted file mode 100644
index a865a0f..0000000
--- a/examples/c++/lidarlitev3.cxx
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Author: Saloni Jain <saloni.jain@tcs.com>
- * Author: Niti Rohilla <niti.rohilla@tcs.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "lidarlitev3.hpp"
-#include "upm_utilities.h"
-
-volatile int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        printf("\nCtrl-C received.\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    // Register signal handler
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    upm::LIDARLITEV3 sensor(0, ADDR);
-
-    while (!doWork) {
-        std::cout << "Distance = " << sensor.getDistance() << std::endl;
-        upm_delay_us(50000);
-    }
-
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/light.cxx b/examples/c++/light.cxx
deleted file mode 100644
index 3c94bf3..0000000
--- a/examples/c++/light.cxx
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "light.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Create the light sensor object using AIO pin 0
-    upm::Light light(0);
-
-    // Read the input and print both the normalized ADC value and a
-    // rough lux value, waiting one second between readings
-    while (1) {
-        std::cout << light.name() << " normalized value is " << light.getNormalized()
-                  << ", which is roughly " << light.value() << " lux" << std::endl;
-        upm_delay(1);
-    }
-
-    // Delete the light sensor object
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/linefinder.cxx b/examples/c++/linefinder.cxx
deleted file mode 100644
index f5ade6d..0000000
--- a/examples/c++/linefinder.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "linefinder.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a  Line Finder sensor on digital pin D2
-    upm::LineFinder finder(2);
-
-    // check every second for the presence of white detection
-    while (shouldRun) {
-        bool val = finder.whiteDetected();
-        if (val)
-            cout << "White detected." << endl;
-        else
-            cout << "Black detected." << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lis2ds12.cxx b/examples/c++/lis2ds12.cxx
deleted file mode 100644
index 203916a..0000000
--- a/examples/c++/lis2ds12.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lis2ds12.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an LIS2DS12 using default I2C parameters
-    upm::LIS2DS12 sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin
-    // for CS: LIS2DS12(0, -1, 10);
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lis3dh.cxx b/examples/c++/lis3dh.cxx
deleted file mode 100644
index 4e54d82..0000000
--- a/examples/c++/lis3dh.cxx
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Author: Alex Tereschenko <alext.mkrs@gmail.com>
- * Copyright (c) 2018 Alex Tereschenko.
- *
- * Based on LIS2DS12 example by
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lis3dh.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an LIS3DH using default I2C parameters
-    upm::LIS3DH sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin
-    // for CS: LIS3DH(0, -1, 10);
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lm35.cxx b/examples/c++/lm35.cxx
deleted file mode 100644
index 4e96e16..0000000
--- a/examples/c++/lm35.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lm35.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a LM35 on analog pin A0, with a default analog
-    // reference voltage of 5.0
-    upm::LM35 sensor(0);
-
-    // Every half second, sample the sensor and output the temperature
-
-    while (shouldRun) {
-        cout << "Temperature: " << sensor.getTemperature() << " C" << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lol.cxx b/examples/c++/lol.cxx
deleted file mode 100644
index 34ba456..0000000
--- a/examples/c++/lol.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Alexander Komarov <alexander.komarov@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "lol.hpp"
-#include "upm_utilities.h"
-
-int is_running = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    upm::LoL sensor;
-    signal(SIGINT, sig_handler);
-
-    // buffer = sensor.getFramebuffer();
-    int x = 0, y = 0;
-    while (!is_running) {
-        sensor.setPixel(x, y, !(sensor.getPixel(x, y)));
-        if (++x == 13) {
-            x = 0;
-            y++;
-        }
-        if (y == 9)
-            y = 0;
-        upm_delay_us(10000);
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/loudness.cxx b/examples/c++/loudness.cxx
deleted file mode 100644
index bb4e4e8..0000000
--- a/examples/c++/loudness.cxx
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "loudness.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-#define LOUDNESS_AREF 5.0
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a Loudness sensor on analog pin A0, with an analog
-    // reference voltage of LOUDNESS_AREF
-    upm::Loudness loud(0, LOUDNESS_AREF);
-
-    // Every tenth of a second, sample the loudness and output it's
-    // corresponding analog voltage.
-
-    while (shouldRun) {
-        cout << "Detected loudness (volts): " << loud.loudness() << endl;
-
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lp8860.cxx b/examples/c++/lp8860.cxx
deleted file mode 100644
index 181c1ce..0000000
--- a/examples/c++/lp8860.cxx
+++ /dev/null
@@ -1,43 +0,0 @@
-#include <iostream>
-#include <stdlib.h>
-#include <string>
-
-#include "iLightController.hpp"
-#include "lp8860.hpp"
-
-#define EDISON_I2C_BUS 1   // Edison I2C-1
-#define LP8860_GPIO_PWR 45 // Edison GP45
-
-void
-printState(upm::ILightController& lightController)
-{
-    if (lightController.isPowered()) {
-        std::cout << "Light is powered, brightness = " << lightController.getBrightness()
-                  << std::endl;
-    } else {
-        std::cout << "Light is not powered." << std::endl;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::LP8860 lightController(LP8860_GPIO_PWR, EDISON_I2C_BUS);
-    std::cout << "Existing state: ";
-    printState(lightController);
-    if (argc == 2) {
-        std::string arg = argv[1];
-        int brightness = ::atoi(argv[1]);
-        if (brightness > 0) {
-            lightController.setPowerOn();
-            lightController.setBrightness(brightness);
-        } else
-            lightController.setPowerOff();
-    }
-    std::cout << "Now: ";
-    printState(lightController);
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/lpd8806.cxx b/examples/c++/lpd8806.cxx
deleted file mode 100644
index cad0938..0000000
--- a/examples/c++/lpd8806.cxx
+++ /dev/null
@@ -1,105 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "lpd8806.hpp"
-#include "upm_utilities.h"
-
-void scanner(upm::LPD8806& sensor, uint8_t r, uint8_t g, uint8_t b, uint8_t wait);
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::LPD8806 sensor(0, 7, 10);
-    upm_delay_us(1000000);
-
-    sensor.show();
-
-    while (!doWork) {
-        // Back-and-forth lights
-        scanner(sensor, 127, 0, 0, 30); // red, slow
-        scanner(sensor, 0, 0, 127, 15); // blue, fast
-        upm_delay_us(1000000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-
-void
-scanner(upm::LPD8806& sensor, uint8_t r, uint8_t g, uint8_t b, uint8_t wait)
-{
-    int i, j, pos, dir;
-
-    pos = 0;
-    dir = 1;
-
-    for (i = 0; i < ((sensor.getStripLength() - 1) * 8); i++) {
-        // Draw 5 pixels centered on pos.  setPixelColor() will clip
-        // any pixels off the ends of the strip, no worries there.
-        // we'll make the colors dimmer at the edges for a nice pulse
-        // look
-        sensor.setPixelColor(pos - 2, r / 4, g / 4, b / 4);
-        sensor.setPixelColor(pos - 1, r / 2, g / 2, b / 2);
-        sensor.setPixelColor(pos, r, g, b);
-        sensor.setPixelColor(pos + 1, r / 2, g / 2, b / 2);
-        sensor.setPixelColor(pos + 2, r / 4, g / 4, b / 4);
-
-        sensor.show();
-        upm_delay_us(wait * 1000);
-        // If we wanted to be sneaky we could erase just the tail end
-        // pixel, but it's much easier just to erase the whole thing
-        // and draw a new one next time.
-        for (j = -2; j <= 2; j++) {
-            sensor.setPixelColor(pos + j, 0, 0, 0);
-        }
-        // Bounce off ends of strip
-        pos += dir;
-        if (pos < 0) {
-            pos = 1;
-            dir = -dir;
-        } else if (pos >= sensor.getStripLength()) {
-            pos = sensor.getStripLength() - 2;
-            dir = -dir;
-        }
-    }
-}
diff --git a/examples/c++/lsm303agr.cxx b/examples/c++/lsm303agr.cxx
deleted file mode 100644
index 491ec0a..0000000
--- a/examples/c++/lsm303agr.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lsm303agr.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an LSM303AGR using default I2C parameters
-    upm::LSM303AGR sensor;
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer x: " << x << " y: " << y << " z: " << z << " uT" << endl;
-
-        cout << "Temperature: " << sensor.getTemperature() << " C" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lsm303d.cxx b/examples/c++/lsm303d.cxx
deleted file mode 100644
index 338d2a4..0000000
--- a/examples/c++/lsm303d.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lsm303d.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an LSM303D using default I2C parameters
-    upm::LSM303D sensor;
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer x: " << x << " y: " << y << " z: " << z << " uT" << endl;
-
-        cout << "Temperature: " << sensor.getTemperature() << " C" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lsm303dlh.cxx b/examples/c++/lsm303dlh.cxx
deleted file mode 100644
index 2a26a7f..0000000
--- a/examples/c++/lsm303dlh.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-
-//! [Interesting]
-#include "lsm303dlh.hpp"
-
-int
-main(int argc, char** argv)
-{
-    // Instantiate LSM303DLH compass on I2C
-    upm::LSM303DLH sensor(0);
-
-    // Get the coordinate data
-    sensor.getCoordinates();
-    int16_t* coor = sensor.getRawCoorData(); // in XYZ order.
-    // The sensor returns XZY, but the driver compensates and makes it XYZ
-
-    // Print out the X, Y, and Z coordinate data using two different methods
-    std::cout << "coor: rX " << (int) coor[0] << " - rY " << (int) coor[1] << " - rZ "
-              << (int) coor[2] << std::endl;
-    std::cout << "coor: gX " << sensor.getCoorX() << " - gY " << sensor.getCoorY() << " - gZ "
-              << sensor.getCoorZ() << std::endl;
-
-    // Get and print out the heading
-    std::cout << "heading: " << sensor.getHeading() << std::endl;
-
-    // Get the acceleration
-    sensor.getAcceleration();
-    int16_t* accel = sensor.getRawAccelData();
-    // Print out the X, Y, and Z acceleration data using two different methods
-    std::cout << "acc: rX " << (int) accel[0] << " - rY " << (int) accel[1] << " - Z "
-              << (int) accel[2] << std::endl;
-    std::cout << "acc: gX " << sensor.getAccelX() << " - gY " << sensor.getAccelY() << " - gZ "
-              << sensor.getAccelZ() << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/lsm6ds3h.cxx b/examples/c++/lsm6ds3h.cxx
deleted file mode 100644
index 1c9a2d9..0000000
--- a/examples/c++/lsm6ds3h.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lsm6ds3h.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an LSM6DS3H using default I2C parameters
-    upm::LSM6DS3H sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin
-    // for CS: LSM6DS3H(0, -1, 10);
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gyroscope x: " << x << " y: " << y << " z: " << z << " dps" << endl;
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lsm6dsl.cxx b/examples/c++/lsm6dsl.cxx
deleted file mode 100644
index fb4afe1..0000000
--- a/examples/c++/lsm6dsl.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lsm6dsl.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an LSM6DSL using default I2C parameters
-    upm::LSM6DSL sensor;
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin
-    // for CS: LSM6DSL(0, -1, 10);
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        sensor.update();
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer x: " << x << " y: " << y << " z: " << z << " g" << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gyroscope x: " << x << " y: " << y << " z: " << z << " dps" << endl;
-
-        // we show both C and F for temperature
-        cout << "Compensation Temperature: " << sensor.getTemperature() << " C / "
-             << sensor.getTemperature(true) << " F" << endl;
-
-        cout << endl;
-
-        upm_delay_us(250000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/lsm9ds0.cxx b/examples/c++/lsm9ds0.cxx
deleted file mode 100644
index 64ecabd..0000000
--- a/examples/c++/lsm9ds0.cxx
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "lsm9ds0.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate an LSM9DS0 using default parameters (bus 1, gyro addr 6b,
-    // xm addr 1d)
-    upm::LSM9DS0 sensor;
-
-    sensor.init();
-
-    while (shouldRun) {
-        sensor.update();
-
-        float x, y, z;
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer: ";
-        cout << "AX: " << x << " AY: " << y << " AZ: " << z << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gryoscope:     ";
-        cout << "GX: " << x << " GY: " << y << " GZ: " << z << endl;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer:  ";
-        cout << "MX = " << x << " MY = " << y << " MZ = " << z << endl;
-
-        cout << "Temperature:   " << sensor.getTemperature() << endl;
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/m24lr64e.cxx b/examples/c++/m24lr64e.cxx
deleted file mode 100644
index 2ef0899..0000000
--- a/examples/c++/m24lr64e.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdio.h>
-
-#include "m24lr64e.hpp"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an M24LR64E on I2C bus 0
-
-    upm::M24LR64E nfcTag(M24LR64E_I2C_BUS);
-
-    // This example accesses the device in the 'user' (default) mode,
-    // reads the last byte of data in the EEPROM, inverts it, writes
-    // it back, and then re-reads it.
-
-    // Read the last byte of the EEPROM area
-
-    int addr = M24LR64E::EEPROM_I2C_LENGTH - 1;
-    printf("Address: %d\n", addr);
-    uint8_t byte = nfcTag.readByte(addr);
-    printf("Read byte: %02x\n", byte);
-
-    // Now change it to it's opposite and write it
-    byte = ~byte;
-    nfcTag.writeByte(addr, byte);
-    printf("Wrote inverted byte: %02x\n", byte);
-
-    // Now read it back.
-    byte = nfcTag.readByte(addr);
-    printf("Read byte: %02x\n", byte);
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mag3110.cxx b/examples/c++/mag3110.cxx
deleted file mode 100644
index 2aeccd2..0000000
--- a/examples/c++/mag3110.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/* Author: Norbert Wesp <nwesp@phytec.de>
- * Copyright (c) 2017 Phytec Messtechnik GmbH.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mag3110.hpp"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-bool run = true;
-
-void
-sig_handler(int sig)
-{
-    if (sig == SIGINT)
-        run = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    upm::mag3110_data_t data;
-
-    std::cout << "Initializing test-application..." << std::endl;
-
-    // Instantiate an MAG3110 instance on bus 1
-    upm::MAG3110 mySensor(1);
-
-    // activate periodic measurements
-    mySensor.setActive();
-
-    // update and print available values every second
-    while (run) {
-        mySensor.getData(&data, true);
-        std::cout << "x: " << data.x << std::endl
-                  << "y: " << data.y << std::endl
-                  << "z: " << data.z << std::endl
-                  << "Status: " << data.status << std::endl
-                  << "Die temperature: " << data.dtemp << std::endl;
-
-        std::cout << std::endl;
-
-        upm_delay(1);
-    }
-
-    std::cout << "Exiting test-application..." << std::endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/max30100.cxx b/examples/c++/max30100.cxx
deleted file mode 100644
index 870a0f8..0000000
--- a/examples/c++/max30100.cxx
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "max30100.hpp"
-#include "max30100_regs.h"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-// Example Callback handler
-class mycallback : public Callback
-{
-  public:
-    virtual void
-    run(max30100_value samp)
-    {
-        std::cout << "My callback sample IR: " << samp.IR << " R: " << samp.R << std::endl;
-    }
-};
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a MAX30100 instance using i2c bus 0
-    upm::MAX30100 sensor(0);
-
-    // Create an instance of the Callback class
-    mycallback cb;
-
-    // Read the temperature and version
-    std::cout << "Temperature: " << sensor.temperature() << " C" << std::endl;
-    std::cout << "Version: " << sensor.version() << std::endl;
-
-    // Set high-res (50 Hz, 16-bit)
-    sensor.high_res_enable(true);
-
-    // Set to sample SpO2
-    sensor.mode(MAX30100_MODE_SPO2_EN);
-
-    // Read continuously, stepping up the LED current every second,
-    // us GPIO 0 as the interrupt pin
-    sensor.sample_continuous(0, false, &cb);
-    for (int i = MAX30100_LED_CURRENT_0_0_MA; i <= MAX30100_LED_CURRENT_50_0_MA && shouldRun; i++) {
-        // Toggle the LED current
-        std::cout << "Setting LED current = " << i << std::endl;
-
-        sensor.current((MAX30100_LED_CURRENT) i, (MAX30100_LED_CURRENT) i);
-
-        upm_delay(1);
-    }
-
-    // Read individual samples
-    for (int i = 0; i < 10; i++) {
-        max30100_value val = sensor.sample();
-        std::cout << "Single value IR: " << val.IR << " R: " << val.R << std::endl;
-    }
-
-    //! [Interesting]
-
-    std::cout << "Exiting..." << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/max31723.cxx b/examples/c++/max31723.cxx
deleted file mode 100644
index d125ad8..0000000
--- a/examples/c++/max31723.cxx
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "max31723.hpp"
-#include "upm_utilities.h"
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::MAX31723 sensor(0, 7);
-    upm_delay_us(1000000);
-
-    while (!doWork) {
-        std::cout << "Temperature " << sensor.getTemperature() << std::endl;
-        upm_delay_us(1000000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/max31855.cxx b/examples/c++/max31855.cxx
deleted file mode 100644
index e949e3b..0000000
--- a/examples/c++/max31855.cxx
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-//! [Interesting]
-#include "max31855.hpp"
-
-int
-main(int argc, char** argv)
-{
-    upm::MAX31855 temp(0, 8);
-
-    std::cout << temp.getTemp() << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/max44000.cxx b/examples/c++/max44000.cxx
deleted file mode 100644
index fbf64f5..0000000
--- a/examples/c++/max44000.cxx
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "max44000.hpp"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::MAX44000 sensor(0, ADDR);
-    std::cout << "proximity value = " << sensor.getAmbient() << std::endl;
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/max44009.cxx b/examples/c++/max44009.cxx
deleted file mode 100644
index 07b1d3d..0000000
--- a/examples/c++/max44009.cxx
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "max44009.hpp"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-
-int
-main()
-{
-    //! [Interesting]
-    upm::MAX44009 lightSensor(EDISON_I2C_BUS);
-    while (true) {
-        float value = lightSensor.getVisibleLux();
-        std::cout << "Light level = " << value << " lux" << std::endl;
-        upm_delay(1);
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/max5487.cxx b/examples/c++/max5487.cxx
deleted file mode 100644
index befe4c1..0000000
--- a/examples/c++/max5487.cxx
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "max5487.hpp"
-#include "upm_utilities.h"
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::MAX5487 sensor(7);
-
-    // Power LED UP
-    for (int i = 0; i < 255; i++) {
-        sensor.setWiperA(i);
-        upm_delay_us(5000);
-    }
-
-    // Power LED DOWN
-    for (int i = 0; i < 255; i++) {
-        sensor.setWiperA(255 - i);
-        upm_delay_us(5000);
-    }
-
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/maxds3231m.cxx b/examples/c++/maxds3231m.cxx
deleted file mode 100644
index 7e6af85..0000000
--- a/examples/c++/maxds3231m.cxx
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "maxds3231m.hpp"
-#include "upm_utilities.h"
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::Time3231 t;
-    upm::MAXDS3231M sensor(0, ADDR);
-
-    t.second = 1;
-    t.minute = 3;
-    t.hour = 3;
-    t.day = 3;
-    t.month = 3;
-    t.year = 3;
-    t.weekDay = 3;
-    sensor.setDate(t); // Note, second should be set to 1.
-
-    upm_delay_us(500000);
-
-    while (!doWork) {
-        if (sensor.getDate(t)) {
-            std::cout << (int) t.hour << ":" << (int) t.minute << ":" << (int) t.second << std::endl;
-        }
-        std::cout << "Temperature " << sensor.getTemperature() << std::endl;
-        upm_delay_us(1000000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/maxsonarez.cxx b/examples/c++/maxsonarez.cxx
deleted file mode 100644
index 42797ca..0000000
--- a/examples/c++/maxsonarez.cxx
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "maxsonarez.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-#define MAXSONAREZ_AREF 5.0
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a MaxSonarEZ on analog pin A1, with an analog
-    // reference voltage of MAXSONAREZ_AREF
-    upm::MAXSONAREZ sonar(1, MAXSONAREZ_AREF);
-
-    // Every second, sample the sonar and output the distance to an
-    // object in inches.
-
-    // With the EZ3 version, the minimum and maximum ranges seemed to be
-    // between 6 and 33 inches
-
-    while (shouldRun) {
-        cout << "AREF: " << MAXSONAREZ_AREF << ", distance in inches: " << sonar.inches() << endl;
-
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mb704x.cxx b/examples/c++/mb704x.cxx
deleted file mode 100644
index 856b5cc..0000000
--- a/examples/c++/mb704x.cxx
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <mb704x.hpp>
-#include <signal.h>
-#include <upm_utilities.h>
-
-using namespace std;
-using namespace upm;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a MB704X sensor using default parameters (bus 0,
-    // address 112)
-    upm::MB704X sensor;
-
-    while (shouldRun) {
-        cout << "Range: " << sensor.getRange() << " cm" << endl;
-
-        upm_delay_ms(500);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/mcp2515-txrx.cxx b/examples/c++/mcp2515-txrx.cxx
deleted file mode 100644
index 3607725..0000000
--- a/examples/c++/mcp2515-txrx.cxx
+++ /dev/null
@@ -1,118 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-#include <upm_utilities.h>
-
-#include "mcp2515.hpp"
-#include "mcp2515_regs.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    // by default we just receive packets
-    bool do_tx = false;
-
-    // if an argument is given, we will transmit packets
-    if (argc > 1)
-        do_tx = true;
-    //! [Interesting]
-
-    // NOTE: This example assumes that only two devices are connected
-    // to the CAN bus, and that both devices are running this example;
-    // one in TX (transmit) mode, and one in RX (receive) mode.
-
-    // If this is not the case, then in rx mode you may see other
-    // packets from other devices, or not, depending on whether the
-    // speed is correct for the network.  In tx mode, errors may be
-    // generated on the bus, especially if the CAN bus speed does not
-    // match the rest of the network.
-
-    // You should start the receiver example first.  The transmitter
-    // example will fail after about 5 seconds (timeout) of not being
-    // able to transmit a message.
-
-    // Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-    upm::MCP2515 sensor(0, 9);
-
-    // By default, after initialization, the baud rate is set to
-    // 50Kbps, and the mode is NORMAL, so we don't need to set any of
-    // that here.
-
-    // our TX payload.  If transmitting, the first number will be
-    // incremented (and rollover) on each transmission.
-    string myPayload = "01234567";
-
-    while (shouldRun) {
-        if (do_tx) {
-            cout << "Loading a packet of 8 numbers (0-7) into a TX buffer..." << endl;
-            sensor.loadTXBuffer(MCP2515_TX_BUFFER0, 0, false, false, myPayload);
-
-            // now lets try to transmit it
-            cout << "Transmitting packet..." << endl;
-            sensor.transmitBuffer(MCP2515_TX_BUFFER0, true);
-
-            myPayload[0]++;
-            cout << "Transmit successful" << endl;
-            cout << endl;
-
-            upm_delay_ms(500);
-        } else {
-            // RX mode
-            // Look for a packet waiting for us in RXB0
-            if (sensor.rxStatusMsgs() == MCP2515_RXMSG_RXB0) {
-                cout << "Packet received in RXB0, decoding..." << endl;
-
-                // now lets retrieve and print it
-                sensor.getRXMsg(MCP2515_RX_BUFFER0);
-
-                sensor.printMsg();
-                cout << endl;
-            }
-
-            upm_delay_ms(100);
-        }
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/mcp2515.cxx b/examples/c++/mcp2515.cxx
deleted file mode 100644
index 3563184..0000000
--- a/examples/c++/mcp2515.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "mcp2515.hpp"
-#include "mcp2515_regs.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-    upm::MCP2515 sensor(0, -1);
-
-    cout << "Setting loopback mode..." << endl;
-
-    // set the mode to loopback mode.  In loopback mode, transmitted
-    // packets are sent directly to an appropriate receive buffer
-    // without actually going out onto the CAN bus.
-    sensor.setOpmode(MCP2515_OPMODE_LOOPBACK);
-
-    // lets build up a packet and try loading it (8 bytes max).
-    string myPayload = "01234567";
-    cout << "Loading a packet of 8 numbers (0-7) into a TX buffer..." << endl;
-    sensor.loadTXBuffer(MCP2515_TX_BUFFER0, 0, false, false, myPayload);
-
-    // now lets try to transmit it
-    cout << "Transmitting packet..." << endl;
-    sensor.transmitBuffer(MCP2515_TX_BUFFER0, true);
-
-    cout << "Transmit successful" << endl;
-
-    // There should now be a packet waiting for us in RXB0
-    if (sensor.rxStatusMsgs() == MCP2515_RXMSG_RXB0) {
-        cout << "Packet received in RXB0, decoding..." << endl;
-
-        // now lets retrieve and print it
-        sensor.getRXMsg(MCP2515_RX_BUFFER0);
-
-        sensor.printMsg();
-    } else {
-        cout << "No packet found, how strange." << endl;
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/mcp9808.cxx b/examples/c++/mcp9808.cxx
deleted file mode 100644
index f9e11d5..0000000
--- a/examples/c++/mcp9808.cxx
+++ /dev/null
@@ -1,158 +0,0 @@
-#include <iostream>
-
-#include "mcp9808.hpp"
-
-int
-main()
-{
-    using namespace std;
-
-    //! [Interesting]
-    int command;
-    upm::MCP9808 temp(6);
-
-    do {
-        cout << endl;
-        cout << "1 - read temp \t";
-        cout << "2 - upm_delay mode \t";
-        cout << "3 - wake up" << endl;
-        cout << "4 - set mode to " << (temp.isCelsius() == true ? "Fahrenheit" : "Celsius") << endl;
-        cout << "5 - show status bits" << endl;
-        cout << "6 - Set Tcrit \t";
-        cout << "7 - Set Tupper \t";
-        cout << "8 - Set Tlower " << endl;
-        cout << "9 - Display monitor temps " << endl;
-        cout << "10 - Enable alert default\t";
-        cout << "11 - Enable alert interrupt" << endl;
-        cout << "12 - Clear interrupt \t";
-        cout << "13 - Clear alert mode" << endl;
-        cout << "14 - Get Hysteresis\t";
-        cout << "15 - Set Hysteresis" << endl;
-        cout << "16 - Get Resolution\t";
-        cout << "17 - Set Resolution" << endl;
-        cout << "18 - Get Manufacturer ID" << endl;
-        cout << "19 - Get Device ID" << endl;
-        cout << "-1 - exit" << endl;
-        cout << "Enter a command: ";
-        cin >> command;
-
-        switch (command) {
-            float t;
-            case 1:
-                std::cout << "Temp: " << temp.getTemp() << "* "
-                          << (temp.isCelsius() ? "Celsius" : "Fahrenheit") << std::endl;
-                break;
-            case 2:
-                cout << "shutdown sensor (upm_delay mode)" << endl;
-                temp.shutDown();
-                break;
-            case 3:
-                cout << "wake up sensor" << endl;
-                temp.shutDown(false);
-                break;
-            case 4:
-                cout << "set mode to " << (temp.isCelsius() ? "Fahrenheit" : "Celsius") << endl;
-                temp.setMode(!temp.isCelsius());
-                break;
-            case 5:
-                cout << "Tcrit = " << temp.isTcrit();
-                cout << " Tupper = " << temp.isTupper();
-                cout << " Tlower = " << temp.isTlower();
-                break;
-            case 6:
-                cout << "enter a value";
-                cin >> t;
-                temp.setMonitorReg(temp.CRIT_TEMP, t);
-                break;
-            case 7:
-                cout << "enter a value";
-                cin >> t;
-                temp.setMonitorReg(temp.UPPER_TEMP, t);
-                break;
-            case 8:
-                cout << "enter a value";
-                cin >> t;
-                temp.setMonitorReg(temp.LOWER_TEMP, t);
-                break;
-            case 9:
-                cout << "tcrit = " << temp.getMonitorReg(temp.CRIT_TEMP) << endl;
-                cout << "tupper = " << temp.getMonitorReg(temp.UPPER_TEMP) << endl;
-                cout << "tlower = " << temp.getMonitorReg(temp.LOWER_TEMP) << endl;
-                break;
-            case 10:
-                cout << "set alert mode default";
-                temp.setAlertMode(temp.ALERTCTRL);
-                break;
-            case 11:
-                cout << "set alert mode interrupt";
-                temp.setAlertMode(temp.ALERTMODE | temp.ALERTCTRL);
-                break;
-            case 12:
-                temp.clearInterrupt();
-                break;
-            case 13:
-                cout << "Clear alerts" << endl;
-                temp.clearAlertMode();
-                break;
-            case 14:
-                cout << "Hysteresis: " << temp.getHysteresis() << endl;
-                break;
-            case 15:
-                int u;
-                cout << "enter 1 to 4";
-                cin >> u;
-                switch (u) {
-                    case 1:
-                        temp.setHysteresis(temp.HYST_0);
-                        break;
-                    case 2:
-                        temp.setHysteresis(temp.HYST_1_5);
-                        break;
-                    case 3:
-                        temp.setHysteresis(temp.HYST_3_0);
-                        break;
-                    case 4:
-                    default:
-                        temp.setHysteresis(temp.HYST_6_0);
-                        break;
-                }
-                break;
-            case 16:
-                cout << "Resolution: " << temp.getResolution() << endl;
-                break;
-            case 17:
-                int v;
-                cout << "enter 1 to 4";
-                cin >> v;
-                switch (v) {
-                    case 1:
-                        temp.setResolution(temp.RES_LOW);
-                        break;
-                    case 2:
-                        temp.setResolution(temp.RES_MEDIUM);
-                        break;
-                    case 3:
-                        temp.setResolution(temp.RES_HIGH);
-                        break;
-                    case 4:
-                    default:
-                        temp.setResolution(temp.RES_PRECISION);
-                        break;
-                }
-                break;
-            case 18:
-                cout << "Manufacturer ID: " << std::hex << temp.getManufacturer() << endl;
-                break;
-            case 19:
-                cout << "Get device ID: " << std::hex << temp.getDevicedId() << endl;
-                break;
-            case -1:
-                break;
-            default:
-                cout << endl << "That option is not available. Try again" << endl;
-                break;
-        }
-    } while (command != -1);
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/md-stepper.cxx b/examples/c++/md-stepper.cxx
deleted file mode 100644
index 2fa5d09..0000000
--- a/examples/c++/md-stepper.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015-2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "md.hpp"
-#include "md_defs.h"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an I2C Motor Driver on I2C bus 0
-
-    upm::MD motors(MD_I2C_BUS, MD_DEFAULT_I2C_ADDR);
-
-    // This example demonstrates using the MD to drive a stepper motor
-
-    // configure it, for this example, we'll assume 200 steps per rev
-    motors.configStepper(200);
-
-    // set for half a rotation
-    motors.setStepperSteps(100);
-
-    // let it go - clockwise rotation, 10 RPM speed
-    motors.enableStepper(MD_STEP_DIR_CW, 10);
-
-    upm_delay(3);
-
-    // Now do it backwards...
-    motors.setStepperSteps(100);
-    motors.enableStepper(MD_STEP_DIR_CCW, 10);
-
-    // now disable
-    motors.disableStepper();
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/md.cxx b/examples/c++/md.cxx
deleted file mode 100644
index ef66c98..0000000
--- a/examples/c++/md.cxx
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014-2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "md.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an I2C Motor Driver on I2C bus 0
-
-    upm::MD motors(MD_I2C_BUS, MD_DEFAULT_I2C_ADDR);
-
-    // set direction to CW and set speed to 50%
-    cout << "Spin M1 and M2 at half speed for 3 seconds" << endl;
-    motors.setMotorDirections(MD_DIR_CW, MD_DIR_CW);
-    motors.setMotorSpeeds(127, 127);
-
-    upm_delay(3);
-    // counter clockwise
-    cout << "Reversing M1 and M2 for 3 seconds" << endl;
-    motors.setMotorDirections(MD_DIR_CCW, MD_DIR_CCW);
-    upm_delay(3);
-
-    //! [Interesting]
-
-    cout << "Stopping motors" << endl;
-    motors.setMotorSpeeds(0, 0);
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mg811.cxx b/examples/c++/mg811.cxx
deleted file mode 100644
index 6e695a2..0000000
--- a/examples/c++/mg811.cxx
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mg811.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-#define MG811_AREF 5.0
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate an MG811 on analog pin A0, and digital pin D2 with an
-    // analog reference voltage of MG811_AREF (5.0)
-    upm::MG811 sensor(0, 2, MG811_AREF);
-
-    // Every tenth of a second, sample the sensor and output it's
-    // detected CO2 concentration in parts per million (ppm)
-
-    while (shouldRun) {
-        cout << "CO2 concentration in PPM: " << sensor.ppm() << endl;
-
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mhz16.cxx b/examples/c++/mhz16.cxx
deleted file mode 100644
index b6db04e..0000000
--- a/examples/c++/mhz16.cxx
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "mhz16.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a MHZ16 serial CO2 sensor on uart 0.
-    // This example was tested on the Grove CO2 sensor module.
-
-    upm::MHZ16 co2(0);
-
-    // make sure port is initialized properly.  9600 baud is the default.
-    if (!co2.setupTty(B9600)) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    cout << "Make sure that the sensor has had at least 3 minutes to warm up" << endl;
-    cout << "or you will not get valid results." << endl;
-    cout << "The temperature reported is not the ambient temperature, " << endl;
-    cout << "but rather the temperature of the sensor elements." << endl;
-
-    upm_delay(1);
-
-    while (shouldRun) {
-        if (!co2.getData()) {
-            cerr << "Failed to retrieve data" << endl;
-            continue;
-        }
-
-        cout << "CO2 concentration: " << co2.getGas() << " PPM, "
-             << "Temperature (in C): " << co2.getTemperature() << endl;
-
-        upm_delay(2);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mic.cxx b/examples/c++/mic.cxx
deleted file mode 100644
index aa08137..0000000
--- a/examples/c++/mic.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "mic.hpp"
-
-int is_running = 0;
-uint16_t buffer[128];
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Attach microphone to analog port A0
-    upm::Microphone sensor(0);
-    signal(SIGINT, sig_handler);
-
-    thresholdContext ctx;
-    ctx.averageReading = 0;
-    ctx.runningAverage = 0;
-    ctx.averagedOver = 2;
-
-    // Infinite loop, ends when script is cancelled
-    // Repeatedly, take a sample every 2 microseconds;
-    // find the average of 128 samples; and
-    // print a running graph of the averages
-    while (!is_running) {
-        int len = sensor.getSampledWindow(2, 128, buffer);
-        if (len) {
-            int thresh = sensor.findThreshold(&ctx, 30, buffer, len);
-            sensor.printGraph(&ctx);
-            if (thresh) {
-                // do something ....
-            }
-        }
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/micsv89.cxx b/examples/c++/micsv89.cxx
deleted file mode 100644
index d8ee8bb..0000000
--- a/examples/c++/micsv89.cxx
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Marc Graham <marc@m2ag.net>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "micsv89.hpp"
-#include "upm_utilities.h"
-
-/*
- * An example for using the MICSV89 sensor library.
- * The MICSV89 comes in 4 variants, PWM and I2c
- * in 3.3 volts and 5 volts. This library only implements
- * the I2c version of the device.
- *
- * Device output is not valid until a warm up of 15 minutes
- * of operation.
- *
- * Additional linker flags: -lupm-micsv89
- */
-
-using namespace std;
-
-volatile int running = 1;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        cout << "Exiting program." << endl;
-        running = 0;
-    }
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    upm::MICSV89 sensor(6);
-
-    while (running) {
-        sensor.update();
-        while (!sensor.valid())
-            ;
-        cout << "co2: " << sensor.co2equ() << endl;
-        cout << "short: " << sensor.vocshort() << endl;
-        cout << "tvoc: " << sensor.tvoc() << endl;
-        cout << "resistor: " << sensor.resistor() << endl;
-        cout << "****************************" << endl;
-        upm_delay(5);
-    }
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/mlx90614.cxx b/examples/c++/mlx90614.cxx
deleted file mode 100644
index bc7d05e..0000000
--- a/examples/c++/mlx90614.cxx
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "mlx90614.hpp"
-#include "upm_utilities.h"
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::MLX90614 sensor(0, DEVICE_ADDR);
-
-    while (!doWork) {
-        std::cout << "Object Temperature (" << sensor.readObjectTempC()
-                  << ")  Ambient Temperature (" << sensor.readAmbientTempC() << ")" << std::endl;
-        upm_delay_us(1000000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/mma7361.cxx b/examples/c++/mma7361.cxx
deleted file mode 100644
index 1dbd401..0000000
--- a/examples/c++/mma7361.cxx
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "mma7361.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a MMA7361 sensor on analog pins A0 (X), A1 (Y) A2
-    // (Z), selftest pin on D2, upm_delay pin on D3 nd an analog reference
-    // value of 5.0.  The freefall pin and the range pin are unused
-    // (-1).
-    upm::MMA7361 sensor(0, 1, 2, 2, 3, -1, -1, 5.0);
-
-    // 1.5g (true = 6g)
-    sensor.setRange(false);
-
-    // Every 10th of a second, update and print values
-
-    while (shouldRun) {
-        sensor.update();
-
-        float x, y, z;
-
-        sensor.getAcceleration(&x, &y, &z);
-        cout << "Acceleration x = " << x << " y = " << y << "z = " << z << endl;
-
-        sensor.getVolts(&x, &y, &z);
-        cout << "Volts x = " << x << " y = " << y << "z = " << z << endl;
-
-        cout << endl;
-
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting...\n");
-
-    return 0;
-}
diff --git a/examples/c++/mma7455.cxx b/examples/c++/mma7455.cxx
deleted file mode 100644
index 25090e1..0000000
--- a/examples/c++/mma7455.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "mma7455.hpp"
-#include "upm_utilities.h"
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::MMA7455 sensor(0, ADDR);
-
-    short x, y, z;
-    while (!doWork) {
-        sensor.readData(&x, &y, &z);
-        std::cout << "Accelerometer X(" << x << ") Y(" << y << ") Z(" << z << ")" << std::endl;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/mma7660.cxx b/examples/c++/mma7660.cxx
deleted file mode 100644
index 28f8d53..0000000
--- a/examples/c++/mma7660.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mma7660.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an MMA7660 on I2C bus 0
-
-    upm::MMA7660 accel(MMA7660_DEFAULT_I2C_BUS, MMA7660_DEFAULT_I2C_ADDR);
-
-    // place device in standby mode so we can write registers
-    accel.setModeStandby();
-
-    // enable 64 samples per second
-    accel.setSampleRate(MMA7660_AUTOSLEEP_64);
-
-    // place device into active mode
-    accel.setModeActive();
-
-    while (shouldRun) {
-        float ax, ay, az;
-
-        accel.getAcceleration(&ax, &ay, &az);
-        cout << "Acceleration: x = " << ax << "g y = " << ay << "g z = " << az << "g" << endl;
-
-        cout << endl;
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mma8x5x.cxx b/examples/c++/mma8x5x.cxx
deleted file mode 100644
index fea832a..0000000
--- a/examples/c++/mma8x5x.cxx
+++ /dev/null
@@ -1,91 +0,0 @@
-/* Author: Norbert Wesp <nwesp@phytec.de>
- * Copyright (c) 2017 Phytec Messtechnik GmbH.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mma8x5x.hpp"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-bool run = true;
-
-void
-sig_handler(int sig)
-{
-    if (sig == SIGINT)
-        run = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    upm::mma8x5x_data_t data;
-
-    // U can set your own parameters for an MMA8X5X instance with
-    /*
-    upm::mma8x5x_params_t params;
-    params.type   = <device-id>;      device-id of your sensor
-    params.rate   = <sampling-rate>;    between 0<<3 and 7<<3
-    params.range  = <range>;        between 0 and 2
-    params.offsetX  = <x-axis offset>;    between 0 and 255
-    params.offsetY  = <y-axis offset>;    between 0 and 255
-    params.offsetZ  = <z-axis offset>;    between 0 and 255
-  */
-
-    std::cout << "Initializing test-application..." << std::endl;
-
-    // Instantiate an MMA8X5X instance on bus 1 with default parameters
-    // The sensor-type will be detected by reading out the device-id
-    upm::MMA8X5X mySensor(1);
-
-    // If u have set own parameters use this one
-    /*
-        upm::MMA8X5X mySensor(1, &params);
-  */
-
-    // activate periodic measurements
-    mySensor.setActive();
-
-    // update and print available values every second
-    while (run) {
-        mySensor.getData(&data, true);
-        std::cout << "x: " << (int) data.x << std::endl
-                  << "y: " << (int) data.y << std::endl
-                  << "z: " << (int) data.z << std::endl;
-
-        std::cout << std::endl;
-
-        upm_delay(1);
-    }
-
-    std::cout << "Exiting test-application..." << std::endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/mmc35240.cxx b/examples/c++/mmc35240.cxx
deleted file mode 100644
index a75f1f8..0000000
--- a/examples/c++/mmc35240.cxx
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Author: Lay, Kuan Loon <kuan.loon.lay@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-#include <iostream>
-#include <math.h>
-#include <signal.h>
-#include <string>
-
-#include "mmc35240.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-void
-data_callback(char* data, void* args)
-{
-    upm::MMC35240* magnetometer = static_cast<upm::MMC35240*>(args);
-    float x, y, z;
-    double azimuth;
-    int level;
-    magnetometer->extract3Axis(data, &x, &y, &z);
-    /* calibrated level
-   * UNRELIABLE = 0
-   * ACCURACY_LOW = 1
-   * ACCURACY_MEDIUM = 2
-   * ACCURACY_HIGH = >=3
-   */
-    level = magnetometer->getCalibratedLevel();
-
-    if ((x == 0) && (y == 0)) {
-        cout << "Point (0, 0) is invalid!\n" << endl;
-        return;
-    }
-
-    if (x == 0) {
-        if (y > 0)
-            azimuth = 0;
-        else
-            azimuth = 180;
-    } else if (y == 0) {
-        if (x > 0)
-            azimuth = 90;
-        else
-            azimuth = 270;
-    } else {
-        if (x > 0)
-            azimuth = 90 - atan(y / x) * 180 / M_PI;
-        else
-            azimuth = 270 - atan(y / x) * 180 / M_PI;
-    }
-
-    cout << "[Calibrated Level:" << level << ']' << "[Azimuth:" << (int) (360 - azimuth) << ']'
-         << '\t' << (int) x << '\t' << (int) y << '\t' << (int) z << "[uT]" << endl;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-    // Instantiate a MMC35240 Magnetic Sensor on iio device 5. This configuration
-    // is a reference and
-    // should be changed per platform/board type.
-    // Kernel driver does not allow changing the value of scale at run-time,
-    // default scale is
-    // 0.001000
-    upm::MMC35240 magnetometer(5);
-    magnetometer.setScale(0.001000);
-    // Available sampling frequency are 1.5, 13, 25, 50
-    magnetometer.setSamplingFrequency(25.000000);
-    magnetometer.enable3AxisChannel();
-    magnetometer.installISR(data_callback, &magnetometer);
-    magnetometer.enableBuffer(16);
-
-    while (shouldRun) {
-        upm_delay(1);
-    }
-    magnetometer.disableBuffer();
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/moisture.cxx b/examples/c++/moisture.cxx
deleted file mode 100644
index b7bfd24..0000000
--- a/examples/c++/moisture.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "moisture.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Moisture sensor on analog pin A0
-    upm::Moisture moisture(0);
-
-    // Values (approximate):
-    // 0-300, sensor in air or dry soil
-    // 300-600, sensor in humid soil
-    // 600+, sensor in wet soil or submerged in water.
-    // Read the value every second and print the corresponding moisture level
-    while (shouldRun) {
-        int val = moisture.value();
-        cout << "Moisture value: " << val << ", ";
-        if (val >= 0 && val < 300)
-            cout << "dry";
-        else if (val >= 300 && val < 600)
-            cout << "moist";
-        else
-            cout << "wet";
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mpl3115a2.cxx b/examples/c++/mpl3115a2.cxx
deleted file mode 100644
index f64f7a0..0000000
--- a/examples/c++/mpl3115a2.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: William Penner <william.penner@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "mpl3115a2.hpp"
-#include "upm_utilities.h"
-
-volatile int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        printf("\nCtrl-C received.\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    // Register signal handler
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    float pressure = 0.0;
-    float temperature = 0.0;
-    float altitude = 0.0;
-    float sealevel = 0.0;
-
-    upm::MPL3115A2 sensor(0, MPL3115A2_I2C_ADDRESS);
-
-    sensor.testSensor();
-
-    while (!doWork) {
-        temperature = sensor.getTemperature(true);
-        pressure = sensor.getPressure(false);
-        altitude = sensor.getAltitude();
-        sealevel = sensor.getSealevelPressure();
-
-        std::cout << "pressure value = " << pressure << ", altitude value = " << altitude
-                  << ", sealevel value = " << sealevel << ", temperature = " << temperature
-                  << std::endl;
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/mpr121.cxx b/examples/c++/mpr121.cxx
deleted file mode 100644
index 586a47d..0000000
--- a/examples/c++/mpr121.cxx
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mpr121.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-void
-printButtons(upm::MPR121& touch)
-{
-    bool buttonPressed = false;
-
-    cout << "Buttons Pressed: ";
-    for (int i = 0; i < 12; i++) {
-        if (touch.m_buttonStates & (1 << i)) {
-            cout << i << " ";
-            buttonPressed = true;
-        }
-    }
-
-    if (!buttonPressed)
-        cout << "None";
-
-    if (touch.m_overCurrentFault)
-        cout << "Over Current Fault detected!" << endl;
-
-    cout << endl;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an MPR121 on I2C bus 0
-
-    upm::MPR121 touch(MPR121_I2C_BUS, MPR121_DEFAULT_I2C_ADDR);
-
-    // init according to AN3944 defaults
-    touch.configAN3944();
-
-    while (shouldRun) {
-        touch.readButtons();
-        printButtons(touch);
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mpu9150-ak8975.cxx b/examples/c++/mpu9150-ak8975.cxx
deleted file mode 100644
index b19b056..0000000
--- a/examples/c++/mpu9150-ak8975.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ak8975.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    upm::AK8975 sensor;
-
-    sensor.init();
-
-    while (shouldRun) {
-        sensor.update();
-
-        float x, y, z;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer:  ";
-        cout << "MX = " << x << " MY = " << y << " MZ = " << z << endl;
-
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mpu9150-mpu60x0.cxx b/examples/c++/mpu9150-mpu60x0.cxx
deleted file mode 100644
index 04c03bd..0000000
--- a/examples/c++/mpu9150-mpu60x0.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mpu60x0.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    upm::MPU60X0 sensor;
-
-    sensor.init();
-
-    while (shouldRun) {
-        sensor.update();
-
-        float x, y, z;
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer: ";
-        cout << "AX: " << x << " AY: " << y << " AZ: " << z << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gryoscope:     ";
-        cout << "GX: " << x << " GY: " << y << " GZ: " << z << endl;
-
-        cout << "Temperature:   " << sensor.getTemperature() << endl;
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mpu9150-mpu9250.cxx b/examples/c++/mpu9150-mpu9250.cxx
deleted file mode 100644
index 93ff415..0000000
--- a/examples/c++/mpu9150-mpu9250.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mpu9250.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    upm::MPU9250 sensor;
-
-    sensor.init();
-
-    while (shouldRun) {
-        sensor.update();
-
-        float x, y, z;
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer: ";
-        cout << "AX: " << x << " AY: " << y << " AZ: " << z << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gryoscope:     ";
-        cout << "GX: " << x << " GY: " << y << " GZ: " << z << endl;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer:  ";
-        cout << "MX = " << x << " MY = " << y << " MZ = " << z << endl;
-
-        cout << "Temperature:   " << sensor.getTemperature() << endl;
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mpu9150.cxx b/examples/c++/mpu9150.cxx
deleted file mode 100644
index 5886038..0000000
--- a/examples/c++/mpu9150.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mpu9150.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    upm::MPU9150 sensor;
-
-    sensor.init();
-
-    while (shouldRun) {
-        sensor.update();
-
-        float x, y, z;
-
-        sensor.getAccelerometer(&x, &y, &z);
-        cout << "Accelerometer: ";
-        cout << "AX: " << x << " AY: " << y << " AZ: " << z << endl;
-
-        sensor.getGyroscope(&x, &y, &z);
-        cout << "Gryoscope:     ";
-        cout << "GX: " << x << " GY: " << y << " GZ: " << z << endl;
-
-        sensor.getMagnetometer(&x, &y, &z);
-        cout << "Magnetometer:  ";
-        cout << "MX = " << x << " MY = " << y << " MZ = " << z << endl;
-
-        cout << "Temperature:   " << sensor.getTemperature() << endl;
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/mq303a.cxx b/examples/c++/mq303a.cxx
deleted file mode 100644
index 9a2d5d9..0000000
--- a/examples/c++/mq303a.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "mq303a.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an mq303a sensor on analog pin A0
-
-    // This device uses a heater powered from an analog I/O pin.
-    // If using A0 as the data pin, then you need to use A1, as the heater
-    // pin (if using a grove mq303a).  For A1, we can use the D15 gpio,
-    // setup as an output, and drive it low to power the heater.
-
-    upm::MQ303A mq303a(0, 15);
-
-    cout << "Enabling heater and waiting 2 minutes for warmup." << endl;
-    mq303a.heaterEnable(true);
-    upm_delay(120);
-
-    cout << "This sensor may need to warm until the value drops below about 450." << endl;
-
-    // Print the detected alcohol value every second
-    while (shouldRun) {
-        int val = mq303a.value();
-
-        cout << "Alcohol detected (higher means stronger alcohol): " << val << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-    mq303a.heaterEnable(false);
-
-    return 0;
-}
diff --git a/examples/c++/ms5611.cxx b/examples/c++/ms5611.cxx
deleted file mode 100644
index 5c4c738..0000000
--- a/examples/c++/ms5611.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "ms5611.hpp"
-#include "upm_utilities.h"
-
-static int is_running = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        is_running = 1;
-    }
-}
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    upm::MS5611 sensor(0);
-    signal(SIGINT, sig_handler);
-
-    while (!is_running) {
-        int value = sensor.getTemperatureCelsius();
-        std::cout << "Temperature = " << value << "C" << std::endl;
-        value = sensor.getPressurePa();
-        std::cout << "Pressure = " << value << "Pa" << std::endl;
-        upm_delay(1);
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/ms5803.cxx b/examples/c++/ms5803.cxx
deleted file mode 100644
index b259426..0000000
--- a/examples/c++/ms5803.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ms5803.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    // Instantiate a MS5803 instance using i2c bus 0 and default address
-    upm::MS5803 sensor(0);
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid
-    // pin for CS (or -1 if you are using a hw pin you have no control
-    // over, like edison):
-    // MS5803(0, -1, 9);
-
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        cout << "Temperature: " << sensor.getTemperature() << " C, "
-             << "Pressure: " << sensor.getPressure() << " mbar" << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/my9221-grovecircularled.cxx b/examples/c++/my9221-grovecircularled.cxx
deleted file mode 100644
index 4109436..0000000
--- a/examples/c++/my9221-grovecircularled.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "grovecircularled.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a Grove Circular LED on D9 for data, D8 for clock
-
-    upm::GroveCircularLED circle(9, 8);
-
-    int level = 0;
-    while (shouldRun) {
-        circle.setSpinner(level);
-        level = (level + 1) % 24;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/my9221-groveledbar.cxx b/examples/c++/my9221-groveledbar.cxx
deleted file mode 100644
index 53dbf88..0000000
--- a/examples/c++/my9221-groveledbar.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "groveledbar.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a GroveLEDBar, we use D8 for the data, and D9 for the
-    // clock.  This was tested with a Grove LED bar.
-    upm::GroveLEDBar bar(8, 9);
-
-    while (shouldRun) {
-        // count up from green to red
-        for (int i = 0; i <= 10; i++) {
-            bar.setBarLevel(i, true);
-            upm_delay_us(100000);
-        }
-        upm_delay(1);
-
-        // count down from red to green
-        for (int i = 0; i <= 10; i++) {
-            bar.setBarLevel(i, false);
-            upm_delay_us(100000);
-        }
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-    // turn off the LED's
-    bar.setBarLevel(0);
-
-    return 0;
-}
diff --git a/examples/c++/nlgpio16.cxx b/examples/c++/nlgpio16.cxx
deleted file mode 100644
index 27bc0cc..0000000
--- a/examples/c++/nlgpio16.cxx
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "nlgpio16.hpp"
-
-using namespace std;
-using namespace upm;
-
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // Instantiate a NLGPIO16 Module on the default UART (/dev/ttyACM0)
-    upm::NLGPIO16 sensor;
-
-    // get the Version
-    cout << "Device Version: " << sensor.getVersion() << endl;
-    // read the gpio at pin 3
-    cout << "GPIO 3 Value: " << sensor.gpioRead(3) << endl;
-    // read the analog voltage at pin 5
-    cout << "Analog 5 Voltage: " << sensor.analogReadVolts(5) << endl;
-    // set the gpio at pin 14 to HIGH
-    sensor.gpioSet(14);
-
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/nmea_gps-i2c.cxx b/examples/c++/nmea_gps-i2c.cxx
deleted file mode 100644
index 226e0e7..0000000
--- a/examples/c++/nmea_gps-i2c.cxx
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "nmea_gps.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-const size_t bufferLength = 128;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a NMEA_GPS UBLOX based i2c sensor on i2c bus 0 at
-    // address 0x42
-    upm::NMEAGPS sensor(0, 0x42);
-
-    // loop, dumping NMEA data out as fast as it comes in
-    while (shouldRun) {
-        if (sensor.dataAvailable(0))
-            upm_delay_us(100);
-        else
-            cout << sensor.readStr(bufferLength);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/nmea_gps.cxx b/examples/c++/nmea_gps.cxx
deleted file mode 100644
index 457fc88..0000000
--- a/examples/c++/nmea_gps.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "nmea_gps.hpp"
-
-using namespace std;
-
-bool shouldRun = true;
-
-const size_t bufferLength = 256;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a NMEA_GPS sensor on uart 0 at 9600 baud with enable
-    // pin on D3.  If you do not need an enable pin, you can specify -1.
-    upm::NMEAGPS sensor(0, 9600, 3);
-
-    // loop, dumping NMEA data out as fast as it comes in
-    while (shouldRun && sensor.dataAvailable(5000)) {
-        cout << sensor.readStr(bufferLength);
-    }
-
-    if (shouldRun)
-        cerr << "Timed out" << endl;
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/nrf24l01-broadcast.cxx b/examples/c++/nrf24l01-broadcast.cxx
deleted file mode 100644
index 180497f..0000000
--- a/examples/c++/nrf24l01-broadcast.cxx
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-#include <string>
-#include <vector>
-
-#include "nrf24l01.hpp"
-#include "upm_utilities.h"
-
-int running = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        running = 1;
-    }
-}
-
-void
-nrf_handler()
-{
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    upm::NRF24L01 sensor(7, 8);
-    sensor.setBeaconingMode();
-
-    std::vector<std::string> msgs;
-
-    msgs.push_back("Hello World 1!!!");
-    msgs.push_back("Hello World 2!!!");
-    msgs.push_back("Hello World 3!!!");
-    msgs.push_back("Hello World 4!!!");
-    msgs.push_back("Hello World 5!!!");
-
-    signal(SIGINT, sig_handler);
-
-    while (!running) {
-        for (std::vector<std::string>::iterator item = msgs.begin(); item != msgs.end(); ++item) {
-            std::cout << "BROADCASTING " << (*item).c_str() << std::endl;
-
-            for (int i = 0; i < 3; i++) {
-                sensor.sendBeaconingMsg((uint8_t*) (*item).c_str());
-                upm_delay_us(1000000);
-            }
-        }
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    msgs.clear();
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/nrf24l01-receiver.cxx b/examples/c++/nrf24l01-receiver.cxx
deleted file mode 100644
index f370d73..0000000
--- a/examples/c++/nrf24l01-receiver.cxx
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-
-#include "nrf24l01.hpp"
-
-int running = 0;
-
-uint8_t local_address[5] = { 0x01, 0x01, 0x01, 0x01, 0x01 };
-uint8_t broadcast_address[5] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };
-upm::NRF24L01 comm(7, 8);
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        running = 1;
-    }
-}
-
-//! [Interesting]
-class mycb : public virtual Callback
-{
-    public:
-        mycb(upm::NRF24L01 *com) : _com(com) {}
-        virtual void run()
-        {
-            if (_com != NULL)
-                std::cout << "Reciever :: " << *((uint32_t*) &(_com->m_rxBuffer[0])) << std::endl;
-            else
-                std::cout << "Example callback!" << std::endl;
-        }
-    private:
-        upm::NRF24L01* _com;
-};
-
-int
-main(int argc, char** argv)
-{
-    mycb cb(&comm);
-
-    comm.setSourceAddress((uint8_t*) local_address);
-    comm.setDestinationAddress((uint8_t*) broadcast_address);
-    comm.setPayload(MAX_BUFFER);
-    comm.configure();
-    comm.setSpeedRate(upm::NRF_250KBPS);
-    comm.setChannel(99);
-    comm.setDataReceivedHandler(&cb);
-
-    signal(SIGINT, sig_handler);
-
-    while (!running) {
-        comm.pollListener();
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/nrf24l01-transmitter.cxx b/examples/c++/nrf24l01-transmitter.cxx
deleted file mode 100644
index 5e0f673..0000000
--- a/examples/c++/nrf24l01-transmitter.cxx
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-#include <string.h>
-
-#include "nrf24l01.hpp"
-#include "upm_utilities.h"
-
-int running = 0;
-
-uint8_t destAddress[5] = { 0x01, 0x01, 0x01, 0x01, 0x01 };
-uint8_t srcAddress[5] = { 0x01, 0x01, 0x01, 0x01, 0x02 };
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        running = 1;
-    }
-}
-
-class mycb : public virtual Callback
-{
-    public:
-        mycb(upm::NRF24L01 *com) : _com(com) {}
-        virtual void run()
-        {
-            if (_com != NULL)
-                std::cout << "Reciever :: " << *((uint32_t*) &(_com->m_rxBuffer[0])) << std::endl;
-            else
-                std::cout << "Example callback!" << std::endl;
-        }
-    private:
-        upm::NRF24L01* _com;
-};
-
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    uint32_t dummyData = 0;
-    upm::NRF24L01 comm(7, 8);
-    mycb cb(&comm);
-
-    comm.setSourceAddress((uint8_t*) srcAddress);
-    comm.setDestinationAddress((uint8_t*) destAddress);
-    comm.setPayload(MAX_BUFFER);
-    comm.setChannel(99);
-    comm.configure();
-    comm.setDataReceivedHandler(&cb);
-
-    signal(SIGINT, sig_handler);
-
-    while (!running) {
-        memcpy(comm.m_txBuffer, &dummyData, sizeof(dummyData));
-        comm.send();
-        std::cout << "devi2 :: sending data ...." << dummyData << std::endl;
-        upm_delay_us(3000000);
-        dummyData += 3000;
-    }
-
-    std::cout << "exiting application" << std::endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/nrf8001-broadcast.cxx b/examples/c++/nrf8001-broadcast.cxx
deleted file mode 100644
index be99a98..0000000
--- a/examples/c++/nrf8001-broadcast.cxx
+++ /dev/null
@@ -1,189 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <aci_setup.h>
-#include <assert.h>
-#include <iostream>
-#include <lib_aci.h>
-#include <signal.h>
-#include <stdio.h>
-
-#include "aci_evts.h"
-#include "hal_aci_tl.h"
-#include "nrf8001-broadcast.hpp"
-#include "nrf8001.hpp"
-#include "upm_utilities.h"
-
-#ifdef SERVICES_PIPE_TYPE_MAPPING_CONTENT
-static services_pipe_type_mapping_t services_pipe_type_mapping[NUMBER_OF_PIPES] =
-SERVICES_PIPE_TYPE_MAPPING_CONTENT;
-#else
-#define NUMBER_OF_PIPES 0
-static services_pipe_type_mapping_t* services_pipe_type_mapping = NULL;
-#endif
-
-/**
- * Store the setup for the nRF8001 in the flash of the AVR to save on RAM
- */
-static hal_aci_data_t setup_msgs[NB_SETUP_MESSAGES] = SETUP_MESSAGES_CONTENT;
-
-/**
- * aci_struct that will contain
- * total initial credits
- * current credit
- * current state of the aci (setup/standby/active/upm_delay)
- * open remote pipe pending
- * close remote pipe pending
- * Current pipe available bitmap
- * Current pipe closed bitmap
- * Current connection interval, slave latency and link supervision timeout
- * Current State of the the GATT client (Service Discovery)
- * Status of the bond (R) Peer address
- */
-static struct aci_state_t aci_state;
-
-/**
- * Temporary buffers for sending ACI commands
- */
-static hal_aci_evt_t aci_data;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-    }
-}
-
-void
-init_aci_setup()
-{
-    /**
-   * Point ACI data structures to the the setup data that the nRFgo studio
-   * generated for the nRF8001
-   */
-    // abort if this is NULL
-    assert(services_pipe_type_mapping != NULL);
-
-    aci_state.aci_setup_info.services_pipe_type_mapping = &services_pipe_type_mapping[0];
-
-    aci_state.aci_setup_info.number_of_pipes = NUMBER_OF_PIPES;
-    aci_state.aci_setup_info.setup_msgs = setup_msgs;
-    aci_state.aci_setup_info.num_setup_msgs = NB_SETUP_MESSAGES;
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    init_aci_setup();
-    init_local_interfaces(&aci_state, 10, 8, 4);
-
-    while (1) {
-        static bool setup_required = false;
-        if (lib_aci_event_get(&aci_state, &aci_data)) {
-            aci_evt_t* aci_evt;
-            aci_evt = &aci_data.evt;
-
-            switch (aci_evt->evt_opcode) {
-                /**
-          As soon as you reset the nRF8001 you will get an ACI Device Started Event
-          */
-                case ACI_EVT_DEVICE_STARTED: {
-                    aci_state.data_credit_available =
-                    aci_evt->params.device_started.credit_available;
-                    switch (aci_evt->params.device_started.device_mode) {
-                        case ACI_DEVICE_SETUP:
-                            /**
-                  When the device is in the setup mode
-                  */
-                            printf("Evt Device Started: Setup\n");
-                            setup_required = true;
-                            break;
-
-                        case ACI_DEVICE_STANDBY:
-                            printf("Evt Device Started: Standby\n");
-                            lib_aci_broadcast(10 /* in seconds */,
-                                              0x0100 /* advertising interval 100ms */);
-                            printf("Broadcasting started\n");
-                            break;
-                        default:
-                            break;
-                    }
-                } break; // ACI Device Started Event
-
-                case ACI_EVT_CMD_RSP:
-                    if (ACI_STATUS_SUCCESS != aci_evt->params.cmd_rsp.cmd_status) {
-                        printf("ACI_EVT_CMD_RSP\n");
-                        while (1)
-                            ;
-                    }
-                    break;
-
-                case ACI_EVT_CONNECTED:
-                    printf("ACI_EVT_CONNECTED\n");
-                    break;
-
-                case ACI_EVT_PIPE_STATUS:
-                    printf("ACI_EVT_PIPE_STATUS\n");
-                    break;
-
-                case ACI_EVT_DISCONNECTED:
-                    if (ACI_STATUS_ERROR_ADVT_TIMEOUT == aci_evt->params.disconnected.aci_status) {
-                        printf("Broadcasting timed out\n");
-                    } else {
-                        printf("Evt Disconnected. Link Loss\n");
-                    }
-                    break;
-
-                case ACI_EVT_DATA_RECEIVED:
-                    printf("ACI_EVT_DATA_RECEIVED\n");
-                    break;
-
-                case ACI_EVT_HW_ERROR:
-                    printf("ACI_EVT_HW_ERROR\n");
-                    break;
-                default:
-                    break;
-            }
-        }
-
-        if (setup_required) {
-            if (SETUP_SUCCESS == do_aci_setup(&aci_state)) {
-                setup_required = false;
-            }
-        }
-        upm_delay_us(100);
-    }
-
-    close_local_interfaces(&aci_state);
-
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/nrf8001-broadcast.hpp b/examples/c++/nrf8001-broadcast.hpp
deleted file mode 100644
index 3b6e617..0000000
--- a/examples/c++/nrf8001-broadcast.hpp
+++ /dev/null
@@ -1,93 +0,0 @@
-#include "aci.h"
-#include "hal_platform.h"
-
-#pragma once
-
-#define PIPE_GAP_DEVICE_NAME_SET 1
-
-#define NUMBER_OF_PIPES 1
-
-#define SERVICES_PIPE_TYPE_MAPPING_CONTENT {\
-  {ACI_STORE_LOCAL, ACI_SET},   \
-}
-
-#define GAP_PPCP_MAX_CONN_INT 0xffff /**< Maximum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific value requested */
-#define GAP_PPCP_MIN_CONN_INT  0xffff /**< Minimum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific maximum*/
-#define GAP_PPCP_SLAVE_LATENCY 0
-#define GAP_PPCP_CONN_TIMEOUT 0xffff /** Connection Supervision timeout multiplier as a multiple of 10msec, 0xFFFF means no specific value requested */
-
-#define NB_SETUP_MESSAGES 13
-#define SETUP_MESSAGES_CONTENT {\
-    {0x00,\
-        {\
-            0x07,0x06,0x00,0x00,0x03,0x02,0x41,0xd7,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x01,0x01,0x00,0x00,0x06,0x00,0x01,\
-            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x10,0x1c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x90,0x00,0x64,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x10,0x38,0x02,0xff,0x02,0x58,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-            0x00,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x05,0x06,0x10,0x54,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x00,0x04,0x04,0x02,0x02,0x00,0x01,0x28,0x00,0x01,0x00,0x18,0x04,0x04,0x05,0x05,0x00,\
-            0x02,0x28,0x03,0x01,0x0e,0x03,0x00,0x00,0x2a,0x04,0x14,0x0b,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x1c,0x05,0x00,0x03,0x2a,0x00,0x01,0x62,0x63,0x61,0x73,0x74,0x63,0x73,0x65,0x6d,0x69,\
-            0x2e,0x04,0x04,0x05,0x05,0x00,0x04,0x28,0x03,0x01,0x02,0x05,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x38,0x00,0x01,0x2a,0x06,0x04,0x03,0x02,0x00,0x05,0x2a,0x01,0x01,0x00,0x00,0x04,0x04,\
-            0x05,0x05,0x00,0x06,0x28,0x03,0x01,0x02,0x07,0x00,0x04,0x2a,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x54,0x06,0x04,0x09,0x08,0x00,0x07,0x2a,0x04,0x01,0xff,0xff,0xff,0xff,0x00,0x00,0xff,\
-            0xff,0x04,0x04,0x02,0x02,0x00,0x08,0x28,0x00,0x01,0x01,0x18,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x04,0x06,0x20,0x70,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x0d,0x06,0x40,0x00,0x2a,0x00,0x01,0x00,0x80,0x04,0x00,0x03,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x06,0x06,0x60,0x00,0x00,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x06,0x06,0xf0,0x00,0x03,0x4c,0xf2,\
-        },\
-    },\
-}
diff --git a/examples/c++/nrf8001-helloworld.cxx b/examples/c++/nrf8001-helloworld.cxx
deleted file mode 100644
index 64fd286..0000000
--- a/examples/c++/nrf8001-helloworld.cxx
+++ /dev/null
@@ -1,407 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <aci_setup.h>
-#include <assert.h>
-#include <iostream>
-#include <lib_aci.h>
-#include <signal.h>
-#include <stdint.h>
-#include <stdio.h>
-#include <string.h>
-
-#include "aci_cmds.h"
-#include "aci_evts.h"
-#include "hal_aci_tl.h"
-#include "nrf8001-helloworld.hpp"
-#include "nrf8001.hpp"
-#include "uart_over_ble.h"
-#include "upm_utilities.h"
-
-/*
- * You can use the nRF UART app in the Apple iOS app store and Google Play for
- * Android 4.3 for Samsung Galaxy S4
- * with this helloworld application
- */
-
-#ifdef SERVICES_PIPE_TYPE_MAPPING_CONTENT
-static services_pipe_type_mapping_t services_pipe_type_mapping[NUMBER_OF_PIPES] =
-SERVICES_PIPE_TYPE_MAPPING_CONTENT;
-#else
-#define NUMBER_OF_PIPES 0
-static services_pipe_type_mapping_t* services_pipe_type_mapping = NULL;
-#endif
-
-/**
- * Store the setup for the nRF8001 in the flash of the AVR to save on RAM
- */
-static hal_aci_data_t setup_msgs[NB_SETUP_MESSAGES] = SETUP_MESSAGES_CONTENT;
-
-/**
- * aci_struct that will contain
- * total initial credits
- * current credit
- * current state of the aci (setup/standby/active/upm_delay)
- * open remote pipe pending
- * close remote pipe pending
- * Current pipe available bitmap
- * Current pipe closed bitmap
- * Current connection interval, slave latency and link supervision timeout
- * Current State of the the GATT client (Service Discovery)
- * Status of the bond (R) Peer address
- */
-static struct aci_state_t aci_state;
-
-/**
- * Temporary buffers for sending ACI commands
- */
-static hal_aci_evt_t aci_data;
-
-/*
-Timing change state variable
-*/
-static bool timing_change_done = false;
-
-/*
-Used to test the UART TX characteristic notification
-*/
-static uart_over_ble_t uart_over_ble;
-static uint8_t uart_buffer[20];
-static uint8_t uart_buffer_len = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-    }
-}
-
-void
-init_aci_setup()
-{
-    /**
-   * Point ACI data structures to the the setup data that the nRFgo studio
-   * generated for the nRF8001
-   */
-    // abort if this is NULL
-    assert(services_pipe_type_mapping != NULL);
-
-    aci_state.aci_setup_info.services_pipe_type_mapping = &services_pipe_type_mapping[0];
-
-    aci_state.aci_setup_info.number_of_pipes = NUMBER_OF_PIPES;
-    aci_state.aci_setup_info.setup_msgs = setup_msgs;
-    aci_state.aci_setup_info.num_setup_msgs = NB_SETUP_MESSAGES;
-}
-
-void
-uart_over_ble_init(void)
-{
-    uart_over_ble.uart_rts_local = true;
-}
-
-bool
-uart_tx(uint8_t* buffer, uint8_t buffer_len)
-{
-    bool status = false;
-
-    if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_TX_TX) &&
-        (aci_state.data_credit_available >= 1)) {
-        status = lib_aci_send_data(PIPE_UART_OVER_BTLE_UART_TX_TX, buffer, buffer_len);
-        if (status) {
-            aci_state.data_credit_available--;
-        }
-    }
-
-    return status;
-}
-
-bool
-uart_process_control_point_rx(uint8_t* byte, uint8_t length)
-{
-    bool status = false;
-    aci_ll_conn_params_t* conn_params;
-
-    if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_TX)) {
-        switch (*byte) {
-            /*
-        Queues a ACI Disconnect to the nRF8001 when this packet is received.
-        May cause some of the UART packets being sent to be dropped
-        */
-            case UART_OVER_BLE_DISCONNECT:
-                /*
-          Parameters:
-          None
-          */
-                lib_aci_disconnect(&aci_state, ACI_REASON_TERMINATE);
-                status = true;
-                break;
-
-            /*
-        Queues an ACI Change Timing to the nRF8001
-        */
-            case UART_OVER_BLE_LINK_TIMING_REQ:
-                /*
-          Parameters:
-          Connection interval min: 2 bytes
-          Connection interval max: 2 bytes
-          Slave latency:           2 bytes
-          Timeout:                 2 bytes
-          Same format as Peripheral Preferred Connection Parameters (See nRFgo studio ->
-          nRF8001 Configuration -> GAP Settings
-          Refer to the ACI Change Timing Request in the nRF8001 Product Specifications
-          */
-                conn_params = (aci_ll_conn_params_t*) (byte + 1);
-                lib_aci_change_timing(conn_params->min_conn_interval,
-                                      conn_params->max_conn_interval,
-                                      conn_params->slave_latency,
-                                      conn_params->timeout_mult);
-                status = true;
-                break;
-
-            /*
-        Clears the RTS of the UART over BLE
-        */
-            case UART_OVER_BLE_TRANSMIT_STOP:
-                /*
-          Parameters:
-          None
-          */
-                uart_over_ble.uart_rts_local = false;
-                status = true;
-                break;
-
-            /*
-        Set the RTS of the UART over BLE
-        */
-            case UART_OVER_BLE_TRANSMIT_OK:
-                /*
-          Parameters:
-          None
-          */
-                uart_over_ble.uart_rts_local = true;
-                status = true;
-                break;
-        }
-    }
-
-    return status;
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    init_aci_setup();
-    init_local_interfaces(&aci_state, 10, 8, 4);
-
-    while (1) {
-        static bool setup_required = false;
-
-        // We enter the if statement only when there is a ACI event available to be
-        // processed
-        if (lib_aci_event_get(&aci_state, &aci_data)) {
-            aci_evt_t* aci_evt;
-            aci_evt = &aci_data.evt;
-            switch (aci_evt->evt_opcode) {
-                /**
-          As soon as you reset the nRF8001 you will get an ACI Device Started Event
-          */
-                case ACI_EVT_DEVICE_STARTED: {
-                    aci_state.data_credit_total = aci_evt->params.device_started.credit_available;
-                    switch (aci_evt->params.device_started.device_mode) {
-                        case ACI_DEVICE_SETUP:
-                            /**
-                  When the device is in the setup mode
-                  */
-                            printf("Evt Device Started: Setup \n");
-                            setup_required = true;
-                            break;
-
-                        case ACI_DEVICE_STANDBY:
-                            printf("Evt Device Started: Standby \n");
-                            // Looking for an iPhone by sending radio
-                            // advertisements
-                            // When an iPhone connects to us we will get an
-                            // ACI_EVT_CONNECTED
-                            // event from the nRF8001
-                            if (aci_evt->params.device_started.hw_error) {
-                                upm_delay_us(20000); // Handle the HW error
-                                                     // event correctly.
-                            } else {
-                                lib_aci_connect(0 /* in seconds : 0 means forever */,
-                                                0x0050 /* advertising interval 50ms*/);
-                                printf("Advertising started \n");
-                            }
-                            break;
-                        default:
-                            break;
-                    }
-                } break; // ACI Device Started Event
-
-                case ACI_EVT_CMD_RSP:
-                    // If an ACI command response event comes with an error -> stop
-                    if (ACI_STATUS_SUCCESS != aci_evt->params.cmd_rsp.cmd_status) {
-                        // ACI ReadDynamicData and ACI WriteDynamicData will have
-                        // status
-                        // codes of
-                        // TRANSACTION_CONTINUE and TRANSACTION_COMPLETE
-                        // all other ACI commands will have status code of
-                        // ACI_STATUS_SCUCCESS for a successful command
-                        printf("ACI_EVT_CMD_RSP \n");
-                    }
-                    if (ACI_CMD_GET_DEVICE_VERSION == aci_evt->params.cmd_rsp.cmd_opcode) {
-                        // Store the version and configuration information of the
-                        // nRF8001 in
-                        // the Hardware Revision String Characteristic
-                        lib_aci_set_local_data(&aci_state,
-                                               PIPE_DEVICE_INFORMATION_HARDWARE_REVISION_STRING_SET,
-                                               (uint8_t*) &(
-                                               aci_evt->params.cmd_rsp.params.get_device_version),
-                                               sizeof(aci_evt_cmd_rsp_params_get_device_version_t));
-                    }
-                    break;
-
-                case ACI_EVT_CONNECTED:
-                    printf("ACI_EVT_CONNECTED");
-                    uart_over_ble_init();
-                    timing_change_done = false;
-                    aci_state.data_credit_available = aci_state.data_credit_total;
-
-                    /*
-            Get the device version of the nRF8001 and store it in the Hardware Revision
-            String
-            */
-                    lib_aci_device_version();
-                    break;
-
-                case ACI_EVT_PIPE_STATUS:
-                    printf("ACI_EVT_PIPE_STATUS \n");
-                    if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_TX_TX) &&
-                        (false == timing_change_done)) {
-                        lib_aci_change_timing_GAP_PPCP(); // change the timing on
-                                                          // the link
-                        // as specified in the nRFgo
-                        // studio -> nRF8001 conf. ->
-                        // GAP.
-                        // Used to increase or decrease bandwidth
-                        timing_change_done = true;
-
-                        char hello[] = "Hello World, works";
-                        uart_tx((uint8_t*) &hello[0], strlen(hello));
-                    }
-                    break;
-
-                case ACI_EVT_TIMING:
-                    printf("Evt link connection interval changed \n");
-                    lib_aci_set_local_data(&aci_state,
-                                           PIPE_UART_OVER_BTLE_UART_LINK_TIMING_CURRENT_SET,
-                                           (uint8_t*) &(
-                                           aci_evt->params.timing.conn_rf_interval), /* Byte
-                                                                                        aligned */
-                                           PIPE_UART_OVER_BTLE_UART_LINK_TIMING_CURRENT_SET_MAX_SIZE);
-                    break;
-
-                case ACI_EVT_DISCONNECTED:
-                    printf("ACI_EVT_DISCONNECTED \n");
-                    lib_aci_connect(0 /* in seconds  : 0 means forever */,
-                                    0x0050 /* advertising interval 50ms*/);
-                    printf("Advertising started \n");
-                    break;
-
-                case ACI_EVT_DATA_RECEIVED:
-                    if (PIPE_UART_OVER_BTLE_UART_RX_RX ==
-                        aci_evt->params.data_received.rx_data.pipe_number) {
-                        for (int i = 0; i < aci_evt->len - 2; i++) {
-                            uart_buffer[i] = aci_evt->params.data_received.rx_data.aci_data[i];
-                        }
-
-                        uart_buffer_len = aci_evt->len - 2;
-                        if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_TX_TX)) {
-                        }
-                    }
-
-                    if (PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_RX ==
-                        aci_evt->params.data_received.rx_data.pipe_number) {
-                        // Subtract for Opcode and Pipe number
-                        uart_process_control_point_rx(
-                        &aci_evt->params.data_received.rx_data.aci_data[0], aci_evt->len - 2);
-                    }
-
-                    printf("Incomming data - %s\n", uart_buffer);
-                    break;
-
-                case ACI_EVT_DATA_CREDIT:
-                    printf("ACI_EVT_DATA_CREDIT \n");
-                    aci_state.data_credit_available =
-                    aci_state.data_credit_available + aci_evt->params.data_credit.credit;
-                    break;
-
-                case ACI_EVT_PIPE_ERROR:
-                    printf("ACI_EVT_PIPE_ERROR \n");
-                    // Increment the credit available as the data packet was not sent.
-                    // The pipe error also represents the Attribute protocol Error
-                    // Response sent from the peer and that should not be counted
-                    // for the credit.
-                    if (ACI_STATUS_ERROR_PEER_ATT_ERROR != aci_evt->params.pipe_error.error_code) {
-                        aci_state.data_credit_available++;
-                    }
-                    break;
-
-                case ACI_EVT_HW_ERROR:
-                    printf("ACI_EVT_HW_ERROR \n");
-                    lib_aci_connect(0 /* in seconds, 0 means forever */,
-                                    0x0050 /* advertising interval 50ms*/);
-                    printf("Advertising started \n");
-                    break;
-                default:
-                    break;
-            }
-        }
-
-        /* setup_required is set to true when the device starts up and enters setup
-    * mode.
-    * It indicates that do_aci_setup() should be called. The flag should be cleared
-    * if
-    * do_aci_setup() returns ACI_STATUS_TRANSACTION_COMPLETE.
-    */
-        if (setup_required) {
-            if (SETUP_SUCCESS == do_aci_setup(&aci_state)) {
-                setup_required = false;
-            }
-        }
-
-        upm_delay_us(100);
-    }
-
-    close_local_interfaces(&aci_state);
-
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/nrf8001-helloworld.hpp b/examples/c++/nrf8001-helloworld.hpp
deleted file mode 100644
index e9809c5..0000000
--- a/examples/c++/nrf8001-helloworld.hpp
+++ /dev/null
@@ -1,254 +0,0 @@
-#include "aci.h"
-#include "hal_platform.h"
-
-#pragma once
-
-#define SETUP_ID 0
-#define SETUP_FORMAT 2 /** nRF8001 Cx */
-#define ACI_DYNAMIC_DATA_SIZE 263
-
-/* Service: GATT - Characteristic: Service Changed - Pipe: TX_ACK */
-#define PIPE_GATT_SERVICE_CHANGED_TX_ACK          1
-#define PIPE_GATT_SERVICE_CHANGED_TX_ACK_MAX_SIZE 4
-
-/* Service: Device Information - Characteristic: Hardware Revision String - Pipe: SET */
-#define PIPE_DEVICE_INFORMATION_HARDWARE_REVISION_STRING_SET          2
-#define PIPE_DEVICE_INFORMATION_HARDWARE_REVISION_STRING_SET_MAX_SIZE 9
-
-/* Service: Device Information - Characteristic: Manufacturer Name String - Pipe: SET */
-#define PIPE_DEVICE_INFORMATION_MANUFACTURER_NAME_STRING_SET          3
-#define PIPE_DEVICE_INFORMATION_MANUFACTURER_NAME_STRING_SET_MAX_SIZE 20
-
-/* Service: Device Information - Characteristic: Model Number String - Pipe: SET */
-#define PIPE_DEVICE_INFORMATION_MODEL_NUMBER_STRING_SET          4
-#define PIPE_DEVICE_INFORMATION_MODEL_NUMBER_STRING_SET_MAX_SIZE 8
-
-/* Service: Device Information - Characteristic: Firmware Revision String - Pipe: SET */
-#define PIPE_DEVICE_INFORMATION_FIRMWARE_REVISION_STRING_SET          5
-#define PIPE_DEVICE_INFORMATION_FIRMWARE_REVISION_STRING_SET_MAX_SIZE 4
-
-/* Service: Device Information - Characteristic: PNP_ID - Pipe: SET */
-#define PIPE_DEVICE_INFORMATION_PNP_ID_SET          6
-#define PIPE_DEVICE_INFORMATION_PNP_ID_SET_MAX_SIZE 7
-
-/* Service: UART over BTLE - Characteristic: UART RX - Pipe: RX */
-#define PIPE_UART_OVER_BTLE_UART_RX_RX          7
-#define PIPE_UART_OVER_BTLE_UART_RX_RX_MAX_SIZE 20
-
-/* Service: UART over BTLE - Characteristic: UART TX - Pipe: TX */
-#define PIPE_UART_OVER_BTLE_UART_TX_TX          8
-#define PIPE_UART_OVER_BTLE_UART_TX_TX_MAX_SIZE 20
-
-/* Service: UART over BTLE - Characteristic: UART Control Point - Pipe: TX */
-#define PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_TX          9
-#define PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_TX_MAX_SIZE 9
-
-/* Service: UART over BTLE - Characteristic: UART Control Point - Pipe: RX */
-#define PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_RX          10
-#define PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_RX_MAX_SIZE 9
-
-/* Service: UART over BTLE - Characteristic: UART Link Timing Current - Pipe: SET */
-#define PIPE_UART_OVER_BTLE_UART_LINK_TIMING_CURRENT_SET          11
-#define PIPE_UART_OVER_BTLE_UART_LINK_TIMING_CURRENT_SET_MAX_SIZE 6
-
-
-#define NUMBER_OF_PIPES 11
-
-#define SERVICES_PIPE_TYPE_MAPPING_CONTENT {\
-  {ACI_STORE_LOCAL, ACI_TX_ACK},   \
-  {ACI_STORE_LOCAL, ACI_SET},   \
-  {ACI_STORE_LOCAL, ACI_SET},   \
-  {ACI_STORE_LOCAL, ACI_SET},   \
-  {ACI_STORE_LOCAL, ACI_SET},   \
-  {ACI_STORE_LOCAL, ACI_SET},   \
-  {ACI_STORE_LOCAL, ACI_RX},   \
-  {ACI_STORE_LOCAL, ACI_TX},   \
-  {ACI_STORE_LOCAL, ACI_TX},   \
-  {ACI_STORE_LOCAL, ACI_RX},   \
-  {ACI_STORE_LOCAL, ACI_SET},   \
-}
-
-#define GAP_PPCP_MAX_CONN_INT 0x12 /**< Maximum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific value requested */
-#define GAP_PPCP_MIN_CONN_INT  0xa /**< Minimum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific value requested */
-#define GAP_PPCP_SLAVE_LATENCY 0
-#define GAP_PPCP_CONN_TIMEOUT 0xa /** Connection Supervision timeout multiplier as a multiple of 10msec, 0xFFFF means no specific value requested */
-
-#define NB_SETUP_MESSAGES 30
-#define SETUP_MESSAGES_CONTENT {\
-    {0x00,\
-        {\
-            0x07,0x06,0x00,0x00,0x02,0x02,0x41,0xfe,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x0b,0x01,0x01,0x00,0x00,0x06,0x00,0x00,\
-            0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1e,0x06,0x10,0x1c,0x01,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-            0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x14,0x03,0x90,0x01,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x00,0x04,0x04,0x02,0x02,0x00,0x01,0x28,0x00,0x01,0x00,0x18,0x04,0x04,0x05,0x05,0x00,\
-            0x02,0x28,0x03,0x01,0x02,0x03,0x00,0x00,0x2a,0x04,0x04,0x14,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x1c,0x05,0x00,0x03,0x2a,0x00,0x01,0x48,0x65,0x6c,0x6c,0x6f,0x63,0x73,0x65,0x6d,0x69,\
-            0x2e,0x63,0x6f,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x38,0x05,0x05,0x00,0x04,0x28,0x03,0x01,0x02,0x05,0x00,0x01,0x2a,0x06,0x04,0x03,0x02,\
-            0x00,0x05,0x2a,0x01,0x01,0x80,0x00,0x04,0x04,0x05,0x05,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x54,0x06,0x28,0x03,0x01,0x02,0x07,0x00,0x04,0x2a,0x06,0x04,0x09,0x08,0x00,0x07,0x2a,\
-            0x04,0x01,0x0a,0x00,0x12,0x00,0x00,0x00,0x0a,0x00,0x04,0x04,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x70,0x02,0x02,0x00,0x08,0x28,0x00,0x01,0x01,0x18,0x04,0x04,0x05,0x05,0x00,0x09,0x28,\
-            0x03,0x01,0x22,0x0a,0x00,0x05,0x2a,0x26,0x04,0x05,0x04,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0x8c,0x0a,0x2a,0x05,0x01,0x00,0x00,0x00,0x00,0x46,0x14,0x03,0x02,0x00,0x0b,0x29,0x02,\
-            0x01,0x00,0x00,0x04,0x04,0x02,0x02,0x00,0x0c,0x28,0x00,0x01,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0xa8,0x0a,0x18,0x04,0x04,0x05,0x05,0x00,0x0d,0x28,0x03,0x01,0x02,0x0e,0x00,0x27,0x2a,\
-            0x04,0x04,0x09,0x01,0x00,0x0e,0x2a,0x27,0x01,0x0a,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0xc4,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x05,0x05,0x00,0x0f,0x28,0x03,0x01,0x02,\
-            0x10,0x00,0x29,0x2a,0x04,0x04,0x14,0x02,0x00,0x10,0x2a,0x29,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0xe0,0x01,0x30,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-            0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x05,0x05,0x00,0x11,0x28,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x20,0xfc,0x03,0x01,0x02,0x12,0x00,0x24,0x2a,0x04,0x04,0x08,0x02,0x00,0x12,0x2a,0x24,0x01,\
-            0x31,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x05,0x05,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0x18,0x00,0x13,0x28,0x03,0x01,0x02,0x14,0x00,0x26,0x2a,0x04,0x04,0x04,0x02,0x00,0x14,\
-            0x2a,0x26,0x01,0x33,0x34,0x00,0x00,0x04,0x04,0x05,0x05,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0x34,0x15,0x28,0x03,0x01,0x02,0x16,0x00,0x50,0x2a,0x06,0x04,0x08,0x07,0x00,0x16,0x2a,\
-            0x50,0x01,0x02,0x00,0x00,0xaa,0xaa,0xcc,0xcc,0x04,0x04,0x10,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0x50,0x10,0x00,0x17,0x28,0x00,0x01,0x9e,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,\
-            0xa3,0xb5,0x01,0x00,0x40,0x6e,0x04,0x04,0x13,0x13,0x00,0x18,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0x6c,0x28,0x03,0x01,0x04,0x19,0x00,0x9e,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,\
-            0xa3,0xb5,0x02,0x00,0x40,0x6e,0x44,0x10,0x14,0x00,0x00,0x19,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0x88,0x00,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x13,0x13,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0xa4,0x1a,0x28,0x03,0x01,0x10,0x1b,0x00,0x9e,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,\
-            0xf3,0xa3,0xb5,0x03,0x00,0x40,0x6e,0x14,0x00,0x14,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0xc0,0x1b,0x00,0x03,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x14,0x03,0x02,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0xdc,0x00,0x1c,0x29,0x02,0x01,0x00,0x00,0x04,0x04,0x13,0x13,0x00,0x1d,0x28,0x03,0x01,\
-            0x14,0x1e,0x00,0x9e,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x21,0xf8,0xf3,0xa3,0xb5,0x04,0x00,0x40,0x6e,0x54,0x10,0x09,0x00,0x00,0x1e,0x00,0x04,0x02,\
-            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x14,0x03,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x22,0x14,0x02,0x00,0x1f,0x29,0x02,0x01,0x00,0x00,0x04,0x04,0x13,0x13,0x00,0x20,0x28,0x03,\
-            0x01,0x02,0x21,0x00,0x9e,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1b,0x06,0x22,0x30,0x93,0xf3,0xa3,0xb5,0x05,0x00,0x40,0x6e,0x06,0x04,0x07,0x06,0x00,0x21,0x00,0x05,\
-            0x02,0xff,0xff,0xff,0xff,0xff,0xff,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x40,0x00,0x2a,0x05,0x01,0x00,0x04,0x04,0x00,0x0a,0x00,0x0b,0x2a,0x27,0x01,0x00,0x80,0x04,\
-            0x00,0x0e,0x00,0x00,0x2a,0x29,0x01,0x00,0x80,0x04,0x00,0x10,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x40,0x1c,0x00,0x00,0x2a,0x24,0x01,0x00,0x80,0x04,0x00,0x12,0x00,0x00,0x2a,0x26,0x01,0x00,\
-            0x80,0x04,0x00,0x14,0x00,0x00,0x2a,0x50,0x01,0x00,0x80,0x04,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x1f,0x06,0x40,0x38,0x00,0x16,0x00,0x00,0x00,0x02,0x02,0x00,0x08,0x04,0x00,0x19,0x00,0x00,0x00,0x03,\
-            0x02,0x00,0x02,0x04,0x00,0x1b,0x00,0x1c,0x00,0x04,0x02,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x13,0x06,0x40,0x54,0x0a,0x04,0x00,0x1e,0x00,0x1f,0x00,0x05,0x02,0x00,0x80,0x04,0x00,0x21,0x00,0x00,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x13,0x06,0x50,0x00,0x9e,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,0xa3,0xb5,0x00,0x00,0x40,0x6e,\
-        },\
-    },\
-    {0x00,\
-        {\
-            0x06,0x06,0xf0,0x00,0x02,0xb2,0xd1,\
-        },\
-    },\
-}
diff --git a/examples/c++/nunchuck.cxx b/examples/c++/nunchuck.cxx
deleted file mode 100644
index 968e1f6..0000000
--- a/examples/c++/nunchuck.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "nunchuck.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a nunchuck controller bus 3
-    upm::NUNCHUCK nunchuck(3);
-
-    while (shouldRun) {
-        nunchuck.update();
-
-        cout << "stickX: " << nunchuck.stickX << ", stickY: " << nunchuck.stickY << endl;
-        cout << "accelX: " << nunchuck.accelX << ", accelY: " << nunchuck.accelY
-             << ", accelZ: " << nunchuck.accelZ << endl;
-
-        cout << "button C: " << ((nunchuck.buttonC) ? "pressed" : "not pressed") << endl;
-        cout << "button Z: " << ((nunchuck.buttonZ) ? "pressed" : "not pressed") << endl;
-        cout << endl;
-
-        upm_delay_us(100000);
-    }
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/o2.cxx b/examples/c++/o2.cxx
deleted file mode 100644
index c82f2fd..0000000
--- a/examples/c++/o2.cxx
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "o2.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the O2 Oxygen Concentration Sensor Module
-    // Instantiate a O2 on analog pin A0
-    upm::O2 O2(0);
-    while (shouldRun) {
-        cout << "The output voltage is: " << O2.voltageValue() << "mV" << endl;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-    return 0;
-}
diff --git a/examples/c++/otp538u.cxx b/examples/c++/otp538u.cxx
deleted file mode 100644
index efaefe0..0000000
--- a/examples/c++/otp538u.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iomanip>
-#include <iostream>
-#include <signal.h>
-#include <stdexcept>
-#include <string>
-
-#include "otp538u.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-// analog voltage, usually 3.3 or 5.0
-#define OTP538U_AREF 5.0
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a OTP538U on analog pins A0 and A1
-    // A0 is used for the Ambient Temperature and A1 is used for the
-    // Object temperature.
-    upm::OTP538U temps(0, 1, OTP538U_AREF);
-
-    // enable debugging if you would like
-    // temps.setDebug(true);
-
-    // Output ambient and object temperatures
-    while (shouldRun) {
-        try {
-            cout << "Ambient temp: " << std::fixed << setprecision(2) << temps.ambientTemperature()
-                 << " C, Object temp: " << temps.objectTemperature() << " C" << endl;
-        } catch (std::out_of_range& e) {
-            cerr << "Temperature(s) are out of range: " << e.what() << endl;
-        }
-
-        cout << endl;
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ozw-aeotecdsb09104.cxx b/examples/c++/ozw-aeotecdsb09104.cxx
deleted file mode 100644
index 8d8110d..0000000
--- a/examples/c++/ozw-aeotecdsb09104.cxx
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "aeotecdsb09104.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyACM0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    // Instantiate an Aeotec DSB09104 instance, on device node 12.  You
-    // will almost certainly need to change this to reflect your own
-    // network.  Use the ozwdump example to see what nodes are
-    // available.
-    upm::AeotecDSB09104 sensor(12);
-
-    // The first thing to do is create options, then lock them when done.
-    sensor.optionsCreate();
-    sensor.optionsLock();
-
-    // Next, initialize it.
-    cout << "Initializing, this may take awhile depending on your ZWave network" << endl;
-
-    sensor.init(defaultDev);
-    cout << "Initialization complete" << endl;
-
-    cout << "Querying data..." << endl;
-    while (shouldRun) {
-        sensor.update();
-
-        cout << "Watts, Channel 1: " << sensor.getWattsC1() << " W" << endl;
-
-        cout << "Watts, Channel 2: " << sensor.getWattsC2() << " W" << endl;
-
-        cout << "Watts, Channel 3: " << sensor.getWattsC3() << " W" << endl;
-
-        cout << "Energy, Channel 1: " << sensor.getEnergyC1() << " kWh" << endl;
-
-        cout << "Energy, Channel 2: " << sensor.getEnergyC2() << " kWh" << endl;
-
-        cout << "Energy, Channel 3: " << sensor.getEnergyC3() << " kWh" << endl;
-
-        cout << "Battery Level: " << sensor.getBatteryLevel() << "%" << endl;
-
-        cout << endl;
-
-        upm_delay(3);
-    }
-
-    //  sensor.dumpNodes(true);
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/ozw-aeotecdw2e.cxx b/examples/c++/ozw-aeotecdw2e.cxx
deleted file mode 100644
index 0f7ee3c..0000000
--- a/examples/c++/ozw-aeotecdw2e.cxx
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "aeotecdw2e.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyACM0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    // Instantiate an Aeotec Door/Window 2nd Edition sensor instance, on
-    // device node 10.  You will almost certainly need to change this to
-    // reflect your own network.  Use the ozwdump example to see what
-    // nodes are available.
-    upm::AeotecDW2E sensor(10);
-
-    // The first thing to do is create options, then lock them when done.
-    sensor.optionsCreate();
-    sensor.optionsLock();
-
-    // Next, initialize it.
-    cout << "Initializing, this may take awhile depending on your ZWave network" << endl;
-
-    sensor.init(defaultDev);
-    cout << "Initialization complete" << endl;
-
-    cout << "Querying data..." << endl;
-    while (shouldRun) {
-        if (sensor.isDeviceAvailable()) {
-            cout << "Alarm status: " << sensor.isAlarmTripped() << endl;
-
-            cout << "Tamper Switch status: " << sensor.isTamperTripped() << endl;
-
-            cout << "Battery Level: " << sensor.getBatteryLevel() << "%" << endl;
-            cout << endl;
-        } else {
-            cout << "Device has not yet responded to probe." << endl;
-
-            cout << "Try waking it, or wait until it wakes itself if configured"
-                 << " to do so." << endl;
-            cout << endl;
-        }
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ozw-aeotecsdg2.cxx b/examples/c++/ozw-aeotecsdg2.cxx
deleted file mode 100644
index 679c89d..0000000
--- a/examples/c++/ozw-aeotecsdg2.cxx
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "aeotecsdg2.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyACM0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    // Instantiate an Aeotec Smart Dimmer Gen2 instance, on device node
-    // 9.  You will almost certainly need to change this to reflect your
-    // own network.  Use the ozwdump example to see what nodes are
-    // available.
-    upm::AeotecSDG2 sensor(9);
-
-    // The first thing to do is create options, then lock them when done.
-    sensor.optionsCreate();
-    sensor.optionsLock();
-
-    // Next, initialize it.
-    cout << "Initializing, this may take awhile depending on your ZWave network" << endl;
-
-    sensor.init(defaultDev);
-    cout << "Initialization complete" << endl;
-
-    // turn light on
-    cout << "Turning switch on, then upm_delaying for 5 secs" << endl;
-    sensor.on();
-    upm_delay(5);
-
-    cout << "Querying data..." << endl;
-    bool dim = false;
-    while (shouldRun) {
-        // put on a light show...
-        if (dim)
-            sensor.setLevel(25);
-        else
-            sensor.on();
-
-        dim = !dim;
-
-        sensor.update();
-
-        cout << "Current Level: " << sensor.getLevel() << endl;
-
-        cout << "Volts: " << sensor.getVolts() << " volts" << endl;
-
-        cout << "Energy Consumption: " << sensor.getEnergy() << " kWh" << endl;
-
-        cout << "Watts: " << sensor.getWatts() << endl;
-
-        cout << "Current: " << sensor.getCurrent() << " amps" << endl;
-
-        cout << endl;
-
-        upm_delay(5);
-    }
-
-    cout << "Turning switch off and upm_delaying for 5 seconds..." << endl;
-    sensor.off();
-    upm_delay(5);
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ozw-aeotecss6.cxx b/examples/c++/ozw-aeotecss6.cxx
deleted file mode 100644
index cff91ef..0000000
--- a/examples/c++/ozw-aeotecss6.cxx
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "aeotecss6.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyACM0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    // Instantiate an Aeotec SS6 instance, on device node 11.  You will
-    // almost certainly need to change this to reflect your own network.
-    // Use the ozwdump example to see what nodes are available.
-    upm::AeotecSS6 sensor(11);
-
-    // The first thing to do is create options, then lock them when done.
-    sensor.optionsCreate();
-    sensor.optionsLock();
-
-    // Next, initialize it.
-    cout << "Initializing, this may take awhile depending on your ZWave network" << endl;
-
-    sensor.init(defaultDev);
-    cout << "Initialization complete" << endl;
-
-    // turn light on
-    cout << "Turning switch on, then upm_delaying for 5 secs" << endl;
-    sensor.on();
-    upm_delay(5);
-
-    cout << "Querying data..." << endl;
-    while (shouldRun) {
-        sensor.update();
-
-        cout << "Switch status: " << sensor.isOn() << endl;
-
-        cout << "Volts: " << sensor.getVolts() << " volts" << endl;
-
-        cout << "Energy Consumption: " << sensor.getEnergy() << " kWh" << endl;
-
-        cout << "Watts: " << sensor.getWatts() << endl;
-
-        cout << "Current: " << sensor.getCurrent() << " amps" << endl;
-
-        cout << endl;
-
-        upm_delay(3);
-    }
-
-    cout << "Turning switch off and upm_delaying for 5 seconds..." << endl;
-    sensor.off();
-    upm_delay(5);
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ozw-ozwdump.cxx b/examples/c++/ozw-ozwdump.cxx
deleted file mode 100644
index 574cbe4..0000000
--- a/examples/c++/ozw-ozwdump.cxx
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015-2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "ozwdump.hpp"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyACM0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    // Instantiate an OZWDUMP instance
-    upm::OZWDUMP sensor;
-
-    // The first thing to do is create options, then lock them when done.
-    sensor.optionsCreate();
-    sensor.optionsLock();
-
-    // Next, initialize it.
-    cout << "Initializing, this may take awhile depending on your ZWave network" << endl;
-
-    sensor.init(defaultDev);
-    cout << "Initialization complete" << endl;
-
-    cout << "Dumping nodes..." << endl;
-
-    sensor.dumpNodes(true);
-
-    // The following is example output of dumpNodes:
-    //
-    // Dumping nodes...
-    // Node 1: Z-Stick Gen5
-    // Node 2: Smart Switch 6
-    //    Index:  0, Type: bool, Label: Switch, Value: False
-    //    Index:  2, Type: float, Label: Energy, Value: 1.190 kWh
-    //    Index:  3, Type: float, Label: Previous Reading, Value: 1.190 kWh
-    //    Index:  4, Type: int32, Label: Interval, Value: 1521 seconds
-    //    Index:  5, Type: float, Label: Power, Value: 0.000 W
-    //    Index:  6, Type: float, Label: Voltage, Value: 121.256 V
-    //    Index:  7, Type: float, Label: Current, Value: 0.000 A
-    //    Index:  8, Type: bool, Label: Exporting, Value: False
-    //    Index: 45, Type: list, Label: Day, Value: Friday
-    //    Index: 46, Type: byte, Label: Hour, Value: 5
-    //    Index: 47, Type: byte, Label: Minute, Value: 53
-    // Node 3: Multi Sensor
-    //    Index:  0, Type: bool, Label: Sensor, Value: True
-    //    Index:  1, Type: float, Label: Temperature, Value: 72.8 F
-    //    Index:  2, Type: float, Label: Luminance, Value: 4 lux
-    //    Index:  3, Type: float, Label: Relative Humidity, Value: 22 %
-    //    Index: 17, Type: byte, Label: Battery Level, Value: 98 %
-    // Node 5: Minimote
-    // Node 6: Smart Energy Switch
-    //    Index:  0, Type: bool, Label: Switch, Value: False
-    //    Index:  2, Type: float, Label: Power, Value: 0.000 W
-    //    Index:  3, Type: float, Label: Energy, Value: 1.609 kWh
-    //    Index:  4, Type: float, Label: Previous Reading, Value: 1.609 kWh
-    //    Index:  5, Type: int32, Label: Interval, Value: 1521 seconds
-    //    Index:  6, Type: float, Label: Power, Value: 0.000 W
-    //    Index:  7, Type: float, Label: Previous Reading, Value: 1.609 W
-    //    Index:  8, Type: int32, Label: Interval, Value: 1521 seconds
-    //    Index:  9, Type: bool, Label: Exporting, Value: False
-    // Node 7: Smart Energy Switch
-    //    Index:  0, Type: bool, Label: Switch, Value: False
-    //    Index:  2, Type: float, Label: Power, Value: 0.000 W
-    //    Index:  3, Type: float, Label: Energy, Value: 0.000 kWh
-    //    Index:  4, Type: float, Label: Previous Reading, Value: 0.000 kWh
-    //    Index:  5, Type: int32, Label: Interval, Value: 1521 seconds
-    //    Index:  6, Type: float, Label: Power, Value: 0.000 W
-    //    Index:  7, Type: float, Label: Previous Reading, Value: 0.000 W
-    //    Index:  8, Type: int32, Label: Interval, Value: 1521 seconds
-    //    Index:  9, Type: bool, Label: Exporting, Value: False
-    //
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ozw-tzemt400.cxx b/examples/c++/ozw-tzemt400.cxx
deleted file mode 100644
index b89d245..0000000
--- a/examples/c++/ozw-tzemt400.cxx
+++ /dev/null
@@ -1,102 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "tzemt400.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyACM0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    // Instantiate a TZEMT400 instance, on device node 13.  You will
-    // almost certainly need to change this to reflect your own network.
-    // Use the ozwdump example to see what nodes are available.
-    upm::TZEMT400 sensor(13);
-
-    // The first thing to do is create options, then lock them when done.
-    sensor.optionsCreate();
-    sensor.optionsLock();
-
-    // Next, initialize it.
-    cout << "Initializing, this may take awhile depending on your ZWave network" << endl;
-
-    sensor.init(defaultDev);
-    cout << "Initialization complete" << endl;
-
-    cout << "Querying data..." << endl;
-    while (shouldRun) {
-        sensor.update();
-
-        // we show both C and F for temperatures
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << "Mode: " << sensor.getMode() << endl;
-
-        cout << "Operating State: " << sensor.getOperatingState() << endl;
-
-        cout << "Heating Point: " << sensor.getHeatingPointTemperature() << " C / "
-             << sensor.getHeatingPointTemperature(true) << " F" << endl;
-
-        cout << "Cooling Point: " << sensor.getCoolingPointTemperature() << " C / "
-             << sensor.getCoolingPointTemperature(true) << " F" << endl;
-
-        cout << "Fan Mode: " << sensor.getFanMode() << endl;
-
-        cout << "Fan State: " << sensor.getFanState() << endl;
-
-        cout << endl;
-
-        upm_delay(5);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/p9813.cxx b/examples/c++/p9813.cxx
deleted file mode 100644
index 1442c1b..0000000
--- a/examples/c++/p9813.cxx
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Sergey Kiselev <sergey.kiselev@intel.com>
- * Copyright (c) 2017 Sergey Kiselev
- * Based on the p9813 driver writen by Yannick Adam <yannick.adam@gmail.com>
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "p9813.hpp"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a chain of 2 LEDs using pin 2 for clock and pin 3 for data
-    upm::P9813 ledChain(2, 2, 3);
-
-    // Set all LEDs to Red
-    ledChain.setAllLeds(255, 0, 0);
-
-    // Set a single LED to green
-    ledChain.setLed(1, 0, 255, 0);
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/pca9685.cxx b/examples/c++/pca9685.cxx
deleted file mode 100644
index ee85ec9..0000000
--- a/examples/c++/pca9685.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "pca9685.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an PCA9685 on I2C bus 0
-
-    upm::PCA9685 leds(PCA9685_I2C_BUS, PCA9685_DEFAULT_I2C_ADDR);
-
-    // put device to upm_delay
-    leds.setModeSleep(true);
-
-    // setup a period of 50Hz
-    leds.setPrescaleFromHz(50);
-
-    // wake device up
-    leds.setModeSleep(false);
-
-    // Setup a 50% duty cycle -- on time at 0, off time at 2048 (4096 / 2)
-    // Set for all channels
-
-    leds.ledOnTime(PCA9685_ALL_LED, 0);
-    leds.ledOffTime(PCA9685_ALL_LED, 2048);
-
-    // but, turn channel 3 full off and channel 4 full on
-
-    cout << "Turning channel 3 off, and channel 4 on." << endl;
-    cout << "All other channels will be PWM'd at a 50% duty cycle." << endl;
-
-    leds.ledFullOff(3, true);
-    leds.ledFullOn(4, true);
-
-    // now, just upm_delay for 5 seconds, reset channels 3 and 4, and exit.
-    cout << "Sleeping for 5 seconds..." << endl;
-
-    upm_delay(5);
-
-    cout << "Exiting..." << endl;
-
-    // clear the bits we set earlier
-    leds.ledFullOff(3, false);
-    leds.ledFullOn(4, false);
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/pn532-writeurl.cxx b/examples/c++/pn532-writeurl.cxx
deleted file mode 100644
index 6c15899..0000000
--- a/examples/c++/pn532-writeurl.cxx
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-#include <stdio.h>
-#include <string.h>
-
-#include "pn532.hpp"
-
-using namespace std;
-
-// the URL we want to add as an NDEF record
-// NOTE: this cannot exceed 34 characters.
-static char url[] = "iotdk.intel.com";
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate an PN532 on I2C bus 0 (default) using gpio 3 for the
-    // IRQ, and gpio 2 for the reset pin.
-
-    upm::PN532 nfc(3, 2);
-
-    if (!nfc.init())
-        cerr << "init() failed" << endl;
-
-    uint32_t vers = nfc.getFirmwareVersion();
-
-    if (vers)
-        printf("Got firmware version: 0x%08x\n", vers);
-    else {
-        printf("Could not identify PN532\n");
-        return 1;
-    }
-
-    // Now scan and identify any cards that come in range (1 for now)
-
-    // Retry forever
-    nfc.setPassiveActivationRetries(0xff);
-
-    nfc.SAMConfig();
-
-    uint8_t uidSize;
-    uint8_t uid[7];
-
-    bool foundCard = false;
-    while (!foundCard) {
-        memset(uid, 0, 7);
-        if (nfc.readPassiveTargetID(nfc.BAUD_MIFARE_ISO14443A, uid, &uidSize, 2000)) {
-            // found a card
-            printf("Found a card: UID len %d\n", uidSize);
-            printf("UID: ");
-            for (int i = 0; i < uidSize; i++)
-                printf("%02x ", uid[i]);
-            printf("\n");
-            printf("SAK: 0x%02x\n", nfc.getSAK());
-            printf("ATQA: 0x%04x\n\n", nfc.getATQA());
-            foundCard = true;
-        } else {
-            printf("Waiting for a card...\n");
-        }
-    }
-
-    if (uidSize != 7) {
-        printf("This example will only write an NDEF URI to preformatted\n");
-        printf("Mifare Ultralight or NTAG2XX tags\n");
-
-        return 1;
-    }
-
-    // 48 bytes is maximum data area on ultralight cards, so we use that
-    // as the maximum datasize here.  Obviously if you have a bigger
-    // card, you can write more data.
-    if (!nfc.ntag2xx_WriteNDEFURI(nfc.NDEF_URIPREFIX_HTTP, url, 48)) {
-        // failure
-        printf("Failed to write NDEF record tag.\n");
-        return 1;
-    }
-
-    printf("Success, URL record written to tag.\n");
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/pn532.cxx b/examples/c++/pn532.cxx
deleted file mode 100644
index b571b71..0000000
--- a/examples/c++/pn532.cxx
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-#include <string.h>
-
-#include "pn532.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an PN532 on I2C bus 0 (default) using gpio 3 for the
-    // IRQ, and gpio 2 for the reset pin.
-
-    upm::PN532 nfc(3, 2);
-
-    if (!nfc.init())
-        cerr << "init() failed" << endl;
-
-    uint32_t vers = nfc.getFirmwareVersion();
-
-    if (vers)
-        printf("Got firmware version: 0x%08x\n", vers);
-    else {
-        printf("Could not identify PN532\n");
-        return 1;
-    }
-
-    // Now scan and identify any cards that come in range (1 for now)
-
-    // Retry forever
-    nfc.setPassiveActivationRetries(0xff);
-
-    nfc.SAMConfig();
-
-    uint8_t uidSize;
-    uint8_t uid[7];
-
-    while (shouldRun) {
-        memset(uid, 0, 7);
-        if (nfc.readPassiveTargetID(nfc.BAUD_MIFARE_ISO14443A, uid, &uidSize, 2000)) {
-            // found a card
-            printf("Found a card: UID len %d\n", uidSize);
-            printf("UID: ");
-            for (int i = 0; i < uidSize; i++)
-                printf("%02x ", uid[i]);
-            printf("\n");
-            printf("SAK: 0x%02x\n", nfc.getSAK());
-            printf("ATQA: 0x%04x\n\n", nfc.getATQA());
-            upm_delay(1);
-        } else {
-            printf("Waiting for a card...\n");
-        }
-    }
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ppd42ns.cxx b/examples/c++/ppd42ns.cxx
deleted file mode 100644
index 6ff0562..0000000
--- a/examples/c++/ppd42ns.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "ppd42ns.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a dust sensor on GPIO pin D8
-    upm::PPD42NS dust(8);
-    ppd42ns_dust_data data;
-    cout << "This program will give readings every 30 seconds until "
-         << "you stop it" << endl;
-    while (shouldRun) {
-        data = dust.getData();
-        cout << "Low pulse occupancy: " << data.lowPulseOccupancy << endl;
-        cout << "Ratio: " << data.ratio << endl;
-        cout << "Concentration: " << data.concentration << endl;
-        cout << endl;
-    }
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/pulsensor.cxx b/examples/c++/pulsensor.cxx
deleted file mode 100644
index cc680e9..0000000
--- a/examples/c++/pulsensor.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <signal.h>
-#include <stdio.h>
-
-#include "pulsensor.hpp"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-
-//! [Interesting]
-class mycb : public virtual Callback
-{
-    public:
-        virtual void run(clbk_data arg)
-        {
-            printf("callback data (%d)\n", arg.is_heart_beat);
-        }
-};
-
-
-int
-main(int argc, char** argv)
-{
-    mycb cb;
-    //! [Interesting]
-    Pulsensor sensor(&cb);
-
-    sensor.start_sampler();
-    while (!doWork) {
-        upm_delay_us(5);
-    }
-    sensor.stop_sampler();
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/relay.cxx b/examples/c++/relay.cxx
deleted file mode 100644
index 53eef74..0000000
--- a/examples/c++/relay.cxx
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "relay.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    // This example uses GPIO 0
-    //! [Interesting]
-
-    // Create the relay switch object using GPIO pin 0
-    upm::Relay relay(0);
-
-    // Close and then open the relay switch 3 times,
-    // waiting one second each time.  The LED on the relay switch
-    // will light up when the switch is on (closed).
-    // The switch will also make a noise between transitions.
-    for (int i = 0; i < 3; i++) {
-        relay.on();
-        if (relay.isOn())
-            std::cout << relay.name() << " is on" << std::endl;
-        upm_delay(1);
-        relay.off();
-        if (relay.isOff())
-            std::cout << relay.name() << " is off" << std::endl;
-        upm_delay(1);
-    }
-
-    // Delete the relay switch object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/rf22-client.cxx b/examples/c++/rf22-client.cxx
deleted file mode 100644
index 4de808b..0000000
--- a/examples/c++/rf22-client.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Kiveisha Yevgeniy
- * Copyright (c) 2015-2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-
-#include "rf22.hpp"
-
-bool amWorking = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        amWorking = false;
-    }
-}
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // SPI bus 0, CS pin 10, INTR pin 2
-    upm::RF22 rf22(0, 10, 2);
-
-    if (!rf22.init()) {
-        std::cout << "RF22 init failed" << std::endl;
-        return 0x1;
-    }
-
-    uint8_t data[] = "Hello World!";
-    uint8_t buf[RF22_MAX_MESSAGE_LEN];
-    uint8_t len = sizeof(buf);
-
-    signal(SIGINT, sig_handler);
-    while (amWorking) {
-        std::cout << "Sending to rf22_server" << std::endl;
-        // Send a message to rf22_server
-        rf22.send(data, sizeof(data));
-        rf22.waitPacketSent();
-        // Now wait for a reply
-
-        rf22.waitAvailableTimeout(1000000);
-
-        if (rf22.recv(buf, &len)) {
-            std::cout << "got response: " << (char*) buf << std::endl;
-        } else {
-            std::cout << "!!! NO RESPONSE !!!" << std::endl;
-        }
-    }
-
-    std::cout << "Exit 'rfm22-client'" << std::endl;
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/rf22-server.cxx b/examples/c++/rf22-server.cxx
deleted file mode 100644
index f05c1af..0000000
--- a/examples/c++/rf22-server.cxx
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Kiveisha Yevgeniy
- * Copyright (c) 2015-2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdint.h>
-
-#include "rf22.hpp"
-
-bool amWorking = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT) {
-        amWorking = false;
-    }
-}
-//! [Interesting]
-int
-main(int argc, char** argv)
-{
-    // SPI bus 0, CS pin 10, INTR pin 2
-    upm::RF22 rf22(0, 10, 2);
-
-    if (!rf22.init()) {
-        std::cout << "RF22 init failed" << std::endl;
-        return 0x1;
-    }
-
-    uint8_t buf[RF22_MAX_MESSAGE_LEN];
-    uint8_t len = sizeof(buf);
-
-    signal(SIGINT, sig_handler);
-    while (amWorking) {
-        // rf22.waitAvailable();
-        rf22.waitAvailableTimeout(500);
-
-        // Should be a message for us now
-        if (rf22.recv(buf, &len)) {
-            std::cout << "got request: " << (char*) buf << std::endl;
-
-            // Send a reply
-            uint8_t data[] = "And hello back to you";
-            rf22.send(data, sizeof(data));
-            rf22.waitPacketSent();
-        } else {
-            // Do whatever you need.
-        }
-    }
-
-    std::cout << "Exit 'rfm22-server'" << std::endl;
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/rfr359f.cxx b/examples/c++/rfr359f.cxx
deleted file mode 100644
index 2d8863d..0000000
--- a/examples/c++/rfr359f.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "rfr359f.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an RFR359F digital pin D2
-    // This was tested on the Grove IR Distance Interrupter
-
-    upm::RFR359F dInterruptor(2);
-
-    // The range appears to be about 4 inches, depending on adjustment
-    while (shouldRun) {
-        if (dInterruptor.objectDetected())
-            cout << "Object detected" << endl;
-        else
-            cout << "Area is clear" << endl;
-
-        upm_delay_us(100000); // 100ms
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/rgbringcoder.cxx b/examples/c++/rgbringcoder.cxx
deleted file mode 100644
index 9d74427..0000000
--- a/examples/c++/rgbringcoder.cxx
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "rgbringcoder.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // There are a lot of pins to hook up.  These pins are valid for the
-    // Edison board, but may need to be adjusted for other platforms.
-
-    // In order:
-    // enable      - 4
-    // latch       - 10
-    // clear       - 11
-    // clock       - 2
-    // data        - 9
-    // switch      - 7
-
-    // red pwm     - 3
-    // green pwm   - 5
-    // blue pwm    - 6
-
-    // encA        - 12
-    // encB        - 13
-
-    upm::RGBRingCoder ringCoder(4, 10, 11, 2, 9, 7, 12, 13, 3, 5, 6);
-
-    uint16_t spin = 0x0001;
-    bool oldState = false;
-    int oldPos = 0;
-
-    // Lets go green
-    ringCoder.setRGBLED(0.99, 0.01, 0.99);
-
-    while (shouldRun) {
-        // you spin me round...
-        if (spin == 0)
-            spin = 0x0001;
-
-        ringCoder.setRingLEDS(spin);
-        spin <<= 1;
-
-        // check button state
-        bool bstate = ringCoder.getButtonState();
-        if (bstate != oldState) {
-            cout << "Button state changed from " << oldState << " to " << bstate << endl;
-            oldState = bstate;
-        }
-
-        // check encoder position
-        int epos = ringCoder.getEncoderPosition();
-        if (epos != oldPos) {
-            cout << "Encoder position changed from " << oldPos << " to " << epos << endl;
-            oldPos = epos;
-        }
-
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/rhusb.cxx b/examples/c++/rhusb.cxx
deleted file mode 100644
index 88955e5..0000000
--- a/examples/c++/rhusb.cxx
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "rhusb.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyUSB0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device " << defaultDev << endl;
-    cout << "Initializing..." << endl;
-
-    // Instantiate an RHUSB instance on defaultDev
-    upm::RHUSB sensor(defaultDev);
-
-    // output the firmware ID
-    cout << "Firmware ID: " << sensor.getFirmwareID() << endl;
-    cout << endl;
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << "Humidity: " << sensor.getHumidity() << " %" << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/rn2903-p2p-rx.cxx b/examples/c++/rn2903-p2p-rx.cxx
deleted file mode 100644
index 0e0f290..0000000
--- a/examples/c++/rn2903-p2p-rx.cxx
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "rn2903.hpp"
-#include "rn2903_defs.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyUSB0";
-    if (argc > 1)
-        defaultDev = argv[1];
-
-    cout << "Using device: " << defaultDev << endl;
-
-    // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-    upm::RN2903 sensor(defaultDev, RN2903_DEFAULT_BAUDRATE);
-
-    // To use an internal UART understood by MRAA, use the following
-    // to inititialize rather than the above, which by default uses a
-    // tty path.
-    //
-    //     upm::RN2903 sensor = upm::RN2903(0, RN2903_DEFAULT_BAUDRATE);
-
-    // enable debugging
-    // sensor.setDebug(true);
-
-    // get version
-    if (sensor.command("sys get ver")) {
-        cout << "Failed to retrieve device version string" << endl;
-        return 1;
-    }
-    cout << "Firmware version: " << sensor.getResponse() << endl;
-
-    cout << "Hardware EUI: " << sensor.getHardwareEUI() << endl;
-
-    // For this example, we will just try to receive a packet
-    // transmitted by the p2p-tx rn2903 example.  We reset the
-    // device to defaults, and we do not make any adjustments to the
-    // radio configuration.  You will probably want to do so for a
-    // real life application.
-
-    // The first thing to do is to suspend the LoRaWAN stack on the device.
-    sensor.macPause();
-
-    // We will use continuous mode (window_size 0), though the default
-    // radio watch dog timer will expire every 15 seconds.  We will
-    // just loop here.
-
-    while (shouldRun) {
-        cout << "Waiting for packet..." << endl;
-        RN2903_RESPONSE_T rv;
-        rv = sensor.radioRx(0);
-        if (rv) {
-            cout << "radioRx() failed with code " << int(rv) << endl;
-        } else {
-            string resp = sensor.getResponse();
-            string payload = sensor.getRadioRxPayload();
-            if (!payload.size())
-                cout << "Got response: '" << resp << "'" << endl;
-            else
-                cout << "Got payload: '" << sensor.fromHex(payload) << "'" << endl;
-        }
-
-        cout << endl;
-    }
-
-    cout << "Exiting" << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/rn2903-p2p-tx.cxx b/examples/c++/rn2903-p2p-tx.cxx
deleted file mode 100644
index b7ffbfd..0000000
--- a/examples/c++/rn2903-p2p-tx.cxx
+++ /dev/null
@@ -1,120 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <sstream>
-#include <string>
-
-#include "rn2903.hpp"
-#include "rn2903_defs.h"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyUSB0";
-    if (argc > 1)
-        defaultDev = argv[1];
-
-    cout << "Using device: " << defaultDev << endl;
-
-    // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-    upm::RN2903 sensor(defaultDev, RN2903_DEFAULT_BAUDRATE);
-
-    // To use an internal UART understood by MRAA, use the following
-    // to inititialize rather than the above, which by default uses a
-    // tty path.
-    //
-    // upm::RN2903 sensor = upm::RN2903(0, RN2903_DEFAULT_BAUDRATE);
-
-    // enable debugging
-    // sensor.setDebug(true);
-
-    // get version
-    if (sensor.command("sys get ver")) {
-        cout << "Failed to retrieve device version string" << endl;
-        return 1;
-    }
-    cout << "Firmware version: " << sensor.getResponse() << endl;
-
-    cout << "Hardware EUI: " << sensor.getHardwareEUI() << endl;
-
-    // For this example, we will just try transmitting a packet over
-    // LoRa.  We reset the device to defaults, and we do not make any
-    // adjustments to the radio configuration.  You will probably want
-    // to do so for a real life application.
-
-    // The first thing to do is to suspend the LoRaWAN stack on the device.
-    sensor.macPause();
-
-    // the default radio watchdog timer is set for 15 seconds, so we
-    // will send a packet every 10 seconds.  In reality, local
-    // restrictions limit the amount of time on the air, so in a real
-    // implementation, you would not want to send packets that
-    // frequently.
-
-    int count = 0;
-    while (shouldRun) {
-        std::ostringstream output;
-        output << "Ping " << count++;
-
-        // All payloads must be hex encoded
-        string payload = sensor.toHex(output.str());
-
-        cout << "Transmitting a packet, data: '" << output.str() << "' -> hex: '" << payload << "'"
-             << endl;
-
-        RN2903_RESPONSE_T rv;
-        rv = sensor.radioTx(payload);
-
-        if (rv == RN2903_RESPONSE_OK)
-            cout << "Transmit successful." << endl;
-        else
-            cout << "Transmit failed with code " << int(rv) << endl;
-
-        cout << endl;
-        upm_delay(10);
-    }
-
-    cout << "Exiting" << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/rn2903.cxx b/examples/c++/rn2903.cxx
deleted file mode 100644
index 086bc6a..0000000
--- a/examples/c++/rn2903.cxx
+++ /dev/null
@@ -1,127 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "rn2903.hpp"
-#include "rn2903_defs.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyUSB0";
-    if (argc > 1)
-        defaultDev = argv[1];
-
-    cout << "Using device: " << defaultDev << endl;
-
-    // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-    upm::RN2903 sensor(defaultDev, RN2903_DEFAULT_BAUDRATE);
-
-    // To use an internal UART understood by MRAA, use the following
-    // to inititialize rather than the above, which by default uses a
-    // tty path.
-    //
-    // upm::RN2903 sensor = upm::RN2903(0, RN2903_DEFAULT_BAUDRATE);
-
-    // enable debugging
-    // sensor.setDebug(true);
-
-    // get version
-    if (sensor.command("sys get ver")) {
-        cout << "Failed to retrieve device version string" << endl;
-        return 1;
-    }
-    cout << "Firmware version: " << sensor.getResponse() << endl;
-
-    cout << "Hardware EUI: " << sensor.getHardwareEUI() << endl;
-
-    // we can support two types of join, OTAA and ABP. Each requires
-    // that certain parameters be set first.  We will only attempt ABP
-    // joining with this example since it's the only one that can
-    // succeed without actual configuration.  In both cases, if you
-    // are actually attempting to join a real LoRaWAN network, you
-    // must change the parameters below to match the network you are
-    // attempting to join.
-
-    // For OTAA, you need to supply valid Device EUI, Application EUI,
-    // and Application key:
-    //
-    // sensor.setDeviceEUI("0011223344556677");
-    // sensor.setApplicationEUI("0011223344556677");
-    // sensor.setApplicationKey("01234567012345670123456701234567");
-    //
-    // RN2903_JOIN_STATUS_T rv = sensor.join(RN2903_JOIN_TYPE_OTAA);
-    // A successful join will return RN2903_JOIN_STATUS_ACCEPTED (0).
-    // cout << "JOIN: got rv " << int(rv) << endl;
-
-    // Try an ABP join.  Note, these parameters are made up.  For a
-    // real network, you will want to use the correct values
-    // obviously.  For an ABP join, you need to supply the Device
-    // Address, Network Session Key, and the Application Session Key.
-
-    sensor.setDeviceAddr("00112233");
-    sensor.setNetworkSessionKey("00112233001122330011223300112233");
-    sensor.setApplicationSessionKey("00112233001122330011223300112233");
-
-    RN2903_JOIN_STATUS_T rv = sensor.join(RN2903_JOIN_TYPE_ABP);
-    if (rv == RN2903_JOIN_STATUS_ACCEPTED) {
-        cout << "Join successful." << endl;
-
-        // All transmit payloads must be hex encoded strings, so
-        // pretend we have a temperature sensor that gave us a value
-        // of 25.6 C, and we want to transmit it.
-        string faketemp = "25.6";
-        cout << "Transmitting a packet..." << endl;
-
-        RN2903_MAC_TX_STATUS_T trv;
-        trv = sensor.macTx(RN2903_MAC_MSG_TYPE_UNCONFIRMED,
-                           1, // port number
-                           sensor.toHex(faketemp));
-
-        if (trv == RN2903_MAC_TX_STATUS_TX_OK)
-            cout << "Transmit successful." << endl;
-        else {
-            // check to see if we got a downlink packet
-            if (trv == RN2903_MAC_TX_STATUS_RX_RECEIVED) {
-                cout << "Transmit successful, downlink packet received: " << sensor.getResponse();
-            } else {
-                cout << "Transmit failed with code " << int(trv) << endl;
-            }
-        }
-    } else {
-        cout << "Join failed with code " << int(rv) << endl;
-    }
-
-    cout << "Exiting" << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/rotary.cxx b/examples/c++/rotary.cxx
deleted file mode 100644
index 417fc07..0000000
--- a/examples/c++/rotary.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-#include <stdio.h>
-
-#include "rotary.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-    // Instantiate a rotary sensor on analog pin A0
-    upm::Rotary knob(0);
-
-    // Print sensor name to confirm it initialized properly
-    cout << knob.name() << endl;
-
-    while (true) {
-        float abs_value = knob.abs_value(); // Absolute raw value
-        float abs_deg = knob.abs_deg();     // Absolute degrees
-        float abs_rad = knob.abs_rad();     // Absolute radians
-        float rel_value = knob.rel_value(); // Relative raw value
-        float rel_deg = knob.rel_deg();     // Relative degrees
-        float rel_rad = knob.rel_rad();     // Relative radians
-
-        fprintf(stdout,
-                "Absolute: %4d raw %5.2f deg = %3.2f rad Relative: %4d raw %5.2f "
-                "deg %3.2f rad\n",
-                (int16_t) abs_value,
-                abs_deg,
-                abs_rad,
-                (int16_t) rel_value,
-                rel_deg,
-                rel_rad);
-
-        upm_delay_us(2500000); // Sleep for 2.5s
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/rotaryencoder.cxx b/examples/c++/rotaryencoder.cxx
deleted file mode 100644
index 3f56666..0000000
--- a/examples/c++/rotaryencoder.cxx
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "rotaryencoder.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Rotary Encoder, using signal pins D2 and D3
-    upm::RotaryEncoder rotaryencoder(2, 3);
-
-    while (shouldRun) {
-        cout << "Position: " << rotaryencoder.position() << endl;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/rpr220-intr.cxx b/examples/c++/rpr220-intr.cxx
deleted file mode 100644
index 79c499c..0000000
--- a/examples/c++/rpr220-intr.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stddef.h>
-
-#include "rpr220.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-volatile unsigned int counter = 0;
-
-// Our interrupt handler
-void
-rprISR(void* arg)
-{
-    counter++;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // This example uses an interrupt handler to increment a counter
-
-    // Instantiate an RPR220 digital pin D2
-    // This was tested on the Grove IR Reflective Sensor
-
-    upm::RPR220 rpr220(2);
-
-    // Here, we setup our Interupt Service Routine (ISR) to count
-    // 'black' pulses detected.
-
-    rpr220.installISR(rprISR, NULL);
-
-    while (shouldRun) {
-        cout << "Counter: " << counter << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/rpr220.cxx b/examples/c++/rpr220.cxx
deleted file mode 100644
index 1912d72..0000000
--- a/examples/c++/rpr220.cxx
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "rpr220.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // This example uses a simple method to determine current status
-
-    // Instantiate an RPR220 digital pin D2
-    // This was tested on the Grove IR Reflective Sensor
-
-    upm::RPR220 rpr220(2);
-
-    while (shouldRun) {
-        if (rpr220.blackDetected())
-            cout << "Black detected" << endl;
-        else
-            cout << "Black NOT detected" << endl;
-
-        upm_delay_us(100000); // 100ms
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/rsc.cxx b/examples/c++/rsc.cxx
deleted file mode 100644
index 152e70b..0000000
--- a/examples/c++/rsc.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "rsc.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    upm::RSC rsc(0, 9, 8);
-
-    cout << "Sensor Name: " << rsc.getSensorName() << endl;
-    rsc.setMode(NORMAL_MODE);
-    rsc.setDataRate(N_DR_330_SPS);
-    while (shouldRun) {
-        cout << "inH2O pressure: " << rsc.getPressure() << endl;
-        cout << "Temp (C): " << rsc.getTemperature() << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/scam.cxx b/examples/c++/scam.cxx
deleted file mode 100644
index d088a1f..0000000
--- a/examples/c++/scam.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "scam.hpp"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Instantiate a Serial Camera on UART 0
-    upm::SCAM camera(0);
-
-    // make sure port is initialized properly.  115200 baud is the default.
-    if (!camera.setupTty()) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    if (camera.init())
-        cout << "Initialized..." << endl;
-    else
-        cout << "init() failed" << endl;
-
-    if (camera.preCapture())
-        cout << "preCapture succeeded..." << endl;
-    else
-        cout << "preCapture failed." << endl;
-
-    if (camera.doCapture())
-        cout << "doCapture succeeded..." << endl;
-    else
-        cout << "doCapture failed." << endl;
-
-    cout << "Image size is " << camera.getImageSize() << " bytes" << endl;
-
-    if (camera.getImageSize() > 0) {
-        cout << "Storing image.jpg..." << endl;
-        if (camera.storeImage("image.jpg"))
-            cout << "storeImage succeeded..." << endl;
-        else
-            cout << "storeImage failed." << endl;
-    }
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/sensortemplate.cxx b/examples/c++/sensortemplate.cxx
deleted file mode 100644
index 15e5ccf..0000000
--- a/examples/c++/sensortemplate.cxx
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * The MIT License (MIT)
- *
- * Author: Your Full Name <your@email.address>
- * Copyright (c) <year> <copyright holder>
- *
- * Permission is hereby granted, free of charge, to any person obtaining a copy
- * of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
- * of
- * the Software, and to permit persons to whom the Software is furnished to do
- * so,
- * subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all
- * copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
- * OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
- * WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "sensortemplate.hpp"
-#include "upm_utilities.h"
-
-int
-main()
-{
-    //! [Interesting]
-    // Create an instance of SensorTemplate
-    upm::SensorTemplate sensor(0);
-
-    while (true) {
-        std::cout << "SensorTemplate says: " << sensor.helloWorld() << std::endl;
-
-        // Repeat every 2 seconds
-        upm_delay_us(2000000);
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/servo-es08a.cxx b/examples/c++/servo-es08a.cxx
deleted file mode 100644
index 6790759..0000000
--- a/examples/c++/servo-es08a.cxx
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "es08a.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::ES08A servo(5);
-
-    // Sets the shaft to 180, then to 90, then to 0,
-    // then back to 90, and finally back to 180,
-    // pausing for a second in between each angle
-    servo.setAngle(180);
-    std::cout << "Set angle to 180" << std::endl;
-    upm_delay(1);
-    servo.setAngle(90);
-    std::cout << "Set angle to 90" << std::endl;
-    upm_delay(1);
-    servo.setAngle(0);
-    std::cout << "Set angle to 0" << std::endl;
-    upm_delay(1);
-    servo.setAngle(90);
-    std::cout << "Set angle to 90" << std::endl;
-    upm_delay(1);
-    servo.setAngle(180);
-    std::cout << "Set angle to 180" << std::endl;
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/sht1x.cxx b/examples/c++/sht1x.cxx
deleted file mode 100644
index 35982bc..0000000
--- a/examples/c++/sht1x.cxx
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "sht1x.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a SHT1X sensor using D2 as the clock, and D3 as the
-    // data pin.
-    upm::SHT1X sensor(2, 3);
-
-    // Every 2 seconds, update and print values
-    while (shouldRun) {
-        sensor.update();
-
-        cout << "Temperature: " << sensor.getTemperature() << " C" << endl;
-
-        cout << "Humidity:    " << sensor.getHumidity() << " RH" << endl;
-
-        cout << endl;
-
-        upm_delay(2);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/si1132.cxx b/examples/c++/si1132.cxx
deleted file mode 100644
index 59ad5cf..0000000
--- a/examples/c++/si1132.cxx
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "mraa/common.h"
-#include "si1132.hpp"
-#include "upm_utilities.h"
-
-#define FT4222_I2C_BUS  1
-#define DEFAULT_I2C_BUS 0
-
-int
-main()
-{
-    //! [Interesting]
-    upm::SI1132 lightSensor(DEFAULT_I2C_BUS);
-    while (true) {
-        float value = lightSensor.getVisibleLux();
-        std::cout << "Light level = " << value << " lux" << std::endl;
-        upm_delay(1);
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/si114x.cxx b/examples/c++/si114x.cxx
deleted file mode 100644
index bb2e597..0000000
--- a/examples/c++/si114x.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "si114x.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a SI114x UV Sensor on I2C bus 0
-    upm::SI114X uvi(0);
-
-    // First initialize it
-    uvi.initialize();
-
-    cout << "UV Index Scale:" << endl;
-    cout << "---------------" << endl;
-    cout << "11+        Extreme" << endl;
-    cout << "8-10       Very High" << endl;
-    cout << "6-7        High" << endl;
-    cout << "3-5        Moderate" << endl;
-    cout << "0-2        Low" << endl;
-    cout << endl;
-
-    // update every second and print the currently measured UV Index
-    while (shouldRun) {
-        // update current value(s)
-        uvi.update();
-
-        // print detected value
-        cout << "UV Index: " << uvi.getUVIndex() << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/si7005.cxx b/examples/c++/si7005.cxx
deleted file mode 100644
index 82b0ec8..0000000
--- a/examples/c++/si7005.cxx
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <exception>
-#include <iostream>
-
-#include "si7005.hpp"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-#define EDISON_GPIO_SI7005_CS 20
-
-//! [Interesting]
-int
-main()
-{
-    try {
-        upm::SI7005 sensor(EDISON_I2C_BUS, EDISON_GPIO_SI7005_CS);
-        while (true) {
-            int temperature = sensor.getTemperatureCelsius();
-            int humidity = sensor.getHumidityRelative();
-            std::cout << "Temperature = " << temperature << "C" << std::endl;
-            std::cout << "Humidity    = " << humidity << "%" << std::endl;
-            upm_delay(1);
-        }
-    } catch (std::exception& e) {
-        std::cerr << e.what() << std::endl;
-    }
-    return 0;
-}
-//! [Interesting]
diff --git a/examples/c++/slide.cxx b/examples/c++/slide.cxx
deleted file mode 100644
index 6593f9a..0000000
--- a/examples/c++/slide.cxx
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-#include <stdio.h>
-
-#include "slide.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-    upm::Slide slide(0);
-
-    cout << slide.name() << endl;
-
-    while (true) {
-        float adc_value = slide.raw_value(); // Read raw value
-        float volts = slide.voltage_value(); // Read voltage, board reference set at 5.0V
-        fprintf(stdout, "%4d = %.2f V\n", (uint16_t) adc_value, volts);
-
-        upm_delay_us(2500000); // Sleep for 2.5s
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/sm130.cxx b/examples/c++/sm130.cxx
deleted file mode 100644
index fcfcb73..0000000
--- a/examples/c++/sm130.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "sm130.hpp"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Instantiate a UART based SM130 RFID Module using defaults
-    upm::SM130 sensor;
-
-    // set the baud rate.  19200 baud is the default.
-    if (sensor.setBaudRate(19200)) {
-        cerr << "Failed to set baud rate" << endl;
-        return 1;
-    }
-
-    cout << "Resetting..." << endl;
-    sensor.reset();
-
-    cout << "Firmware revision: " << sensor.getFirmwareVersion() << endl;
-
-    cout << "Waiting up to 5 seconds for a tag..." << endl;
-
-    if (sensor.waitForTag(5000)) {
-        cout << "Found tag, UID: " << sensor.string2HexString(sensor.getUID()) << endl;
-        cout << "Tag Type: " << sensor.tag2String(sensor.getTagType()) << endl;
-    } else {
-        // error
-        cout << "waitForTag failed: " << sensor.getLastErrorString() << endl;
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-    return 0;
-}
diff --git a/examples/c++/smartdrive.cxx b/examples/c++/smartdrive.cxx
deleted file mode 100644
index 0705ab0..0000000
--- a/examples/c++/smartdrive.cxx
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * The MIT License (MIT)
- *
- * Author: Oussema Harbi <oussema.elharbi@gmail.com>
- * Copyright (c) <2016> <Oussema Harbi>
- *
- * Permission is hereby granted, free of charge, to any person obtaining a copy
- * of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
- * of
- * the Software, and to permit persons to whom the Software is furnished to do
- * so,
- * subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all
- * copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
- * OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
- * WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "smartdrive.hpp"
-#include "upm_utilities.h"
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    std::cout << "SmartDrive demo is starting. Please make sure drive is "
-                 "connected to board"
-              << std::endl;
-    upm_delay(2); // Wait for 2 seconds in case you want to fix your h/w setup
-
-    //! [Interesting]
-    // Instantiate a SmartDrive connected to /dev/i2c-0 bus, using DefaultAddress
-    upm::SmartDrive drive(0);
-
-    std::cout << "Battery Voltage before motor run : " << drive.GetBattVoltage() << std::endl;
-    // Set motor M1 to run for 120 seconds, with speed of 15RPM, waith for it to
-    // finish and then Brake It
-    drive.Run_Seconds(
-    SmartDrive_Motor_ID_1, SmartDrive_Dir_Forward, 15, 120, true, SmartDrive_Action_Brake);
-    std::cout << "Battery Voltage after motor run : " << drive.GetBattVoltage() << std::endl;
-    // Rotate motor M2 2270 degrees, in reverse sense, with speed of 10RPM, return
-    // immediately from function call
-    drive.Run_Degrees(
-    SmartDrive_Motor_ID_2, SmartDrive_Dir_Reverse, 10, 2270, false, SmartDrive_Action_Float);
-    // While motor is running, Display its status
-    drive.PrintMotorStatus(SmartDrive_Motor_ID_2);
-    upm_delay(2); // Sleep for 2 seconds
-    // Stop motor M2 and then finish program
-    drive.StopMotor(SmartDrive_Motor_ID_2, SmartDrive_Action_BrakeHold);
-    //! [Interesting]
-
-    std::cout << "Demo complete. GoodBye" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/speaker-pwm.cxx b/examples/c++/speaker-pwm.cxx
deleted file mode 100644
index f4e9d01..0000000
--- a/examples/c++/speaker-pwm.cxx
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "speaker.hpp"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-    // Instantiate a Speaker (PWM) pin D3 in PWM mode
-    upm::Speaker speaker(3, true);
-
-    // emit a series of frequencies for 500ms each
-    speaker.emit(50, 500);
-    speaker.emit(75, 500);
-    speaker.emit(125, 500);
-    speaker.emit(250, 500);
-    speaker.emit(500, 500);
-    speaker.emit(1000, 500);
-    speaker.emit(2000, 500);
-    speaker.emit(3000, 500);
-    speaker.emit(5000, 500);
-    speaker.emit(10000, 500);
-
-    cout << "Exiting" << endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/speaker.cxx b/examples/c++/speaker.cxx
deleted file mode 100644
index f30b309..0000000
--- a/examples/c++/speaker.cxx
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "speaker.hpp"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-    // Instantiate a Speaker on digital pin D2
-    upm::Speaker speaker(2);
-
-    // Play all 7 of the lowest notes
-    speaker.playAll();
-
-    // Play a medium C-sharp
-    speaker.playSound('c', true, "med");
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ssd1351.cxx b/examples/c++/ssd1351.cxx
deleted file mode 100644
index 0685125..0000000
--- a/examples/c++/ssd1351.cxx
+++ /dev/null
@@ -1,57 +0,0 @@
-#include "ssd1351.hpp"
-#include "upm_utilities.h"
-
-#define BLACK 0x0000
-#define WHITE 0xFFFF
-#define INTEL_BLUE 0x0BF8
-
-int
-main(int argc, char** argv)
-{
-    // Define colors (16-bit RGB on 5/6/5 bits)
-    int colors[] = { 0x0000, 0x000F, 0x03E0, 0x03EF, 0x7800, 0x780F, 0x7BE0, 0xC618,
-                     0x7BEF, 0x001F, 0x07E0, 0x07FF, 0xF800, 0xF81F, 0xFFE0, 0xFFFF };
-    //! [Interesting]
-    // Initialize display with pins
-    // oc = 0, dc = 1, r  = 2, si = 11, cl = 13
-    upm::SSD1351 display(0, 1, 2);
-
-    // Test lines pixel by pixel
-    for (int i = 0; i < SSD1351HEIGHT; i++) {
-        for (int j = 0; j < SSD1351WIDTH; j++) {
-            display.drawPixel(i, j, colors[i / 8]);
-        }
-    }
-    display.refresh();
-    upm_delay(5);
-
-    // Test rectangles
-    for (int i = 0; i < SSD1351HEIGHT / 32; i++) {
-        for (int j = 0; j < SSD1351WIDTH / 32; j++) {
-            display.fillRect(i * 32, j * 32, 32, 32, colors[i * 4 + j]);
-        }
-    }
-    display.refresh();
-    upm_delay(5);
-
-    // Test circles
-    display.fillScreen(0x2104);
-    for (int i = 0; i < SSD1351HEIGHT / 32; i++) {
-        for (int j = 0; j < SSD1351WIDTH / 32; j++) {
-            display.drawCircle(i * 32 + 15, j * 32 + 15, 15, colors[i * 4 + j]);
-        }
-    }
-    display.refresh();
-    upm_delay(5);
-
-    // Test Text
-    display.fillScreen(INTEL_BLUE);
-    display.setTextColor(WHITE, INTEL_BLUE);
-    display.setTextSize(4);
-    display.setCursor(7, 30);
-    display.print("Intel");
-    display.setCursor(5, 70);
-    display.print("IoTDK");
-    display.refresh();
-    //! [Interesting]
-}
diff --git a/examples/c++/st7735.cxx b/examples/c++/st7735.cxx
deleted file mode 100644
index 83606b2..0000000
--- a/examples/c++/st7735.cxx
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "st7735.hpp"
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::ST7735 lcd(7, 4, 9, 8);
-    lcd.fillScreen(ST7735_RED);
-    lcd.refresh();
-
-    lcd.fillScreen(ST7735_CYAN);
-    lcd.refresh();
-
-    lcd.fillScreen(ST7735_BLACK);
-    lcd.refresh();
-
-    lcd.drawLine(10, 10, 10, 100, ST7735_MAGENTA);
-    lcd.drawLine(20, 20, 10, 100, ST7735_YELLOW);
-    lcd.drawLine(30, 30, 50, 100, ST7735_WHITE);
-    lcd.refresh();
-
-    lcd.drawPixel(20, 20, ST7735_GREEN);
-    lcd.refresh();
-
-    lcd.drawTriangle(50, 50, 80, 80, 60, 90, ST7735_GREEN);
-    lcd.refresh();
-
-    lcd.drawCircle(100, 110, 10, ST7735_BLUE);
-    lcd.refresh();
-
-    lcd.setTextWrap(0x0);
-
-    lcd.setCursor(0, 30);
-    lcd.setTextColor(ST7735_RED, ST7735_RED);
-    lcd.setTextSize(1);
-    lcd.print("Hello World!");
-
-    lcd.setCursor(10, 50);
-    lcd.setTextColor(ST7735_RED, ST7735_YELLOW);
-    lcd.setTextSize(2);
-    lcd.print("BIG");
-
-    lcd.refresh();
-
-    std::cout << "exiting application" << std::endl;
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/stepmotor.cxx b/examples/c++/stepmotor.cxx
deleted file mode 100644
index 371b61e..0000000
--- a/examples/c++/stepmotor.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Authors: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- *          Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "stepmotor.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int doWork = 1;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 0;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::StepMotor sensor(2, 3);
-
-    while (doWork) {
-        cout << "1 Revolution forward and back at 60 rpm" << endl;
-        sensor.setSpeed(60);
-        sensor.stepForward(200);
-        upm_delay_us(1000000);
-        sensor.stepBackward(200);
-        upm_delay_us(1000000);
-
-        cout << "1 Revolution forward and back at 150 rpm" << endl;
-        sensor.setSpeed(150);
-        sensor.stepForward(200);
-        upm_delay_us(1000000);
-        sensor.stepBackward(200);
-        upm_delay_us(1000000);
-
-        cout << "1 Revolution forward and back at 300 rpm" << endl;
-        sensor.setSpeed(300);
-        sensor.stepForward(200);
-        upm_delay_us(1000000);
-        sensor.stepBackward(200);
-        upm_delay_us(1000000);
-    }
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/sx1276-fsk.cxx b/examples/c++/sx1276-fsk.cxx
deleted file mode 100644
index 197bf2b..0000000
--- a/examples/c++/sx1276-fsk.cxx
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-#include <string>
-
-#include "sx1276.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-
-    cout << "Specify an argument to go into receive mode.  Default is transmit" << endl;
-
-    bool rx = false;
-    if (argc > 1)
-        rx = true;
-
-    // Instantiate an SX1276 using default parameters
-    upm::SX1276 sensor;
-
-    // 915Mhz
-    sensor.setChannel(915000000);
-
-    // FSK configuration (rx and tx must be configured the same):
-    // Tx output power = 14 dBm
-    // FSK freq deviation = 25000 Hz
-    // FSK bandwidth = 50000 bps
-    // FSK AFC bandwidth = 83333 Hz
-    // FSK datarate = 50000 bps
-    // FSK preamble len = 5
-    // FSK fixed length payload = false
-    // FSK CRC check = true
-    // FSK (rx) continuous Rx mode = false
-
-    sensor.setTxConfig(sensor.MODEM_FSK, 14, 25000, 0, 50000, 0, 5, false, true, false, 0, false);
-
-    sensor.setRxConfig(
-    sensor.MODEM_FSK, 50000, 50000, 0, 83333, 5, 0, false, 0, true, false, 0, false, true);
-
-    int count = 0;
-    int buflen = 64;
-    char buffer[buflen];
-
-    while (shouldRun) {
-        if (!rx) {
-            snprintf(buffer, buflen, "Ping %d", count++);
-            cout << "Sending..." << std::string(buffer) << endl;
-            sensor.sendStr(string(buffer), 3000);
-
-            sensor.setSleep();
-            upm_delay(1);
-        } else {
-            // receiving
-            cout << "Attempting to receive..." << endl;
-            int rv;
-            if ((rv = sensor.setRx(3000))) {
-                cout << "setRx returned " << rv << endl;
-            } else {
-                cout << "Received Buffer: " << sensor.getRxBufferStr() << endl;
-            }
-
-            // go back to upm_delay when done
-            sensor.setSleep();
-            upm_delay_us(250000);
-        }
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/sx1276-lora.cxx b/examples/c++/sx1276-lora.cxx
deleted file mode 100644
index 1585445..0000000
--- a/examples/c++/sx1276-lora.cxx
+++ /dev/null
@@ -1,109 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-#include <string>
-
-#include "sx1276.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-    cout << "Specify an argument to go into receive mode.  Default is transmit" << endl;
-
-    bool rx = false;
-    if (argc > 1)
-        rx = true;
-
-    // Instantiate an SX1276 using default parameters
-    upm::SX1276 sensor;
-
-    // 915Mhz
-    sensor.setChannel(915000000);
-
-    // LORA configuration (rx and tx must be configured the same):
-    // Tx output power = 14 dBm
-    // LORA bandwidth = 125000 (can also be 250K and 500K)
-    // LORA spreading factor = 7
-    // LORA coding rate = 1 (4/5)
-    // LORA preamble len = 8
-    // LORA symbol timeout = 5
-    // LORA fixed payload = false
-    // LORA IQ inversion = false
-    // LORA (rx) continuous Rx mode = true
-
-    sensor.setTxConfig(sensor.MODEM_LORA, 14, 0, 125000, 7, 1, 8, false, true, false, 0, false);
-
-    sensor.setRxConfig(
-    sensor.MODEM_LORA, 125000, 7, 1, 0, 8, 5, false, 0, true, false, 0, false, true);
-
-    int count = 0;
-    int buflen = 64;
-    char buffer[buflen];
-
-    while (shouldRun) {
-        if (!rx) {
-            snprintf(buffer, buflen, "Ping %d", count++);
-            cout << "Sending..." << std::string(buffer) << endl;
-            sensor.sendStr(string(buffer), 3000);
-            sensor.setSleep();
-            upm_delay(1);
-        } else {
-            // receiving
-            cout << "Attempting to receive..." << endl;
-            int rv;
-            if ((rv = sensor.setRx(3000))) {
-                cout << "setRx returned " << rv << endl;
-            } else {
-                cout << "Received Buffer: " << sensor.getRxBufferStr() << endl;
-            }
-
-            // go back to upm_delay when done
-            sensor.setSleep();
-            upm_delay_us(5000);
-        }
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/sx6119.cxx b/examples/c++/sx6119.cxx
deleted file mode 100644
index 2a6ee6f..0000000
--- a/examples/c++/sx6119.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "sx6119.hpp"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a SX6119 on digital pins 2 (power) and 3 (seek)
-    // This example was tested on the Grove FM Receiver.
-
-    upm::SX6119 radio(2, 3);
-
-    // if an argument was specified (any argument), seek to the next
-    // station, else just toggle the power.
-
-    cout << "Supply any argument to the command line to seek to the" << endl;
-    cout << "next station." << endl;
-    cout << "Running the example without an argument will toggle the" << endl;
-    cout << "power on or off." << endl;
-
-    cout << endl;
-
-    bool doSeek = false;
-
-    if (argc > 1)
-        doSeek = true;
-
-    // depending on what was selected, do it
-
-    if (doSeek)
-        radio.seek();
-    else
-        radio.togglePower();
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/t3311.cxx b/examples/c++/t3311.cxx
deleted file mode 100644
index 517af4c..0000000
--- a/examples/c++/t3311.cxx
+++ /dev/null
@@ -1,107 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "t3311.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    string defaultDev = "/dev/ttyUSB0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Initializing..." << endl;
-
-    // Instantiate an T3311 instance, using MODBUS slave address 1, and
-    // default comm parameters (9600, 8, N, 2)
-    upm::T3311 sensor(defaultDev, 1);
-
-    // output the serial number and firmware revision
-    cout << "Serial Number: " << sensor.getSerialNumber() << endl;
-    cout << "Firmware Revision: " << sensor.getFirmwareMajor() << "." << sensor.getFirmwareMinor()
-         << endl;
-    cout << endl;
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << "Humidity: " << sensor.getHumidity() << " %" << endl;
-
-        // this value depends on the sensor configuration -- by default
-        // it is the dew point temperature
-        cout << "Computed Value: " << sensor.getComputedValue() << endl;
-
-        // with FW revisions > 2.44, extended computed data is available
-        if (sensor.extendedDataAvailable()) {
-            cout << "Dew Point Temperature: " << sensor.getDewPointTemperature() << " C / "
-                 << sensor.getDewPointTemperature(true) << " F" << endl;
-
-            cout << "Absolute Humidity: " << sensor.getAbsoluteHumidity() << " g/m3" << endl;
-
-            cout << "Specific Humidity: " << sensor.getSpecificHumidity() << " g/kg" << endl;
-
-            cout << "Mixing Ratio: " << sensor.getMixingRatio() << " g/kg" << endl;
-
-            cout << "Specific Enthalpy: " << sensor.getSpecificEnthalpy() << " kJ/kg" << endl;
-        }
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/t6713-co2-sensor.cxx b/examples/c++/t6713-co2-sensor.cxx
deleted file mode 100644
index 444c66e..0000000
--- a/examples/c++/t6713-co2-sensor.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <exception>
-#include <iostream>
-#include <stddef.h>
-#include <stdint.h>
-
-#include "iCO2Sensor.hpp"
-#include "mraa/common.h"
-#include "t6713.hpp"
-#include "upm_utilities.h"
-
-#define EDISON_I2C_BUS 1
-#define FT4222_I2C_BUS 0
-
-//! [Interesting]
-int
-main()
-{
-    /* Create an instance of the T6713 sensor */
-    upm::T6713 sensor(EDISON_I2C_BUS);
-
-    /* Show usage from the ICO2Sensor interface */
-    upm::ICO2Sensor* cO2Sensor = static_cast<upm::ICO2Sensor*>(&sensor);
-
-    if (cO2Sensor == NULL) {
-        std::cout << "CO2 sensor not detected" << std::endl;
-        return 1;
-    }
-    std::cout << "CO2 sensor " << cO2Sensor->getModuleName() << " detected" << std::endl;
-    while (true) {
-        try {
-            uint16_t value = cO2Sensor->getPpm();
-            std::cout << "CO2 level = " << value << " ppm" << std::endl;
-        } catch (std::exception& e) {
-            std::cerr << e.what() << std::endl;
-        }
-        upm_delay(1);
-    }
-
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/t6713.cxx b/examples/c++/t6713.cxx
deleted file mode 100644
index 853f9f6..0000000
--- a/examples/c++/t6713.cxx
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "mraa/common.h"
-#include "t6713.hpp"
-#include "upm_utilities.h"
-
-#define FT4222_I2C_BUS  0
-#define DEFAULT_I2C_BUS 0
-
-int
-main()
-{
-    //! [Interesting]
-    upm::T6713 cO2Sensor(DEFAULT_I2C_BUS);
-
-    while (true) {
-        uint16_t value = cO2Sensor.getPpm();
-        std::cout << "CO2 level = " << value << " ppm" << std::endl;
-        upm_delay(1);
-    }
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/t8100.cxx b/examples/c++/t8100.cxx
deleted file mode 100644
index 06815e0..0000000
--- a/examples/c++/t8100.cxx
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "t8100.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // You will need to edit this example to conform to your site and your
-    // devices, specifically the Device Object Instance ID passed to the
-    // constructor, and the arguments to initMaster() that are
-    // appropriate for your BACnet network.
-
-    string defaultDev = "/dev/ttyUSB0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device " << defaultDev << endl;
-    cout << "Initializing..." << endl;
-
-    // Instantiate an T8100 object for an T8100 device that has 568000
-    // as it's unique Device Object Instance ID.  NOTE: You will
-    // certainly want to change this to the correct value for your
-    // device(s).
-    T8100 sensor(568000);
-
-    // Initialize our BACnet master, if it has not already been
-    // initialized, with the device and baudrate, choosing 1000001 as
-    // our unique Device Object Instance ID, 2 as our MAC address and
-    // using default values for maxMaster and maxInfoFrames
-    sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-    // Uncomment to enable debugging output
-    // sensor.setDebug(true);
-
-    cout << endl;
-    cout << "Device Description: " << sensor.getDeviceDescription() << endl;
-    cout << "Device Location: " << sensor.getDeviceLocation() << endl;
-    cout << endl;
-
-    // update and print a few values every 5 seconds
-    while (shouldRun) {
-        // update our values
-        sensor.update();
-
-        cout << "CO2 Concentration: " << sensor.getCO2() << " ppm" << endl;
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << "Humidity: " << sensor.getHumidity() << " %RH" << endl;
-
-        cout << "Relay State: " << sensor.getRelayState() << endl;
-
-        cout << endl;
-        upm_delay(5);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/ta12200.cxx b/examples/c++/ta12200.cxx
deleted file mode 100644
index 58e5ab3..0000000
--- a/examples/c++/ta12200.cxx
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "ta12200.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a TA12-200 sensor on analog pin A0
-    upm::TA12200 electricity(0);
-
-    while (shouldRun) {
-        unsigned int maxVal = electricity.highestValue();
-        float current = electricity.milliAmps(maxVal);
-
-        cout << "Max ADC Value: " << maxVal << ", current: " << current << "mA" << endl;
-        upm_delay_us(100000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/tb7300.cxx b/examples/c++/tb7300.cxx
deleted file mode 100644
index 0d2a3ba..0000000
--- a/examples/c++/tb7300.cxx
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <string>
-
-#include "tb7300.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // You will need to edit this example to conform to your site and your
-    // devices, specifically the Device Object Instance ID passed to the
-    // constructor, and the arguments to initMaster() that are
-    // appropriate for your BACnet network.
-
-    string defaultDev = "/dev/ttyUSB0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device " << defaultDev << endl;
-    cout << "Initializing..." << endl;
-
-    // Instantiate an TB7300 object for an TB7300 device that has 73001
-    // as it's unique Device Object Instance ID.  NOTE: You will
-    // certainly want to change this to the correct value for your
-    // device(s).
-    TB7300 sensor(73001);
-
-    // Initialize our BACnet master, if it has not already been
-    // initialized, with the device and baudrate, choosing 1000001 as
-    // our unique Device Object Instance ID, 2 as our MAC address and
-    // using default values for maxMaster and maxInfoFrames
-    sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-    // Uncomment to enable debugging output
-    // sensor.setDebug(true);
-
-    cout << endl;
-    cout << "Device Name: " << sensor.getDeviceName() << endl;
-    cout << "Device Description: " << sensor.getDeviceDescription() << endl;
-    cout << "Device Location: " << sensor.getDeviceLocation() << endl;
-    cout << endl;
-
-    cout << "Fan Mode: " << sensor.getMultiStateValueText(TB7300::MV_Fan_Mode) << endl;
-
-    cout << "Fan Status: " << sensor.getMultiStateValueText(TB7300::MV_Fan_Status) << endl;
-
-    cout << "System Mode: " << sensor.getMultiStateValueText(TB7300::MV_System_Mode) << endl;
-
-    cout << "Service Alarm: " << sensor.getBinaryInputText(TB7300::BI_Service_Alarm) << endl;
-
-    cout << endl;
-
-    // update and print the room temperature every 5 seconds
-    while (shouldRun) {
-        // update our values
-        sensor.update();
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << endl;
-        upm_delay(5);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/tca9548a.cxx b/examples/c++/tca9548a.cxx
deleted file mode 100644
index 01a42d1..0000000
--- a/examples/c++/tca9548a.cxx
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Author: Gerard Vidal <gerard.vidal@ens-lyon.fr>
- * 2017 IFE ENS de Lyon
- *
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string.h>
-
-#include "tca9548a.hpp"
-
-using namespace std;
-using namespace upm;
-
-/*
- * This examble is built to multiplex channel 2 and Channel 4
- *
- */
-
-void
-showAllPorts(upm::TCA9548A& multiplex)
-{
-    int i;
-    char ports[80];
-    std::string convert;
-    for (i = 0; i < 8; i++) {
-        if (multiplex.getPort(i))
-            strcat(ports, "1.");
-        else
-            strcat(ports, "0.");
-    }
-    cout << "Ports: " << ports;
-}
-
-int
-main(int argc, char** argv)
-{
-    // Instantiate a TCA9548A instance of i2c multiplexer
-    upm::TCA9548A multiplex(0);
-
-    // Clean
-    multiplex.disableAllPorts();
-    cout << "All ports disabled.";
-
-    // Open i2c bus on multiplexer channel 4
-    multiplex.setPort(4, multiplex.ENABLED, multiplex.EXCLUSIVE);
-    cout << "Port 4 enabled with exclusive access.";
-    showAllPorts(multiplex);
-
-    // Close com with channel 4
-    multiplex.disableAllPorts();
-
-    // Open i2c bus on multiplexer channel 2
-    multiplex.setPort(2, multiplex.ENABLED, multiplex.EXCLUSIVE);
-    cout << "Port 2 enabled with exclusive access.";
-    showAllPorts(multiplex);
-
-    // close com with channel 2
-    multiplex.disableAllPorts();
-
-    // Open 2 i2c bus on multiplexer channel 4 and channel2
-    multiplex.setPort(4, multiplex.ENABLED, multiplex.EXCLUSIVE);
-    multiplex.setPort(2, multiplex.ENABLED, multiplex.INCLUSIVE);
-    cout << "Port 4 enabled with exclusive access.";
-    cout << "Port 2 enabled with exclusive access.";
-    showAllPorts(multiplex);
-
-    // close com with all channels
-    multiplex.disableAllPorts();
-
-    // Open i2c bus on all multiplexer channels
-    multiplex.enableAllPorts();
-    cout << "All ports enabled.";
-    showAllPorts(multiplex);
-
-    // close com with all channels
-    multiplex.disableAllPorts();
-
-    return 0;
-}
diff --git a/examples/c++/tcs3414cs.cxx b/examples/c++/tcs3414cs.cxx
deleted file mode 100644
index cd97689..0000000
--- a/examples/c++/tcs3414cs.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "tcs3414cs.hpp"
-#include "upm_utilities.h"
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    upm::tcs3414sc_rgb_t rgb;
-
-    // Instantiate the color sensor on I2C
-    upm::TCS3414CS sensor;
-
-    // Print out the r, g, b, and clr value every 0.5 seconds
-    while (!doWork) {
-        sensor.readRGB(&rgb);
-        std::cout << (int) rgb.r << ", " << (int) rgb.g << ", " << (int) rgb.b << ", " << rgb.clr
-                  << std::endl;
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/tcs37727.cxx b/examples/c++/tcs37727.cxx
deleted file mode 100644
index 0b38d91..0000000
--- a/examples/c++/tcs37727.cxx
+++ /dev/null
@@ -1,77 +0,0 @@
-/* Author: Norbert Wesp <nwesp@phytec.de>
- * Copyright (c) 2017 Phytec Messtechnik GmbH.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "tcs37727.hpp"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-bool run = true;
-
-void
-sig_handler(int sig)
-{
-    if (sig == SIGINT)
-        run = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    upm::tcs37727_data_t data;
-
-    std::cout << "Initializing test-application..." << std::endl;
-
-    // Instantiate an TCS37727 instance on bus 1
-    upm::TCS37727 mySensor(1);
-
-    // activate periodic measurements
-    mySensor.setActive();
-
-    // update and print available values every second
-    while (run) {
-        mySensor.getData(&data, true);
-        std::cout << "Red: " << (int) data.red << std::endl
-                  << "Green: " << (int) data.green << std::endl
-                  << "Blue: " << (int) data.blue << std::endl
-                  << "Clear: " << (int) data.clear << std::endl
-                  << "Lux: " << (int) data.lux << std::endl
-                  << "Color temperature: " << (int) data.ct << std::endl;
-
-        std::cout << std::endl;
-
-        upm_delay(1);
-    }
-
-    std::cout << "Exiting test-application..." << std::endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/teams.cxx b/examples/c++/teams.cxx
deleted file mode 100644
index 354f001..0000000
--- a/examples/c++/teams.cxx
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "teams.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    cout << "Initializing..." << endl;
-
-    // Instantiate an TEAMS instance, using A0 for temperature, and
-    // 165.0 ohms for the rResistor value (for the libelium 4-20ma
-    // interface)
-    upm::TEAMS sensor(0, 165.0);
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        // is the sensor connected? (current >= 4ma)
-        cout << "Is Connected: " << sensor.isConnected() << endl;
-
-        // print computed current on the loop.  This includes the offset,
-        // if one was set by setOffsetMilliamps().
-        cout << "Milliamps: " << sensor.getRawMilliamps() << endl;
-
-        // we show both C and F for temperature
-        cout << "Temperature: " << sensor.getTemperature() << " C / " << sensor.getTemperature(true)
-             << " F" << endl;
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/temperature.cxx b/examples/c++/temperature.cxx
deleted file mode 100644
index b48a5d7..0000000
--- a/examples/c++/temperature.cxx
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdio.h>
-
-#include "temperature.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    // Create the temperature sensor object using AIO pin 0
-    upm::Temperature temp(0);
-    std::cout << temp.name() << std::endl;
-
-    // Read the temperature ten times, printing both the Celsius and
-    // equivalent Fahrenheit temperature, waiting one second between readings
-    for (int i = 0; i < 10; i++) {
-        int celsius = temp.value();
-        int fahrenheit = (int) (celsius * 9.0 / 5.0 + 32.0);
-        printf("%d degrees Celsius, or %d degrees Fahrenheit\n", celsius, fahrenheit);
-        upm_delay(1);
-    }
-
-    // Delete the temperature sensor object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/tex00.cxx b/examples/c++/tex00.cxx
deleted file mode 100644
index 311423c..0000000
--- a/examples/c++/tex00.cxx
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "tex00.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    cout << "Initializing..." << endl;
-
-    // Instantiate an TEX00 instance, using A0 for the analog input.  In
-    // this example, we are using a 10K Ohm balance resistor and a TED
-    // (10k type 2) thermistor.
-    upm::TEX00 sensor(0, 10000, upm::TEX00::STYPE_THERMISTOR_TED);
-
-    cout << "Minimum temperature: " << sensor.getTemperatureRangeMin() << " C" << endl;
-    cout << "Maximum temperature: " << sensor.getTemperatureRangeMax() << " C" << endl;
-    cout << endl;
-
-    // update and print available values every second
-    while (shouldRun) {
-        // update our values from the sensor
-        sensor.update();
-
-        if (sensor.isOutOfRange()) {
-            cout << "Temperature out of range" << endl;
-        } else {
-            // we show both C and F for temperature
-            cout << "Temperature: " << sensor.getTemperature() << " C / "
-                 << sensor.getTemperature(true) << " F" << endl;
-        }
-
-        cout << endl;
-
-        upm_delay(1);
-    }
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/th02.cxx b/examples/c++/th02.cxx
deleted file mode 100644
index 8f09563..0000000
--- a/examples/c++/th02.cxx
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Author: Yevgeniy Kiveisha <yevgeniy.kiveisha@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-#include <stdio.h>
-
-#include "th02.hpp"
-#include "upm_utilities.h"
-
-int doWork = 0;
-
-void
-sig_handler(int signo)
-{
-    printf("got signal\n");
-    if (signo == SIGINT) {
-        printf("exiting application\n");
-        doWork = 1;
-    }
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    float temperature = 0.0;
-    float humidity = 0.0;
-    upm::TH02 sensor;
-
-    while (!doWork) {
-        temperature = sensor.getTemperature();
-        humidity = sensor.getHumidity();
-        std::cout << "Temperature = " << temperature << ", Humidity = " << humidity << std::endl;
-        upm_delay_us(500000);
-    }
-    //! [Interesting]
-
-    std::cout << "exiting application" << std::endl;
-
-    return 0;
-}
diff --git a/examples/c++/tm1637.cxx b/examples/c++/tm1637.cxx
deleted file mode 100644
index 4abbbb7..0000000
--- a/examples/c++/tm1637.cxx
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <signal.h>
-#include <stdio.h>
-#include <time.h>
-
-#include "tm1637.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-using namespace upm;
-
-bool run = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        run = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    bool point = true;
-    int timezone = -7; // Your UTC offset
-    time_t rawtime;
-    struct tm* gmt;
-    char myTime[15];
-
-    fprintf(stdout, "TM1637 Display Example\n");
-    signal(SIGINT, sig_handler);
-
-    TM1637 myDisplay = TM1637(0, 1);   // TM1637 on pins 0 (clk) and 1 (dio)
-    myDisplay.write(0x39, 0x09, 0x09); // Start a box using 7-segment encoding
-    myDisplay.writeAt(3, ']');         // Finish box using writeAt function
-    upm_delay(3);                      // Wait 3 seconds
-
-    while (run) {
-        time(&rawtime);         // Update raw time
-        gmt = gmtime(&rawtime); // Get current time
-
-        int hour = (gmt) ? gmt->tm_hour : 0;
-        int min = (gmt) ? gmt->tm_min : 0;
-        // Format and store the time in 24 hour format
-        snprintf(myTime, 15, "%2d%02d", (hour + timezone + 24) % 24, min);
-
-        myDisplay.write(myTime);           // Write to display as string
-        myDisplay.setColon(point ^= true); // Toggle the dots on the display
-        upm_delay(1);                      // Only update once every second
-    }
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c++/tmp006.cxx b/examples/c++/tmp006.cxx
deleted file mode 100644
index 78f62e2..0000000
--- a/examples/c++/tmp006.cxx
+++ /dev/null
@@ -1,73 +0,0 @@
-/* Author: Norbert Wesp <nwesp@phytec.de>
- * Copyright (c) 2017 Phytec Messtechnik GmbH.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "tmp006.hpp"
-#include "upm_utilities.h"
-
-using namespace upm;
-
-bool run = true;
-
-void
-sig_handler(int sig)
-{
-    if (sig == SIGINT)
-        run = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    std::cout << "Initializing test-application..." << std::endl;
-
-    // please make sure that you have the right i2c address for your device
-    // the correct range of addresses is 0x40 - 0x47
-    // Instantiate an TMP006 instance on bus 1
-    upm::TMP006 mySensor(1, TMP006_CONFIG_CR_DEF, TMP006_I2C_ADDRESS);
-
-    // you can also get basic tmp007 functionality by initializing it as follows
-    // upm::TMP006 mySensor(1, TMP006_CONFIG_CR_DEF, TMP007_I2C_ADDRESS);
-
-    // activate periodic measurements
-    mySensor.setActive();
-
-    // update and print available values every second
-    while (run) {
-        // Print out temperature value in *C
-        std::cout << "Temperature: " << mySensor.getTemperature(true) << " *C" << std::endl;
-
-        upm_delay(1);
-    }
-
-    std::cout << "Exiting test-application..." << std::endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/tsl2561.cxx b/examples/c++/tsl2561.cxx
deleted file mode 100644
index a3264df..0000000
--- a/examples/c++/tsl2561.cxx
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Nandkishor Sonar <Nandkishor.Sonar@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * LIGHT-TO-DIGITAL CONVERTER [TAOS-TSL2561]
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-#include <stdlib.h>
-
-#include "tsl2561.hpp"
-
-int
-main(int argc, char** argv)
-{
-    int loopCount = 100;
-
-    //! [Interesting]
-    if (argc < 2) {
-        printf("Provide loop count \n");
-    } else {
-        loopCount = atoi(argv[1]);
-    }
-    upm::TSL2561 sensor;
-
-    for (int i = 0; i < loopCount; i++) {
-        fprintf(stdout, "Lux = %d\n", sensor.getLux());
-    }
-
-    //! [Interesting]
-
-    return (0);
-}
diff --git a/examples/c++/ttp223.cxx b/examples/c++/ttp223.cxx
deleted file mode 100644
index 863072a..0000000
--- a/examples/c++/ttp223.cxx
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "ttp223.hpp"
-#include "upm_utilities.h"
-
-int
-main(int argc, char** argv)
-{
-    // This example uses GPIO 0
-    //! [Interesting]
-
-    // Create the TTP223 touch sensor object using GPIO pin 0
-    upm::TTP223 touch(0);
-
-    // Check whether or not a finger is near the touch sensor and
-    // print accordingly, waiting one second between readings
-    while (1) {
-        if (touch.isPressed()) {
-            std::cout << touch.name() << " is pressed" << std::endl;
-        } else {
-            std::cout << touch.name() << " is not pressed" << std::endl;
-        }
-        upm_delay(1);
-    }
-
-    // Delete the touch sensor object
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/uartat-le910.cxx b/examples/c++/uartat-le910.cxx
deleted file mode 100644
index 6990126..0000000
--- a/examples/c++/uartat-le910.cxx
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "uartat.hpp"
-
-using namespace std;
-
-const size_t bufferLength = 256;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    string defaultDev = string("/dev/ttyUSB0");
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device: " << defaultDev << endl;
-
-    // Instantiate a UARTAT sensor on defaultDev at 115200 baud.
-    upm::UARTAT sensor(defaultDev, 115200);
-
-    // This is a simplistic example that tries to configure the LE910,
-    // and use it's built-in socket capabilities to connect to a
-    // remote host, obtain a small piece of data, and return it.  It's
-    // mainly intended to show you how you can use the various AT
-    // commands supported by the LE910 to perform simple tasks.
-    //
-    // You must have a valid SIM card with an active data plan for
-    // this example to do anything interesting.
-    //
-    // See the LE910 AT Commands reference for full information on
-    // what is possible with this device.  The uartat driver is
-    // intended to make it a little easier to control AT-style
-    // devices, but is by no means a full-featured communication
-    // infrastructure.  A "real" application will probably need to be
-    // much more sophisticated with regard to parsing, doing retries,
-    // etc.
-    //
-    // For experimenting with various AT commands, try using an
-    // interactive terminal emulator like minicom or screen.
-
-    // make sure we are in command mode
-    if (!sensor.inCommandMode()) {
-        cout << "Not in command mode, switching..." << endl;
-        sensor.commandMode("+++", 1000);
-    }
-
-    // flter out CR's in responses by default
-    sensor.filterCR(true);
-
-    cout << "Configuring modem..." << endl;
-
-    // discard any waiting characters
-    sensor.drain();
-
-    // reset modem
-    sensor.command("ATZ\r");
-
-    // turn off command echo, set verbosity to 1, enable data
-    // connection mode
-    sensor.command("ATE0 V1 +FCLASS=0\r");
-    sensor.drain();
-
-    // Now issue some commands and output the results.
-
-    cout << "Modem and SIM information:" << endl;
-    std::string buffer;
-    buffer = sensor.commandWithResponse("AT+ICCID\r", bufferLength);
-    if (!buffer.empty())
-        cout << "ICCID (SIM ID): " << buffer << endl;
-
-    buffer = sensor.commandWithResponse("AT+CGSN=1\r", bufferLength);
-    if (!buffer.empty())
-        cout << "IMEI: " << buffer << endl;
-
-    // see if we are on the network....
-    buffer = sensor.commandWithResponse("AT+CREG?\r", bufferLength);
-    if (!buffer.empty()) {
-        cout << buffer << endl;
-
-        // look for "CGREG: 0,1" or "CGREG: 0,5"
-        if (sensor.find(buffer, "CREG: 0,1") || sensor.find(buffer, "CREG: 0,5")) {
-            cout << "Connected to the cell data network." << endl;
-
-            // wait up to 5 seconds for responses now...
-            sensor.setResponseWaitTime(5000);
-
-            // setup PDP context (socket 1).  An ERROR repsonse is
-            // possible if the PDP context is already set up.
-            sensor.command("AT#SGACT=1,1\r");
-
-            // setup a TCP socket to nist.gov and read the timestamp.
-
-            cout << "Connecting to time-a.nist.gov, TCP port 13" << endl;
-
-            // Wait up to 60 seconds to find the NO CARRIER
-            // string, which will be present at the end, if the
-            // connection succeeded and the requested data was
-            // obtained.
-            buffer = sensor.commandWaitFor("AT#SD=1,0,13,\"time-a.nist.gov\"\r",
-                                           bufferLength,
-                                           "\nNO CARRIER\n",
-                                           60000);
-            if (!buffer.empty()) {
-                // print out the response
-                cout << "RESPONSE: " << endl << buffer << endl;
-            } else {
-                cout << "No response." << endl;
-            }
-
-            // destroy PDP context
-            sensor.setResponseWaitTime(250);
-            sensor.command("AT#SGACT=1,0\r");
-        } else {
-            cout << "You do not appear to be connected to the network..." << endl;
-        }
-    } else {
-        cout << "Error executing query\n" << endl;
-    }
-
-    // reset the modem
-    sensor.command("ATZ\r");
-
-    cout << "Exiting" << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/uln200xa.cxx b/examples/c++/uln200xa.cxx
deleted file mode 100644
index 413a916..0000000
--- a/examples/c++/uln200xa.cxx
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "uln200xa.hpp"
-#include "upm_utilities.h"
-
-using namespace std;
-
-int
-main()
-{
-    //! [Interesting]
-
-    // Instantiate a Stepper motor on a ULN200XA Darlington controller.
-
-    // This was tested with the Grove Gear Stepper Motor with Driver
-
-    // Wire the pins so that I1 is pin D8, I2 is pin D9, I3 is pin D10 and
-    // I4 is pin D11
-    upm::ULN200XA uln200xa(4096, 8, 9, 10, 11);
-
-    uln200xa.setSpeed(5);
-    uln200xa.setDirection(ULN200XA_DIR_CW);
-    cout << "Rotating 1 revolution clockwise." << endl;
-    uln200xa.stepperSteps(4096);
-    cout << "Sleeping for 2 seconds..." << endl;
-    upm_delay(2);
-    cout << "Rotating 1/2 revolution counter clockwise." << endl;
-    uln200xa.setDirection(ULN200XA_DIR_CCW);
-    uln200xa.stepperSteps(2048);
-
-    // turn off the power
-    uln200xa.release();
-
-    //! [Interesting]
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/ultrasonic.cxx b/examples/c++/ultrasonic.cxx
deleted file mode 100644
index 203ecf9..0000000
--- a/examples/c++/ultrasonic.cxx
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Jun Kato <i@junkato.jp>
- * Copyright (c) 2015 Jun Kato.
- *
- * Thanks to Seeed Studio for a working arduino sketch
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <signal.h>
-#include <stdio.h>
-
-#include "ultrasonic.hpp"
-#include "upm_utilities.h"
-
-bool running = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        running = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-    //! [Interesting]
-    // upm::UltraSonic *sonar = NULL;
-    upm::UltraSonic sonar(2);
-    while (running) {
-        int width = sonar.getDistance();
-        printf("Echo width = %d\n", width);
-        printf("Distance inches = %f.2\n\n", width / 148.0);
-        upm_delay(3);
-    }
-    //! [Interesting]
-    printf("exiting application\n");
-    return 0;
-}
diff --git a/examples/c++/urm37-uart.cxx b/examples/c++/urm37-uart.cxx
deleted file mode 100644
index 02ecd2a..0000000
--- a/examples/c++/urm37-uart.cxx
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "urm37.hpp"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a URM37 sensor on UART 0, with the reset pin on D2
-    upm::URM37 sensor(0, 2);
-
-    // Every half a second, sample the URM37 and output the measured
-    // distance in cm, and temperature in degrees C
-
-    while (shouldRun) {
-        cout << "Detected distance (cm): " << sensor.getDistance() << endl;
-        cout << "Temperature (C): " << sensor.getTemperature() << endl;
-        cout << endl;
-
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/urm37.cxx b/examples/c++/urm37.cxx
deleted file mode 100644
index a5899ba..0000000
--- a/examples/c++/urm37.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "urm37.hpp"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a URM37 sensor on analog pin A0, reset pin on D2,
-    // trigger pin on D3 with an analog reference voltage of 5.0
-    upm::URM37 sensor(0, 2, 3, 5.0);
-
-    // Every half a second, sample the URM37 and output the measured
-    // distance in cm.
-
-    while (shouldRun) {
-        cout << "Detected distance (cm): " << sensor.getDistance() << endl;
-        upm_delay_us(500000);
-    }
-
-    //! [Interesting]
-
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/vcap.cxx b/examples/c++/vcap.cxx
deleted file mode 100644
index b3f7f87..0000000
--- a/examples/c++/vcap.cxx
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <string>
-
-#include "vcap.hpp"
-
-using namespace std;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-
-    string defaultDev = "/dev/video0";
-
-    // if an argument was specified, use it as the device instead
-    if (argc > 1)
-        defaultDev = string(argv[1]);
-
-    cout << "Using device " << defaultDev << endl;
-    cout << "Initializing..." << endl;
-
-    // Instantiate an VCAP instance, using the specified video device
-    upm::VCAP sensor(defaultDev);
-
-    // enable some debug/verbose output
-    sensor.setDebug(true);
-
-    // This is just a hint.  The kernel can change this to a lower
-    // resolution that the hardware supports.  Use getWidth() and
-    // getHeight() methods to see what the kernel actually chose if you
-    // care.
-    sensor.setResolution(1920, 1080);
-
-    // capture an image
-    sensor.captureImage();
-
-    // convert and save it as a jpeg
-    sensor.saveImage("video-img1.jpg");
-
-    cout << "Exiting..." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/vdiv.cxx b/examples/c++/vdiv.cxx
deleted file mode 100644
index d6b3f73..0000000
--- a/examples/c++/vdiv.cxx
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "vdiv.hpp"
-
-using namespace std;
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Grove Voltage Divider sensor on analog pin A0
-    upm::VDiv vDiv(0);
-
-    // collect data and output measured voltage according to the setting
-    // of the scaling switch (3 or 10)
-    while (shouldRun) {
-        unsigned int val = vDiv.value(100);
-        float gain3val = vDiv.computedValue(3, val);
-        float gain10val = vDiv.computedValue(10, val);
-        cout << "ADC value: " << val << " Gain 3: " << gain3val << "v Gain 10: " << gain10val << "v"
-             << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/veml6070.cxx b/examples/c++/veml6070.cxx
deleted file mode 100644
index 6e5e5d4..0000000
--- a/examples/c++/veml6070.cxx
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "veml6070.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate an VEML6070 sensor on i2c bus 0
-    upm::VEML6070 veml(0);
-    while (shouldRun) {
-        cout << "Retrieved UV value: " << veml.getUVIntensity() << endl;
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/water.cxx b/examples/c++/water.cxx
deleted file mode 100644
index e8c8226..0000000
--- a/examples/c++/water.cxx
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "water.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Water sensor on digital pin D2
-    upm::Water water(2);
-
-    while (shouldRun) {
-        bool val = water.isWet();
-        if (val)
-            cout << "Sensor is wet." << endl;
-        else
-            cout << "Sensor is dry." << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/waterlevel.cxx b/examples/c++/waterlevel.cxx
deleted file mode 100644
index 8ab5dda..0000000
--- a/examples/c++/waterlevel.cxx
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "waterlevel.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // The was tested with the Water Level Sensor
-    // Instantiate a Water Level Sensor on digital pin D2
-    upm::WaterLevel waterlevel(2);
-
-    while (shouldRun) {
-        if (waterlevel.isSubmerged())
-            cout << "Sensor is submerged in liquid" << endl;
-        else
-            cout << "Liquid is below water level sensor" << endl;
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-    cout << "Exiting" << endl;
-
-    return 0;
-}
diff --git a/examples/c++/wfs.cxx b/examples/c++/wfs.cxx
deleted file mode 100644
index eb4b3ec..0000000
--- a/examples/c++/wfs.cxx
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "wfs.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a Water Flow Sensor on digital pin D2.  This must
-    // be an interrupt capable pin.
-    upm::WFS flow(2);
-
-    // set the flow counter to 0 and start counting
-    flow.clearFlowCounter();
-    flow.startFlowCounter();
-
-    while (shouldRun) {
-        // we grab these (millis and flowCount) just for display
-        // purposes in this example
-        uint32_t millis = flow.getMillis();
-        uint32_t flowCount = flow.flowCounter();
-
-        float fr = flow.flowRate();
-
-        // output milliseconds passed, flow count, and computed flow rate
-        cout << "Millis: " << millis << " Flow Count: " << flowCount;
-        cout << " Flow Rate: " << fr << " LPM" << endl;
-
-        // best to gather data for at least one second for reasonable
-        // results.
-        upm_delay(2);
-    }
-
-    flow.stopFlowCounter();
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/wheelencoder.cxx b/examples/c++/wheelencoder.cxx
deleted file mode 100644
index 432c884..0000000
--- a/examples/c++/wheelencoder.cxx
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "wheelencoder.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a DFRobot Wheel Encoder on digital pin D2
-    upm::WheelEncoder sensor(2);
-
-    // set the counter to 0 and start counting
-    sensor.clearCounter();
-    sensor.startCounter();
-
-    while (shouldRun) {
-        // output milliseconds passed and current sensor count
-        cout << "Millis: " << sensor.getMillis() << " Count: " << sensor.counter() << endl;
-
-        upm_delay(1);
-    }
-
-    sensor.stopCounter();
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/wt5001.cxx b/examples/c++/wt5001.cxx
deleted file mode 100644
index 3324058..0000000
--- a/examples/c++/wt5001.cxx
+++ /dev/null
@@ -1,129 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdlib.h>
-#include <string>
-
-#include "wt5001.hpp"
-
-using namespace std;
-
-void
-printUsage(char* progname)
-{
-    cout << "Usage:" << progname << " <command>" << endl;
-    cout << "Commands:" << endl;
-    cout << "0  - stop playing" << endl;
-    cout << "1  - start playing track 1" << endl;
-    cout << "2  - pause/un-pause playback" << endl;
-    cout << "3  - next track" << endl;
-    cout << "4  - previous track" << endl;
-}
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a WT5001 serial MP3 player on uart 0.
-    // This example was tested on the Grove Serial MP3 module.
-
-    upm::WT5001 mp3(0);
-
-    int cmd = -1;
-    if (argc > 1)
-        cmd = atoi(argv[1]);
-
-    // make sure port is initialized properly.  9600 baud is the default.
-    if (!mp3.setupTty(B9600)) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    switch (cmd) {
-        case 0:
-            mp3.stop();
-            break;
-
-        case 1:
-            mp3.play(upm::WT5001::SD, 1);
-            break;
-
-        case 2:
-            mp3.pause();
-            break;
-
-        case 3:
-            mp3.next();
-            break;
-
-        case 4:
-            mp3.previous();
-            break;
-
-        default:
-            // nothing, just output usage, and info below
-            printUsage(argv[0]);
-            break;
-    }
-
-    // Example: set the date
-    // mp3.setDate(2015, 1, 1);
-
-    // Example: set the time
-    // mp3.setTime(12, 30, 30);
-
-    // print out some information
-    uint8_t vol = 0;
-    if (mp3.getVolume(&vol))
-        cout << "The current volume is: " << int(vol) << endl;
-
-    uint8_t ps = 0;
-    if (mp3.getPlayState(&ps))
-        cout << "The current play state is: " << int(ps) << endl;
-
-    uint16_t numf = 0;
-    if (mp3.getNumFiles(upm::WT5001::SD, &numf))
-        cout << "The number of files on the SD card is: " << int(numf) << endl;
-
-    uint16_t curf = 0;
-    if (mp3.getCurrentFile(&curf))
-        cout << "The current file is: " << int(curf) << endl;
-
-    uint16_t year = 0;
-    uint8_t month = 0, day = 0;
-    if (mp3.getDate(&year, &month, &day))
-        cout << "The device date is: " << int(month) << "/" << int(day) << "/" << int(year) << endl;
-
-    uint8_t hour = 0, minute = 0, second = 0;
-    if (mp3.getTime(&hour, &minute, &second))
-        cout << "The device time is: " << int(hour) << ":" << int(minute) << ":" << int(second)
-             << endl;
-
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/xbee.cxx b/examples/c++/xbee.cxx
deleted file mode 100644
index b6041cd..0000000
--- a/examples/c++/xbee.cxx
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "xbee.hpp"
-
-using namespace std;
-using namespace upm;
-
-void
-printUsage(char* progname)
-{
-    cout << "Usage: " << progname << " [AT command]" << endl;
-    cout << endl;
-
-    cout << "If an argument is supplied on the command line, that argument is" << endl;
-    cout << "sent to the module and the response is printed out." << endl;
-    cout << endl;
-    cout << "If no argument is used, then the firmware revision, serial number" << endl;
-    cout << "and the current IP address (if set) are queried." << endl;
-    cout << endl;
-    cout << endl;
-}
-
-//! [Interesting]
-
-// simple helper function to send a command and wait for a response
-void
-sendCommand(upm::XBee& sensor, string cmd)
-{
-    // commands need to be terminated with a carriage return
-    cmd += "\r";
-
-    sensor.writeDataStr(cmd);
-
-    string resp;
-    while (sensor.dataAvailable(2000)) {
-        resp += sensor.readDataStr(1024);
-    }
-
-    if (resp.empty()) {
-        cerr << "Timed out waiting for response" << endl;
-        return;
-    }
-
-    resp = sensor.stringCR2LF(resp);
-    cout << "Returned (" << resp.size() << " bytes): " << endl;
-    cout << resp << endl;
-}
-
-int
-main(int argc, char** argv)
-{
-    // Instantiate a XBee Module on UART 0
-    upm::XBee sensor(0);
-
-    // Set the baud rate, 9600 baud is the default.
-    if (sensor.setBaudRate(9600)) {
-        cerr << "Failed to set tty baud rate" << endl;
-        return 1;
-    }
-
-    printUsage(argv[0]);
-
-    if (argc > 1) {
-        // enable command mode
-        sensor.commandMode();
-        cout << "Sending command line argument (" << argv[1] << ")..." << endl;
-        sendCommand(sensor, argv[1]);
-    } else {
-        // enable command mode
-        sensor.commandMode();
-        // query the verbose firmware revision
-        cout << "Querying verbose firmware revision (ATVL)..." << endl;
-        sendCommand(sensor, "ATVL");
-        // query the number
-        cout << "Querying Serial Number High (ATSH)..." << endl;
-        sendCommand(sensor, "ATSH");
-        cout << "Querying Serial Number Low (ATSL)..." << endl;
-        sendCommand(sensor, "ATSL");
-
-        cout << "Querying address, if set (ATMY)..." << endl;
-        sendCommand(sensor, "ATMY");
-
-        // For the XBee WiFi S6B
-        // A comprehensive list of commands and command modes is
-        // available from the datasheet at:
-        // ftp1.digi.com/support/documentation/90002180_L.pdf
-
-        // For the XBee S1
-        // A comprehensive list of commands and command modes is
-        // available from the datasheet at:
-        // http://www.sparkfun.com/datasheets/Wireless/Zigbee/XBee-Datasheet.pdf
-
-        // For the XBee WiFi module:
-        // An example using AT commands to connect to an AP, with a
-        // private Key using WPA2:
-
-        // Connect to AP with SSID 'mySSID':
-        //  ATIDmySSID
-
-        // Provide the private key 'secret':
-        //  ATPKsecret
-
-        // Use WPA2 encryption
-        //  ATEE2
-    }
-
-    return 0;
-}
-
-//! [Interesting]
diff --git a/examples/c++/yg1006.cxx b/examples/c++/yg1006.cxx
deleted file mode 100644
index ce619a1..0000000
--- a/examples/c++/yg1006.cxx
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "yg1006.hpp"
-
-using namespace std;
-
-int shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // Instantiate a yg1006 flame sensor on digital pin D2
-    upm::YG1006 flame(2);
-
-    // check every second for the presence of a flame
-    while (shouldRun) {
-        bool val = flame.flameDetected();
-        if (val)
-            cout << "Flame detected." << endl;
-        else
-            cout << "No flame detected." << endl;
-
-        upm_delay(1);
-    }
-    //! [Interesting]
-
-    cout << "Exiting..." << endl;
-
-    return 0;
-}
diff --git a/examples/c++/zfm20-register.cxx b/examples/c++/zfm20-register.cxx
deleted file mode 100644
index 6104c48..0000000
--- a/examples/c++/zfm20-register.cxx
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-#include <stdint.h>
-#include <termios.h>
-
-#include "upm_utilities.h"
-#include "zfm20.hpp"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a ZFM20 Fingerprint reader on UART 0
-
-    upm::ZFM20 fp(0);
-
-    // make sure port is initialized properly.  57600 baud is the default.
-    if (!fp.setupTty(B57600)) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    // This example demonstrates registering a fingerprint on the zfm20
-    // module.  The procedure is as follows:
-    //
-    // 1. get an image, store it in characteristics buffer 1
-    // 2. get another image, store it in characteristics buffer 2
-    // 3. store the image, assuming the two fingerprints match
-
-    // first, we need to register our address and password
-
-    fp.setPassword(ZFM20_DEFAULT_PASSWORD);
-    fp.setAddress(ZFM20_DEFAULT_ADDRESS);
-
-    // now verify the password.  If this fails, any other commands
-    // will be ignored, so we just bail.
-    if (fp.verifyPassword()) {
-        cout << "Password verified." << endl;
-    } else {
-        cerr << "Password verification failed." << endl;
-        return 1;
-    }
-
-    cout << endl;
-
-    uint8_t rv;
-    // get the first image
-
-    cout << "Place a finger on the sensor." << endl;
-    while (fp.generateImage() != ZFM20::ERR_OK)
-        ;
-
-    // in theory, we have an image
-    cout << "Image captured, converting..." << endl;
-
-    if ((rv = fp.image2Tz(1)) != ZFM20::ERR_OK) {
-        cerr << "Image conversion failed with error code " << int(rv) << endl;
-        return 1;
-    }
-
-    cout << "Image conversion succeeded, remove finger." << endl;
-    upm_delay(1);
-
-    while (fp.generateImage() != ZFM20::ERR_NO_FINGER)
-        ;
-
-    cout << endl;
-    cout << "Now place the same finger on the sensor." << endl;
-
-    while (fp.generateImage() != ZFM20::ERR_OK)
-        ;
-
-    cout << "Image captured, converting..." << endl;
-
-    // save this one in slot 2
-    if ((rv = fp.image2Tz(2)) != ZFM20::ERR_OK) {
-        cerr << "Image conversion failed with error code " << int(rv) << endl;
-        return 1;
-    }
-
-    cout << "Image conversion succeeded, remove finger." << endl;
-    cout << endl;
-
-    cout << "Storing fingerprint at id 1" << endl;
-
-    // create the model
-    if ((rv = fp.createModel()) != ZFM20::ERR_OK) {
-        if (rv == ZFM20::ERR_FP_ENROLLMISMATCH)
-            cerr << "Fingerprints did not match." << endl;
-        else
-            cerr << "createModel failed with error code " << int(rv) << endl;
-
-        return 1;
-    }
-
-    // now store it, we hard code the id (second arg) to 1 here
-    if ((rv = fp.storeModel(1, 1)) != ZFM20::ERR_OK) {
-        cerr << "storeModel failed with error code " << int(rv) << endl;
-        return 1;
-    }
-
-    cout << endl;
-    cout << "Fingerprint stored at id 1." << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c++/zfm20.cxx b/examples/c++/zfm20.cxx
deleted file mode 100644
index db9bdba..0000000
--- a/examples/c++/zfm20.cxx
+++ /dev/null
@@ -1,102 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <iostream>
-
-#include "zfm20.hpp"
-
-using namespace std;
-using namespace upm;
-
-int
-main(int argc, char** argv)
-{
-    //! [Interesting]
-    // Instantiate a ZFM20 Fingerprint reader on UART 0
-
-    upm::ZFM20 fp(0);
-
-    // make sure port is initialized properly.  57600 baud is the default.
-    if (!fp.setupTty(57600)) {
-        cerr << "Failed to setup tty port parameters" << endl;
-        return 1;
-    }
-
-    // first, set the default password and address
-    fp.setPassword(ZFM20_DEFAULT_PASSWORD);
-    fp.setAddress(ZFM20_DEFAULT_ADDRESS);
-
-    // now verify the password.  If this fails, any other commands
-    // will be ignored, so we just bail.
-    if (fp.verifyPassword()) {
-        cout << "Password verified." << endl;
-    } else {
-        cerr << "Password verification failed." << endl;
-        return 1;
-    }
-
-    // how many valid stored templates (fingerprints) do we have?
-    cout << "Total stored templates: " << fp.getNumTemplates() << endl;
-    cout << endl;
-
-    // now spin waiting for a fingerprint to successfully image
-    cout << "Waiting for finger print..." << endl;
-
-    while (fp.generateImage() == ZFM20::ERR_NO_FINGER)
-        ;
-
-    // in theory, we have an image
-    cout << "Image captured, converting..." << endl;
-
-    uint8_t rv;
-    if ((rv = fp.image2Tz(1)) != ZFM20::ERR_OK) {
-        cerr << "Image conversion failed with error code " << int(rv) << endl;
-        return 1;
-    }
-
-    cout << "Image conversion succeeded." << endl;
-    cout << "Searching database..." << endl;
-
-    uint16_t id = 0;
-    uint16_t score = 0;
-
-    // we search for a print matching slot 1, where we shored our last
-    // converted fingerprint
-    if ((rv = fp.search(1, id, score)) != ZFM20::ERR_OK) {
-        if (rv == ZFM20::ERR_FP_NOTFOUND) {
-            cout << "Finger Print not found" << endl;
-            return 0;
-        } else {
-            cerr << "Search failed with error code " << int(rv) << endl;
-            return 1;
-        }
-    }
-
-    cout << "Fingerprint found!" << endl;
-    cout << "ID: " << int(id) << ", Score: " << int(score) << endl;
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/CMakeLists.txt b/examples/c/CMakeLists.txt
deleted file mode 100644
index 2cd4645..0000000
--- a/examples/c/CMakeLists.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-# Create an list of all C source files in this directory
-file (GLOB example_src_list RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.c")
-
-# - Handle special cases here --------------------------------------------------
-
-#add_example(humidity-sensor.c TARGETS si7005-c bmp280-c)
-
-# - Create an executable for all other src files in this directory -------------
-foreach (_example_src ${example_src_list})
-    add_example(${_example_src} TARGETS utilities-c SUFFIX "-c")
-endforeach ()
diff --git a/examples/c/a110x.c b/examples/c/a110x.c
deleted file mode 100644
index 97f7f71..0000000
--- a/examples/c/a110x.c
+++ /dev/null
@@ -1,25 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "a110x.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    a110x_context dev = a110x_init(2);
-    bool abc = 0;
-    while(1){
-        if(a110x_magnet_detected(dev, &abc) != UPM_SUCCESS){
-            printf("an error has occurred\n");
-        }
-        upm_delay(1);
-        printf("value retrieved: %d\n", abc);
-    }
-
-    return 0;
-}
diff --git a/examples/c/abp.c b/examples/c/abp.c
deleted file mode 100644
index 2445eaf..0000000
--- a/examples/c/abp.c
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
- 
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "abp.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    abp_context dev = abp_init(0, ABP_DEFAULT_ADDRESS);
-    if(dev == NULL) {
-        printf("Unable to initialize sensor\n");
-        return 0;
-    }
-
-    while(1){
-        abp_update(dev);
-        printf("Retrieved pressure value: %f\n", abp_get_pressure(dev));
-        printf("Retrieved temperature value: %f\n", abp_get_temperature(dev));
-        upm_delay(1);
-    }
-
-    return 0;
-}
diff --git a/examples/c/bh1749.c b/examples/c/bh1749.c
deleted file mode 100755
index 63dded5..0000000
--- a/examples/c/bh1749.c
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <stdio.h>
-#include <signal.h>
-#include "bh1749.h"
-#include "upm_utilities.h"
-
-bool isStopped;
-#define SENSOR_ADDR 0x39
-#define I2C_BUS 0
-
-void signal_int_handler(int signo)
-{
-    if (signo == SIGINT)
-        isStopped = true;
-}
-
-void print_data(void *dev)
-{
-	uint16_t result[5];
-	bh1749_get_measurements((bh1749_context)dev, result);
-	printf("R: %d, G: %d, B: %d, IR: %d, G2: %d\n", result[0],
-			result[1], result[2], result[3], result[4]);
-	bh1749_reset_interrupt(dev);
-}
-
-int main(int argc, char **argv)
-{
-	signal(SIGINT, signal_int_handler);
-
-	bh1749_context dev = bh1749_init(I2C_BUS, SENSOR_ADDR);
-	if (!dev) {
-        printf("bh1749_init() failed.\n");
-        return -1;
-    }
-
-	bh1749_soft_reset(dev);
-	bh1749_sensor_init(dev, INT_JUDGE_1, MEAS_240MS, RGB_GAIN_1X, IR_GAIN_1X, RED);
-	bh1749_set_threshold_high(dev, 511);
-	bh1749_enable_interrupt(dev);
-	printf("Installing ISR\n");
-	bh1749_install_isr(dev, MRAA_GPIO_EDGE_FALLING, 33, &print_data, (void *)dev);
-	bh1749_enable(dev);
-
-	while(!isStopped) {
-		upm_delay_ms(1000);
-	}
-
-	bh1749_close(dev);
-	return 0;
-}
\ No newline at end of file
diff --git a/examples/c/bh1750.c b/examples/c/bh1750.c
deleted file mode 100644
index a049dc9..0000000
--- a/examples/c/bh1750.c
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "bh1750.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a BH1750 sensor on default I2C bus (0), using the
-    // default I2C address (0x23), and setting the mode to highest
-    // resolution, lowest power mode.
-    bh1750_context sensor = bh1750_init(BH1750_DEFAULT_I2C_BUS,
-            BH1750_DEFAULT_I2C_ADDR,
-            BH1750_OPMODE_H2_ONCE);
-
-    if (!sensor)
-    {
-        printf("bh1750_init() failed.\n");
-        return 1;
-    }
-
-    // Every second, sample the BH1750 and output the measured lux value
-
-    while (shouldRun)
-    {
-        float lux;
-
-        bh1750_get_lux(sensor, &lux);
-        printf("Detected Light Level (lux): %f\n", lux);
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    bh1750_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/bh1792.c b/examples/c/bh1792.c
deleted file mode 100755
index 41eccef..0000000
--- a/examples/c/bh1792.c
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <stdio.h>
-#include <signal.h>
-#include "bh1792.h"
-#include  <sys/time.h>
-#include "upm_utilities.h"
-
-bool isStopped;
-#define SENSOR_ADDR 0x5b
-#define I2C_BUS 0
-
-void signal_int_handler(int signo)
-{
-    if (signo == SIGINT)
-        isStopped = true;
-}
-
-void print_data(void *args)
-{
-	bh1792_context dev = (bh1792_context)args;
-	uint16_t led_on[32], led_off[32];
-	struct timespec now;
-
-	clock_gettime(CLOCK_MONOTONIC_RAW, &now);
-
-	if(bh1792_get_fifo_data(dev, led_off, led_on) == UPM_SUCCESS) {
-		printf("\nFIFO data:\n");
-		for(int i = 0; i < 32; i++)
-			printf("%d: off: %d, on: %d\n", i, led_off[i], led_on[i]);
-			
-		printf("timestamp %ld sec, %ld nsec\n", now.tv_sec, now.tv_nsec);
-	}
-}
-
-int main(int argc, char **argv)
-{
-	float meas_time;
-
-	signal(SIGINT, signal_int_handler);
-
-	bh1792_context dev = bh1792_init(I2C_BUS, SENSOR_ADDR);
-	if (!dev) {
-        printf("bh1792_init() failed.\n");
-        return -1;
-    }
-
-	printf("Software reset\n");
-	bh1792_soft_reset(dev);
-
-	bh1792_enable_sync_mode(dev, 256, 32);
-	bh1792_install_isr(dev, MRAA_GPIO_EDGE_FALLING, 33, &print_data, dev);
-	bh1792_get_meas_time_ms(dev, &meas_time);
-	bh1792_start_measurement(dev);
-
-	printf("Heart beat sensor data\n");
-
-	while(!isStopped) {
-		usleep(meas_time * 1000);
-	}
-
-	bh1792_close(dev);
-	return 0;
-}
\ No newline at end of file
diff --git a/examples/c/biss0001.c b/examples/c/biss0001.c
deleted file mode 100644
index 034c625..0000000
--- a/examples/c/biss0001.c
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "biss0001.h"
-#include "upm_utilities.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-
-int main ()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a BISS0001 sensor on digital pin D2
-    biss0001_context sensor = biss0001_init(2);
-
-    if (!sensor)
-    {
-        printf("biss0001_init() failed.\n");
-        return(1);
-    }
-
-    while (shouldRun)
-    {
-        if (biss0001_motion_detected(sensor))
-            printf("Motion detected.\n");
-        else
-            printf("No motion detected.\n");
-
-        upm_delay(1);
-    }
-//! [Interesting]
-
-    printf("Exiting...\n");
-
-    biss0001_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/bma250e.c b/examples/c/bma250e.c
deleted file mode 100644
index aca8c8a..0000000
--- a/examples/c/bma250e.c
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "bma250e.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101_SSS)
-    // ARDUINO_101_SSS (ARC core) must use I2C
-    // Instantiate a BMA250E instance using default i2c bus and address
-    bma250e_context sensor = bma250e_init(BMA250E_DEFAULT_I2C_BUS,
-                                          BMA250E_DEFAULT_ADDR, -1);
-#elif defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) where you must use SPI
-    // Instantiate a BMA250E instance using default SPI bus and pin 10 as CS
-    bma250e_context sensor = bma250e_init(BMA250E_DEFAULT_SPI_BUS,
-                                          -1, 10);
-#else
-    // everything else use I2C by default
-    // Instantiate a BMA250E instance using default i2c bus and address
-    bma250e_context sensor = bma250e_init(BMA250E_DEFAULT_I2C_BUS,
-                                          BMA250E_DEFAULT_ADDR, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("bma250e_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (bma250e_update(sensor))
-        {
-            printf("bma250e_update() failed\n");
-            return 1;
-        }
-
-        bma250e_get_accelerometer(sensor, &x, &y, &z);
-        printf("Acceleration x: %f y: %f z: %f g\n",
-               x, y, z);
-
-        printf("Compensation Temperature: %f C\n\n",
-               bma250e_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    bma250e_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/bmg160.c b/examples/c/bmg160.c
deleted file mode 100644
index 09e725a..0000000
--- a/examples/c/bmg160.c
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "bmg160.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101_SSS)
-    // ARDUINO_101_SSS (ARC core) must use I2C
-    // Instantiate a BMG160 instance using default i2c bus and address
-    bmg160_context sensor = bmg160_init(BMG160_DEFAULT_I2C_BUS,
-                                        BMG160_DEFAULT_ADDR, -1);
-#elif defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) where you must use SPI
-    // Instantiate a BMG160 instance using default SPI bus and pin 10 as CS
-    bmg160_context sensor = bmg160_init(BMG160_DEFAULT_SPI_BUS,
-                                        -1, 10);
-#else
-    // everything else use I2C by default
-    // Instantiate a BMG160 instance using default i2c bus and address
-    bmg160_context sensor = bmg160_init(BMG160_DEFAULT_I2C_BUS,
-                                        BMG160_DEFAULT_ADDR, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("bmg160_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (bmg160_update(sensor))
-        {
-            printf("bmg160_update() failed\n");
-            return 1;
-        }
-
-        bmg160_get_gyroscope(sensor, &x, &y, &z);
-        printf("Gyroscope x: %f y: %f z: %f degrees/s\n",
-               x, y, z);
-
-        printf("Compensation Temperature: %f C\n\n",
-               bmg160_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    bmg160_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/bmi160.c b/examples/c/bmi160.c
deleted file mode 100644
index 6dace68..0000000
--- a/examples/c/bmi160.c
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "bmi160.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a BMI160 sensor on I2C bus 0, address 0x69, and
-    // disable the magnetometer (since it is an optional component
-    // that may not be present).  Since we are using I2C, pass a valid
-    // I2C address, and supply -1 as the cs_pin.
-    bmi160_context sensor = bmi160_init(0, 0x69, -1, false);
-
-    // For SPI, you would use something like this, using gpio 10 as
-    // the cs pin.  Passing -1 as the address indicates SPI operation.
-    //
-//    bmi160_context sensor = bmi160_init(0, -1, 10, false);
-
-    if (!sensor)
-    {
-        printf("bmi160_init() failed.\n");
-        return(1);
-    }
-
-    // Every half second, update and print values
-
-    while (shouldRun)
-    {
-        bmi160_update(sensor);
-
-        float x, y, z;
-
-        bmi160_get_accelerometer(sensor, &x, &y, &z);
-        printf("Acceleration x = %f y = %f z = %f\n",
-               x, y, z);
-
-        bmi160_get_gyroscope(sensor, &x, &y, &z);
-        printf("Gyroscope    x = %f y = %f z = %f\n",
-               x, y, z);
-
-        //bmi160_get_magnetometer(sensor, &x, &y, &z);
-        //printf("Magnetometer x = %f y = %f z = %f\n",
-        //       x, y, z);
-
-        printf("\n");
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting...\n");
-
-    bmi160_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/bmm150.c b/examples/c/bmm150.c
deleted file mode 100644
index b6e6390..0000000
--- a/examples/c/bmm150.c
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "bmm150.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101_SSS)
-    // ARDUINO_101_SSS (ARC core) must use I2C
-    // Instantiate a BMM150 instance using default i2c bus and address
-    bmm150_context sensor = bmm150_init(BMM150_DEFAULT_I2C_BUS,
-                                        BMM150_DEFAULT_ADDR, -1);
-#elif defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) where you must use SPI
-    // Instantiate a BMM150 instance using default SPI bus and pin 10 as CS
-    bmm150_context sensor = bmm150_init(BMM150_DEFAULT_SPI_BUS,
-                                        -1, 10);
-#else
-    // everything else use I2C by default
-    // Instantiate a BMM150 instance using default i2c bus and address
-    bmm150_context sensor = bmm150_init(BMM150_DEFAULT_I2C_BUS,
-                                        BMM150_DEFAULT_ADDR, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("bmm150_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (bmm150_update(sensor))
-        {
-            printf("bmm150_update() failed\n");
-            return 1;
-        }
-
-        bmm150_get_magnetometer(sensor, &x, &y, &z);
-        printf("Magnetometer x: %f y: %f z: %f uT\n",
-               x, y, z);
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    bmm150_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/bmp280-bme280.c b/examples/c/bmp280-bme280.c
deleted file mode 100644
index 3f3b923..0000000
--- a/examples/c/bmp280-bme280.c
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "bmp280.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-    // Instantiate a BME280 instance using default i2c bus and
-    // address.  We use the BMP280 driver to do all of our work, since
-    // the BMP280 and the BME280 are identical except for the fact
-    // that the BME280 includes a humidity sensor.
-    bmp280_context sensor = bmp280_init(BME280_DEFAULT_I2C_BUS,
-                                        BME280_DEFAULT_ADDR, -1);
-
-    if (!sensor)
-    {
-        printf("bmp280_init() failed\n");
-        return 1;
-    }
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-    // bmp280_init(BME280_DEFAULT_SPI_BUS,
-    //             -1, 10)
-
-    while (shouldRun)
-    {
-        // update our values from the sensor
-        if (bmp280_update(sensor))
-        {
-            printf("bmp280_update() failed\n");
-            bmp280_close(sensor);
-            return 1;
-        }
-
-        printf("Compensation Temperature: %f C\n",
-               bmp280_get_temperature(sensor));
-        printf("Pressure: %f Pa\n", bmp280_get_pressure(sensor));
-        printf("Computed Altitude: %f m\n", bmp280_get_altitude(sensor));
-        printf("Relative Humidity: %f %%\n\n", bmp280_get_humidity(sensor));
-
-        upm_delay(1);
-    }
-//! [Interesting]
-
-    printf("Exiting...\n");
-
-    bmp280_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/bmp280.c b/examples/c/bmp280.c
deleted file mode 100644
index d15912a..0000000
--- a/examples/c/bmp280.c
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "bmp280.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-    // Instantiate a BMP280 instance using default i2c bus and address
-    bmp280_context sensor = bmp280_init(BMP280_DEFAULT_I2C_BUS,
-                                        BMP280_DEFAULT_ADDR, -1);
-
-    if (!sensor)
-    {
-        printf("bmp280_init() failed\n");
-        return 1;
-    }
-
-    // For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-    // bmp280_init(BMP280_DEFAULT_SPI_BUS,
-    //             -1, 10)
-
-    while (shouldRun)
-    {
-        // update our values from the sensor
-        if (bmp280_update(sensor))
-        {
-            printf("bmp280_update() failed\n");
-            bmp280_close(sensor);
-            return 1;
-        }
-
-        printf("Compensation Temperature: %f C\n",
-               bmp280_get_temperature(sensor));
-        printf("Pressure: %f Pa\n", bmp280_get_pressure(sensor));
-        printf("Computed Altitude: %f m\n\n", bmp280_get_altitude(sensor));
-
-        upm_delay(1);
-    }
-
-    printf("Exiting...\n");
-
-    bmp280_close(sensor);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/bmpx8x.c b/examples/c/bmpx8x.c
deleted file mode 100644
index 88339f3..0000000
--- a/examples/c/bmpx8x.c
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "bmpx8x.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-    // Instantiate a BMPX8X instance using default i2c bus and address
-    bmpx8x_context sensor = bmpx8x_init(BMPX8X_DEFAULT_I2C_BUS,
-                                        BMPX8X_DEFAULT_I2C_ADDR);
-
-    if (!sensor)
-    {
-        printf("bmpx8x_init() failed.\n");
-        return 1;
-    }
-
-    // Print the pressure, altitude, sea level, and
-    // temperature values every 0.5 seconds
-    while (shouldRun)
-    {
-        if (bmpx8x_update(sensor))
-        {
-            printf("bmpx8x_update() failed\n");
-            bmpx8x_close(sensor);
-            return 1;
-        }
-
-        // assume sea level pressure is 101325 Pa.
-        float altitude = bmpx8x_get_altitude(sensor, 101325);
-        int   sealevel = bmpx8x_get_sealevel_pressure(sensor, altitude);
-
-        printf("Pressure: %d Pa, Temperature: %f C, "
-               "Altitude %f m, Sea level %d Pa\n",
-               bmpx8x_get_pressure(sensor),
-               bmpx8x_get_temperature(sensor),
-               altitude,
-               sealevel);
-
-        upm_delay_ms(500);
-    }
-
-    printf("Exiting...\n");
-    bmpx8x_close(sensor);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/bno055.c b/examples/c/bno055.c
deleted file mode 100644
index 3018594..0000000
--- a/examples/c/bno055.c
+++ /dev/null
@@ -1,119 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdbool.h>
-#include <stdio.h>
-#include <upm_utilities.h>
-
-#include <signal.h>
-#include "bno055.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-  signal(SIGINT, sig_handler);
-//! [Interesting]
-
-  // Initialize a BNO055 using default parameters (bus 0, addr
-  // 0x28).  The default running mode is NDOF absolute orientation
-  // mode.
-  bno055_context sensor = bno055_init(0, BNO055_DEFAULT_ADDR);
-
-  if (!sensor)
-  {
-      printf("bno055_init() failed.\n");
-      return 1;
-  }
-
-  // First we need to calibrate....
-  printf("First we need to calibrate.  4 numbers will be output every \n"
-         "second for each sensor.  0 means uncalibrated, and 3 means \n"
-         "fully calibrated.\n"
-         "See the UPM documentation on this sensor for instructions on \n"
-         "what actions are required to calibrate.\n");
-
-  // do the calibration...
-  while (shouldRun && !bno055_is_fully_calibrated(sensor))
-    {
-      int mag, acc, gyr, sys;
-      bno055_get_calibration_status(sensor, &mag, &acc, &gyr, &sys);
-
-      printf("Magnetometer: %d Accelerometer: %d Gyroscope: %d System: %d\n",
-             mag, acc, gyr, sys);
-
-      upm_delay(1);
-    }
-
-  printf("\nCalibration complete.\n\n");
-
-  // now output various fusion data every 250 milliseconds
-  while (shouldRun)
-    {
-      float w, x, y, z;
-
-      if (bno055_update(sensor))
-      {
-          printf("bno055_update() failed.\n");
-          return 1;
-      }
-
-      bno055_get_euler_angles(sensor, &x, &y, &z);
-      printf("Euler: Heading: %f Roll: %f Pitch: %f degrees\n",
-             x, y, z);
-
-      bno055_get_quaternions(sensor, &w, &x, &y, &z);
-      printf("Quaternion: W: %f X: %f Y: %f Z: %f\n",
-             w, x, y, z);
-
-      bno055_get_linear_acceleration(sensor, &x, &y, &z);
-      printf("Linear Acceleration: X: %f Y: %f Z: %f m/s^2\n",
-             x, y, z);
-
-      bno055_get_gravity_vectors(sensor, &x, &y, &z);
-      printf("Gravity Vector: X: %f Y: %f Z: %f m/s^2\n",
-             x, y, z);
-
-      printf("\n");
-      upm_delay_ms(250);
-    }
-
-//! [Interesting]
-
-  printf("Exiting...\n");
-
-  bno055_close(sensor);
-
-  return 0;
-}
diff --git a/examples/c/button-intr.c b/examples/c/button-intr.c
deleted file mode 100644
index 4da465c..0000000
--- a/examples/c/button-intr.c
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Authors: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2014 - 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "button.h"
-
-#include "upm_utilities.h"
-#include "mraa.h"
-
-int main()
-{
-    if (mraa_init() != MRAA_SUCCESS)
-    {
-        perror("Failed to initialize mraa\n");
-        return -1;
-    }
-
-    button_context dev = button_init(2);
-    bool abc = 0;
-    while(1){
-        if(button_get_value(dev, &abc) != UPM_SUCCESS){
-            printf("an error has occurred\n");
-        }
-        upm_delay(1);
-        printf("value retrieved: %d\n", abc);
-    }
-
-    return 0;
-}
diff --git a/examples/c/button.c b/examples/c/button.c
deleted file mode 100644
index cccdde7..0000000
--- a/examples/c/button.c
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Authors: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "button.h"
-
-#include "upm_utilities.h"
-#include "mraa.h"
-
-int counter;
-
-void button_isr(void *arg){
-    counter++;
-}
-
-int main()
-{
-    counter = 0;
-    if (mraa_init() != MRAA_SUCCESS)
-    {
-        perror("Failed to initialize mraa\n");
-        return -1;
-    }
-
-    button_context dev = button_init(2);
-
-    button_install_isr(dev, MRAA_GPIO_EDGE_RISING, button_isr, NULL);
-    while(1){
-        printf("Interrupts: %d\n", counter);
-        upm_delay(3);
-    }
-
-    return 0;
-}
diff --git a/examples/c/buzzer.c b/examples/c/buzzer.c
deleted file mode 100644
index 763354d..0000000
--- a/examples/c/buzzer.c
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <buzzer.h>
-
-
-int
-main(int argc, char **argv)
-{
-//! [Interesting]
-    int chord[] = { BUZZER_DO, BUZZER_RE, BUZZER_MI,
-                    BUZZER_FA, BUZZER_SOL, BUZZER_LA,
-                    BUZZER_SI };
-
-    // create Buzzer context, using PWM pin 5
-    buzzer_context sound = buzzer_init(5);
-
-    if (!sound)
-    {
-        printf("buzzer_init() failed\n");
-        return 1;
-    }
-
-    printf("Playing...\n");
-
-    // play each sound (DO, RE, MI, etc...) for .5 seconds, pausing
-    // for 0.1 seconds between notes
-    for (int chord_ind = 0; chord_ind < 7; chord_ind++)
-    {
-        buzzer_play_sound(sound, chord[chord_ind], 500000);
-        printf("%d\n", chord[chord_ind]);
-        upm_delay_ms(100);
-    }
-
-    printf("Exiting...\n");
-
-    buzzer_close(sound);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/cjq4435.c b/examples/c/cjq4435.c
deleted file mode 100644
index db52a1f..0000000
--- a/examples/c/cjq4435.c
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include "cjq4435.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main ()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a CJQ4435 MOSFET on a PWM capable digital pin D3
-    cjq4435_context mosfet = cjq4435_init(3);
-
-    if (!mosfet)
-    {
-        printf("cjq4435_init() failed.\n");
-        return 1;
-    }
-
-    cjq4435_set_period_ms(mosfet, 10);
-    cjq4435_enable(mosfet, true);
-
-    while (shouldRun)
-    {
-        // start with a duty cycle of 0.0 (off) and increment to 1.0 (on)
-        for (float i=0.0; i <= 1.0; i+=0.1)
-        {
-            cjq4435_set_duty_cycle(mosfet, i);
-            upm_delay_ms(100);
-        }
-        upm_delay(1);
-
-        // Now bring it back down
-        // start with a duty cycle of 1.0 (on) and decrement to 0.0 (off)
-        for (float i=1.0; i >= 0.0; i-=0.1)
-        {
-            cjq4435_set_duty_cycle(mosfet, i);
-            upm_delay_ms(100);
-        }
-        upm_delay(1);
-    }
-
-    printf("Exiting...\n");
-
-    cjq4435_close(mosfet);
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/collision.c b/examples/c/collision.c
deleted file mode 100644
index 5dee651..0000000
--- a/examples/c/collision.c
+++ /dev/null
@@ -1,24 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "collision.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    collision_context dev = collision_init(2);
-    bool abc = 0;
-    while(1){
-        if(collision_is_colliding(dev, &abc) != UPM_SUCCESS){
-            printf("an error has occurred\n");
-        }
-        upm_delay(1);
-        printf("value retrieved: %d\n", abc);
-    }
-    collision_close(dev);
-}
diff --git a/examples/c/dfrec.c b/examples/c/dfrec.c
deleted file mode 100644
index d555a5f..0000000
--- a/examples/c/dfrec.c
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "dfrec.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a DFRobot EC sensor on analog pin A0, with a ds18b20
-    // temperature sensor connected to UART 0, and a device index (for
-    // the ds1820b uart bus) of 0, and an analog reference voltage of
-    // 5.0.
-    dfrec_context sensor = dfrec_init(0, 0, 0, 5.0);
-
-    if (!sensor)
-    {
-        printf("dfrec_init() failed.\n");
-        return(1);
-    }
-
-    // Every 2 seconds, update and print values
-    while (shouldRun)
-    {
-        dfrec_update(sensor);
-
-        printf("EC = %f ms/cm\n", dfrec_get_ec(sensor));
-        printf("Volts = %f, Temperature = %f C\n",
-                dfrec_get_volts(sensor), dfrec_get_temperature(sensor));
-        printf("\n");
-
-        upm_delay(2);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting...\n");
-
-    dfrec_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/dfrorp.c b/examples/c/dfrorp.c
deleted file mode 100644
index 7a93318..0000000
--- a/examples/c/dfrorp.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "dfrorp.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a DFRobot ORP sensor on analog pin A0 with an analog
-    // reference voltage of 5.0.
-    dfrorp_context sensor = dfrorp_init(0, 5.0);
-
-    if (!sensor)
-    {
-        printf("dfrorp_init() failed.\n");
-        return(1);
-    }
-
-    // To calibrate:
-    //
-    // Disconnect the sensor probe (but leave the sensor interface board
-    // connected).  Then run one of the examples while holding down the
-    // 'calibrate' button on the device.  Read the ORP value reported
-    // (it should be fairly small).
-    //
-    // This value is what you should supply to
-    // dfrorp_set_orp_cal_offset().  Then reconnect the probe to the
-    // interface board and you should be ready to go.
-    //
-    // DO NOT press the calibrate button on the interface board while
-    // the probe is attached or you can permanently damage the probe.
-    dfrorp_set_calibration_offset(sensor, 0.97);
-
-    // Every second, update and print values
-    while (shouldRun)
-    {
-        dfrorp_update(sensor);
-
-        printf("ORP = %f mV\n", dfrorp_get_orp(sensor));
-
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting...\n");
-
-    dfrorp_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/dfrph.c b/examples/c/dfrph.c
deleted file mode 100644
index 218fd24..0000000
--- a/examples/c/dfrph.c
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "dfrph.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a dfrph sensor on analog pin A0
-    dfrph_context sensor = dfrph_init(0);
-
-    if (!sensor)
-    {
-        printf("dfrph_init() failed.\n");
-        return(1);
-    }
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float volts = 0.0, pH = 0.0;
-
-        dfrph_get_raw_volts(sensor, &volts);
-        dfrph_get_ph(sensor, &pH);
-
-        printf("Detected volts: %0.03f\n", volts);
-        printf("pH value: %0.03f\n", pH);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    dfrph_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/ds18b20.c b/examples/c/ds18b20.c
deleted file mode 100644
index 4efc442..0000000
--- a/examples/c/ds18b20.c
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "ds18b20.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    printf("Initializing...\n");
-
-    // Instantiate an DS18B20 instance using the uart 0
-    ds18b20_context sensor = ds18b20_init(0);
-
-    if (!sensor)
-    {
-        printf("ds18b20_init() failed.\n");
-        return(1);
-    }
-
-    printf("Found %d device(s)\n\n", ds18b20_devices_found(sensor));
-
-    // update and print available values every 2 seconds
-    while (shouldRun)
-    {
-        // update our values for all sensors
-        ds18b20_update(sensor, -1);
-
-        for (unsigned int i=0; i<ds18b20_devices_found(sensor); i++)
-        {
-            printf("Device %02d: Temperature: %f C\n",
-                    i, ds18b20_get_temperature(sensor, i));
-        }
-        printf("\n");
-
-        upm_delay(2);
-    }
-
-    printf("Exiting...\n");
-
-    ds18b20_close(sensor);
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/ecezo.c b/examples/c/ecezo.c
deleted file mode 100644
index 302fdb0..0000000
--- a/examples/c/ecezo.c
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <ecezo.h>
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a ECEZO sensor on uart 0 at 9600 baud.
-    ecezo_context sensor = ecezo_uart_init(0, 9600);
-
-    // For I2C, assuming the device is configured for address 0x64 on
-    // I2C bus 0, you could use something like:
-    //
-    // ecezo_context sensor = ecezo_i2c_init(0, 0x64);
-
-    if (!sensor)
-    {
-        printf("ecezo_init() failed.\n");
-        return 1;
-    }
-
-    while (shouldRun)
-    {
-        // this will take about 1 second to complete
-        if (ecezo_update(sensor))
-        {
-            printf("ecezo_update() failed\n");
-        }
-        else
-        {
-            printf("EC %f uS/cm, TDS %f mg/L, Salinity %f PSS-78, SG %f\n",
-                   ecezo_get_ec(sensor),
-                   ecezo_get_tds(sensor),
-                   ecezo_get_salinity(sensor),
-                   ecezo_get_sg(sensor));
-        }
-
-        upm_delay(5);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    ecezo_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/emg.c b/examples/c/emg.c
deleted file mode 100644
index 8692e1c..0000000
--- a/examples/c/emg.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "emg.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a emg sensor on analog pin A0
-    emg_context sensor = emg_init(0);
-
-    if (!sensor)
-    {
-        printf("emg_init() failed.\n");
-        return -1;
-    }
-
-    // Set the aref, scale, and offset
-    emg_set_aref(sensor, 5.0);
-    emg_set_scale(sensor, 1.0);
-    emg_set_offset(sensor, -.1);
-    printf("aRef: %0.03f scale: %0.03f offset: %0.03f\n\n",
-            emg_get_aref(sensor),
-            emg_get_scale(sensor),
-            emg_get_offset(sensor));
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float normalized = 0.0;
-        float raw_volts = 0.0;
-        float volts = 0.0;
-
-        emg_get_normalized(sensor, &normalized);
-        emg_get_raw_volts(sensor, &raw_volts);
-        emg_get_volts(sensor, &volts);
-
-        printf("Normalized output: %0.03f, raw emg sensor output: %0.03f v "
-                "adjusted output: %0.03f v\n", normalized, raw_volts, volts);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    emg_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/enc03r.c b/examples/c/enc03r.c
deleted file mode 100644
index dadd1a6..0000000
--- a/examples/c/enc03r.c
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <upm_platform.h>
-
-#include "enc03r.h"
-
-bool shouldRun = true;
-
-// The number of samples used for calibration
-#if defined(UPM_PLATFORM_ZEPHYR)
-# define CALIBRATION_SAMPLES 500
-#else
-# define CALIBRATION_SAMPLES 1000
-#endif
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-
-    // Instantiate a ENC03R on analog pin A0
-    enc03r_context sensor = enc03r_init(0, 5.0);
-
-    if (!sensor)
-    {
-        printf("%s: enc03r_init() failed\n", __FUNCTION__);
-        return 1;
-    }
-
-    // The first thing we need to do is calibrate the sensor.
-    printf("Please place the sensor in a stable location, and do not\n");
-    printf("move it while calibration takes place.\n");
-    printf("This may take a little time to complete.\n");
-
-    enc03r_calibrate(sensor, CALIBRATION_SAMPLES);
-    printf("Calibration complete.  Reference value: %f\n\n",
-           enc03r_calibration_value(sensor));
-
-    // Read the input and print both the raw value and the angular velocity,
-    // waiting 0.1 seconds between readings
-    while (shouldRun)
-    {
-        enc03r_update(sensor);
-
-        printf("Angular velocity: %f deg/s\n",
-               enc03r_angular_velocity(sensor));
-
-        upm_delay_ms(100);
-    }
-
-    printf("Exiting\n");
-
-    enc03r_close(sensor);
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/flex.c b/examples/c/flex.c
deleted file mode 100644
index 80144e0..0000000
--- a/examples/c/flex.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "flex.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a flex sensor on analog pin A0
-    flex_context sensor = flex_init(0);
-
-    if (!sensor)
-    {
-        printf("flex_init() failed.\n");
-        return -1;
-    }
-
-    // Set the aref, scale, and offset
-    flex_set_aref(sensor, 5.0);
-    flex_set_scale(sensor, 1.0);
-    flex_set_offset(sensor, -.1);
-    printf("aRef: %0.03f scale: %0.03f offset: %0.03f\n\n",
-            flex_get_aref(sensor),
-            flex_get_scale(sensor),
-            flex_get_offset(sensor));
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float normalized = 0.0;
-        float raw_volts = 0.0;
-        float volts = 0.0;
-
-        flex_get_normalized(sensor, &normalized);
-        flex_get_raw_volts(sensor, &raw_volts);
-        flex_get_volts(sensor, &volts);
-
-        printf("Normalized output: %0.03f, raw flex sensor output: %0.03f v "
-                "adjusted output: %0.03f v\n", normalized, raw_volts, volts);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    flex_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/gas-mqx.c b/examples/c/gas-mqx.c
deleted file mode 100644
index 4066953..0000000
--- a/examples/c/gas-mqx.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "mqx.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a mqx sensor on analog pin A0
-    mqx_context sensor = mqx_init(0);
-
-    if (!sensor)
-    {
-        printf("mqx_init() failed.\n");
-        return -1;
-    }
-
-    // Set the aref, scale, and offset
-    mqx_set_aref(sensor, 5.0);
-    mqx_set_scale(sensor, 1.0);
-    mqx_set_offset(sensor, -.1);
-    printf("aRef: %0.03f scale: %0.03f offset: %0.03f\n\n",
-            mqx_get_aref(sensor),
-            mqx_get_scale(sensor),
-            mqx_get_offset(sensor));
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float normalized = 0.0;
-        float raw_volts = 0.0;
-        float volts = 0.0;
-
-        mqx_get_normalized(sensor, &normalized);
-        mqx_get_raw_volts(sensor, &raw_volts);
-        mqx_get_volts(sensor, &volts);
-
-        printf("Normalized output: %0.03f, raw mqx sensor output: %0.03f v "
-                "adjusted output: %0.03f v\n", normalized, raw_volts, volts);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    mqx_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/gp2y0a.c b/examples/c/gp2y0a.c
deleted file mode 100644
index 453fb8a..0000000
--- a/examples/c/gp2y0a.c
+++ /dev/null
@@ -1,27 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "gp2y0a.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    gp2y0a_context dev = gp2y0a_init(14, 5.0);
-    float val;
-    while(1){
-        if(gp2y0a_get_value(dev, 5.0, 20, &val) != UPM_SUCCESS){
-            printf("Failed to get any values from the sensor\n");
-        }
-        printf("Moisture Value: %f\n", val);
-        upm_delay(1);
-    }
-    gp2y0a_close(dev);
-
-    return 0;
-}
-
diff --git a/examples/c/gsr.c b/examples/c/gsr.c
deleted file mode 100644
index e11f4fe..0000000
--- a/examples/c/gsr.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "gsr.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a gsr sensor on analog pin A0
-    gsr_context sensor = gsr_init(0);
-
-    if (!sensor)
-    {
-        printf("gsr_init() failed.\n");
-        return -1;
-    }
-
-    // Set the aref, scale, and offset
-    gsr_set_aref(sensor, 5.0);
-    gsr_set_scale(sensor, 1.0);
-    gsr_set_offset(sensor, -.1);
-    printf("aRef: %0.03f scale: %0.03f offset: %0.03f\n\n",
-            gsr_get_aref(sensor),
-            gsr_get_scale(sensor),
-            gsr_get_offset(sensor));
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float normalized = 0.0;
-        float raw_volts = 0.0;
-        float volts = 0.0;
-
-        gsr_get_normalized(sensor, &normalized);
-        gsr_get_raw_volts(sensor, &raw_volts);
-        gsr_get_volts(sensor, &volts);
-
-        printf("Normalized output: %0.03f, raw gsr sensor output: %0.03f v "
-                "adjusted output: %0.03f v\n", normalized, raw_volts, volts);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    gsr_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/guvas12d.c b/examples/c/guvas12d.c
deleted file mode 100644
index 9c984f4..0000000
--- a/examples/c/guvas12d.c
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <guvas12d.h>
-
-bool shouldRun = true;
-
-// analog voltage, usually 3.3 or 5.0
-#define GUVAS12D_AREF   5.0
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // This was tested with the Grove UV Sensor module.
-    // It has a sensing range from between 240-370nm.  It's strongest
-    // response is around 320-360nm.
-
-    // Instantiate a GUVAS12D on analog pin A0
-    guvas12d_context uv = guvas12d_init(0, GUVAS12D_AREF);
-
-    if (!uv)
-    {
-        printf("guvas12d_init() failed\n");
-        return 1;
-    }
-
-    // The higher the voltage the more intense the UV radiation.
-    while (shouldRun)
-    {
-        float volts = 0;
-        float intensity = 0;
-
-        if (guvas12d_get_volts(uv, &volts))
-        {
-            printf("guvas12d_get_volts() failed\n");
-            return 1;
-        }
-
-        if (guvas12d_get_intensity(uv, &intensity))
-        {
-            printf("guvas12d_get_intensity() failed\n");
-            return 1;
-        }
-
-        printf("Volts: %f, Intensity %f mW/m^2\n", volts, intensity);
-
-        upm_delay(1);
-    }
-
-    printf("Exiting\n");
-
-    guvas12d_close(uv);
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/hcsr04.c b/examples/c/hcsr04.c
deleted file mode 100644
index 8bc100d..0000000
--- a/examples/c/hcsr04.c
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-
-#include "upm_utilities.h"
-#include "hcsr04.h"
-
-int main() {
-    hcsr04_context dev = hcsr04_init(2,4);
-    if(dev == NULL) {
-        printf("Unable to intialize the sensor\n");
-        return 0;
-    }
-
-    double distance;
-    while(1) {
-        distance = hcsr04_get_distance(dev, HCSR04_CM);
-        printf("Distance detected: %f\n", distance);
-        upm_delay(1);
-    }
-
-    return 0;
-}
diff --git a/examples/c/hka5.c b/examples/c/hka5.c
deleted file mode 100644
index 380618d..0000000
--- a/examples/c/hka5.c
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "hka5.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a HKA5 sensor on uart 0.  We don't use the set or
-    // reset pins, so we pass -1 for them.
-    hka5_context sensor = hka5_init(0, -1, -1);
-
-    if (!sensor)
-    {
-        printf("hka5_init() failed.\n");
-        return 1;
-    }
-
-    // update once every 2 seconds and output data
-    while (shouldRun)
-    {
-        if (hka5_update(sensor) != UPM_SUCCESS)
-        {
-            printf("hka5_update() failed, exiting.\n");
-            shouldRun = false;
-        }
-
-        printf("PM 1  : %d ug/m3\n", hka5_get_pm1(sensor));
-        printf("PM 2.5: %d ug/m3\n", hka5_get_pm2_5(sensor));
-        printf("PM 10 : %d ug/m3\n", hka5_get_pm10(sensor));
-        printf("\n");
-
-        upm_delay(2);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    hka5_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/hmc5883l.c b/examples/c/hmc5883l.c
deleted file mode 100644
index afd1bfb..0000000
--- a/examples/c/hmc5883l.c
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Ported based on original C++ code by:
- * Author: Brendan Le Foll <brendan.le.foll@intel.com>
- * Contributions: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-
-#include "hmc5883l.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate an HMC8883L on I2C bus 0
-    hmc5883l_context sensor = hmc5883l_init(0);
-
-    if (!sensor)
-    {
-        printf("%s: hmc5883l_init() failed\n", __FUNCTION__);
-        return 1;
-    }
-
-    hmc5883l_set_declination(sensor, 0.2749); // Set your declination
-                                              // from true north in
-                                              // radians
-
-    // Print out the coordinates, heading, and direction every second
-    while (shouldRun)
-    {
-        hmc5883l_update(sensor); // Update the coordinates
-        const int16_t *pos = hmc5883l_coordinates(sensor);
-
-        printf("coor: %5d %5d %5d ", pos[0], pos[1], pos[2]);
-        printf("heading: %5.2f direction: %3.2f\n",
-               hmc5883l_heading(sensor), hmc5883l_direction(sensor));
-
-        upm_delay(1);
-    }
-
-    hmc5883l_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/ims.c b/examples/c/ims.c
deleted file mode 100644
index 654bdfa..0000000
--- a/examples/c/ims.c
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "ims.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    ims_context* sensor = ims_init(0, IMS_ADDRESS_DEFAULT);
-
-    if (!sensor)
-    {
-        printf("ims_init() failed\n");
-        return 1;
-    }
-
-    int i2c_addr_cur = IMS_ADDRESS_DEFAULT + 1;
-
-    // Every second, sample the sensor outputs
-    while (shouldRun)
-    {
-        uint16_t version, light, moisture, temp;
-
-        if (ims_get_version(sensor, &version) == UPM_SUCCESS &&
-            ims_get_light(sensor, &light) == UPM_SUCCESS &&
-            ims_get_moisture(sensor, &moisture) == UPM_SUCCESS &&
-            ims_get_temperature(sensor, &temp) == UPM_SUCCESS)
-            printf("Version: %d light: 0x%04x moisture: 0x%04x temp: %3.2f C\n",
-                    version, light, moisture, temp/10.0);
-        else
-        {
-            printf("Failed to read IMS sensor data...\n");
-            break;
-        }
-
-        // Change the address and continue
-        if (i2c_addr_cur >= 128) i2c_addr_cur = 1;
-        printf("Changing device address to 0x%02x\n", i2c_addr_cur);
-        if (ims_reset_i2c_address(sensor, i2c_addr_cur++) != UPM_SUCCESS)
-        {
-            printf("Failed to change IMS I2C address...\n");
-            break;
-        }
-        upm_delay(1);
-    }
-
-    //! [Interesting]
-    printf("Exiting\n");
-    ims_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/jhd1313m1.c b/examples/c/jhd1313m1.c
deleted file mode 100644
index dc7aa47..0000000
--- a/examples/c/jhd1313m1.c
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "jhd1313m1.h"
-#include "upm_utilities.h"
-#include "signal.h"
-#include "string.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    // initialize a JHD1313m1 on I2C bus 0, LCD address 0x3e, RGB
-    // address 0x62
-    jhd1313m1_context lcd = jhd1313m1_init(0, 0x3e, 0x62);
-
-    if (!lcd)
-    {
-        printf("jhd1313m1_i2c_init() failed\n");
-        return 1;
-    }
-
-    int ndx = 0;
-    char str[23];
-    uint8_t rgb[7][3] = {
-        {0xd1, 0x00, 0x00},
-        {0xff, 0x66, 0x22},
-        {0xff, 0xda, 0x21},
-        {0x33, 0xdd, 0x00},
-        {0x11, 0x33, 0xcc},
-        {0x22, 0x00, 0x66},
-        {0x33, 0x00, 0x44}};
-    while (shouldRun)
-    {
-        snprintf(str, sizeof(str), "Hello World %d", ndx);
-        // Alternate rows on the LCD
-        jhd1313m1_set_cursor(lcd, ndx%2, 0);
-        jhd1313m1_write(lcd, str, strlen(str));
-        // Change the color
-        uint8_t r = rgb[ndx%7][0];
-        uint8_t g = rgb[ndx%7][1];
-        uint8_t b = rgb[ndx%7][2];
-        jhd1313m1_set_color(lcd, r, g, b);
-        // Echo via printf
-        printf("Hello World %d rgb: 0x%02x%02x%02x\n", ndx++, r, g, b);
-
-        upm_delay(1);
-    }
-
-    jhd1313m1_close(lcd);
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/joystick12.c b/examples/c/joystick12.c
deleted file mode 100644
index aed71f1..0000000
--- a/examples/c/joystick12.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "joystick12.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a joystick12 sensor
-    //    X = Analog pin A0
-    //    Y = Analog pin A1
-    joystick12_context sensor = joystick12_init(0, 1);
-
-    if (!sensor)
-    {
-        printf("joystick12_init() failed.\n");
-        return -1;
-    }
-
-    printf("Press any key to zero joystick...\n");
-    getchar();
-
-    // Zero x and y axis
-    joystick12_zero(sensor);
-
-    printf("Hold the X axis to the far neg or pos value, then press a key...\n");
-    getchar();
-    joystick12_calibrate_x(sensor);
-    printf("Hold the Y axis to the far neg or pos value, then press a key...\n");
-    getchar();
-    joystick12_calibrate_y(sensor);
-
-    // Every half a second, sample the sensor output
-    float x, y;
-    while (shouldRun)
-    {
-        joystick12_get_value_x(sensor, &x);
-        joystick12_get_value_y(sensor, &y);
-
-        printf("X: %5.02f Y: %5.02f\n", x, y);
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    joystick12_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/kx122.c b/examples/c/kx122.c
deleted file mode 100644
index bde030b..0000000
--- a/examples/c/kx122.c
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Samuli Rissanen <samuli.rissanen@hotmail.com>
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <stdio.h>
-#include <unistd.h>
-#include <signal.h>
-
-#include "kx122.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if(signo == SIGINT){
-    shouldRun = false;
-  }
-}
-
-int main(int argc, char **argv)
-{
-  signal(SIGINT,sig_handler);
-
-  //! [Interesting]
-  kx122_context sensor = kx122_init(0, -1, 24, 10000);
-  if (!sensor)
-  {
-      printf("kx122_init() failed.\n");
-      return 1;
-  }
-
-  kx122_sensor_software_reset(sensor);
-  kx122_device_init(sensor,KX122_ODR_50,HIGH_RES,KX122_RANGE_2G);
-
-  float x,y,z;
-  int wait_time = (kx122_get_sample_period(sensor) * MICRO_S);
-  if (wait_time < 0) wait_time = 1000;
-
-  while(shouldRun){
-    kx122_get_acceleration_data(sensor,&x,&y,&z);
-
-    printf("%.02f | %.02f | %.02f\n",x,y,z);
-    upm_delay_us(wait_time);
-  }
-
-  kx122_close(sensor);
-  //! [Interesting]
-
-  return 0;
-}
diff --git a/examples/c/kxtj3.c b/examples/c/kxtj3.c
deleted file mode 100755
index 12cbe7e..0000000
--- a/examples/c/kxtj3.c
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-#include <unistd.h>
-#include <signal.h>
-#include "kxtj3.h"
-
-#define SENSOR_ADDR 0x0f
-#define I2C_BUS 0
-#define SAMPLE_COUNT 10
-
-bool isStopped = false;
-
-void signal_int_handler(int signo)
-{
-    if (signo == SIGINT)
-        isStopped = true;
-}
-
-void print_acceleration_data(kxtj3_context dev)
-{
-    float wait_time = kxtj3_get_acceleration_sampling_period(dev) * SECOND_IN_MICRO_S;
-    uint8_t sample_counter = 0;
-    float x, y, z;
-    while (sample_counter < SAMPLE_COUNT && !isStopped)
-    {
-        kxtj3_get_acceleration_data(dev, &x, &y, &z);
-        printf("%.02f | %.02f | %.02f\n", x, y, z);
-        usleep(wait_time);
-        sample_counter++;
-    }
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, signal_int_handler);
-
-    printf("Sensor init\n");
-    kxtj3_context dev = kxtj3_init(I2C_BUS, SENSOR_ADDR);
-    if (!dev)
-    {
-        printf("kxtj3_init() failed.\n");
-        return -1;
-    }
-
-    printf("Setting settings:\nODR: 25 Hz\nResolution: High\nAcceleration range: 16g with 14bits");
-    kxtj3_sensor_init(dev, KXTJ3_ODR_25, HIGH_RES, KXTJ3_RANGE_16G_14);
-    printf("Showing acceleration data:\n");
-    print_acceleration_data(dev);
-
-    printf("Closing sensor\n");
-    kxtj3_close(dev);
-    return 0;
-}
diff --git a/examples/c/lcdks.c b/examples/c/lcdks.c
deleted file mode 100644
index 07467ed..0000000
--- a/examples/c/lcdks.c
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-#include <stdio.h>
-
-#include "upm_utilities.h"
-#include "lcdks.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-
-    // Instantiate a LCDKS (LCD Keypad Shield) using default pins
-
-    // LCD connection:
-    // LCD RS pin to digital pin 8
-    // LCD Enable pin to digital pin 9
-    // LCD D4 pin to digital pin 4
-    // LCD D5 pin to digital pin 5
-    // LCD D6 pin to digital pin 6
-    // LCD D7 pin to digital pin 7
-    // Keypad analog pin 0
-    // Backlight GPIO -1 (disabled)
-
-    // NOTE: The default pins do not include support for a gpio
-    // controlled backlight.  If you need one, specify the correct pin
-    // as the last argument instead of -1.
-    lcdks_context lcd = lcdks_init(8, 9, 4, 5, 6, 7, 0, -1);
-
-    if (!lcd)
-    {
-        printf("lcdks_init() failed.\n");
-        return 1;
-    }
-
-
-    lcdks_set_cursor(lcd, 0, 0);
-    lcdks_write(lcd, "LCDKS driver", 12);
-    lcdks_set_cursor(lcd, 1, 2);
-    lcdks_write(lcd, "Hello World", 11);
-
-    // output current key value every second.
-    while (shouldRun)
-    {
-        printf("Button value: %f\n", lcdks_get_key_value(lcd));
-        upm_delay(1);
-    }
-
-    lcdks_close(lcd);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/lcm1602-i2c.c b/examples/c/lcm1602-i2c.c
deleted file mode 100644
index 5c16d30..0000000
--- a/examples/c/lcm1602-i2c.c
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "lcm1602.h"
-#include "upm_utilities.h"
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-    lcm1602_context lcd = lcm1602_i2c_init(0, 0x20, true, 16, 2);
-
-    if (!lcd)
-    {
-        printf("lcm1602_i2c_init() failed\n");
-        return 1;
-    }
-
-    lcm1602_set_cursor(lcd, 0, 0);
-    lcm1602_write(lcd, "Hello World 1", 13);
-
-    upm_delay(3);
-
-    lcm1602_set_cursor(lcd, 1, 0);
-    lcm1602_write(lcd, "Hello World 2", 13);
-
-    upm_delay(3);
-
-    lcm1602_close(lcd);
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/lcm1602-parallel.c b/examples/c/lcm1602-parallel.c
deleted file mode 100644
index 5b58474..0000000
--- a/examples/c/lcm1602-parallel.c
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include "lcm1602.h"
-#include "upm_utilities.h"
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-    // LCD connection:
-    // LCD RS pin to digital pin 8
-    // LCD Enable pin to digital pin 13
-    // LCD D4 pin to digital pin 2
-    // LCD D5 pin to digital pin 3
-    // LCD D6 pin to digital pin 4
-    // LCD D7 pin to digital pin 5
-    // (LCD R/W pin to ground - write only)
-    // columns 16, rows 2
-    lcm1602_context lcd = lcm1602_gpio_init(8, 13, 2, 3, 4, 5, 16, 2);
-
-    if (!lcd)
-    {
-        printf("lcm1602_gpio_init() failed\n");
-        return 1;
-    }
-
-    lcm1602_set_cursor(lcd, 0, 0);
-    lcm1602_write(lcd, "Hello World 1", 13);
-
-    upm_delay(3);
-
-    lcm1602_set_cursor(lcd, 1, 0);
-    lcm1602_write(lcd, "Hello World 2", 13);
-
-    upm_delay(3);
-
-    lcm1602_close(lcd);
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/ldt0028.c b/examples/c/ldt0028.c
deleted file mode 100644
index 1e96e65..0000000
--- a/examples/c/ldt0028.c
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "ldt0028.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a ldt0028 sensor on analog pin A0
-    ldt0028_context sensor = ldt0028_init(0);
-
-    if (!sensor)
-    {
-        printf("ldt0028_init() failed.\n");
-        return -1;
-    }
-
-    // Set the aref, scale, and offset
-    ldt0028_set_aref(sensor, 5.0);
-    ldt0028_set_scale(sensor, 1.0);
-    ldt0028_set_offset(sensor, -.1);
-    printf("aRef: %0.03f scale: %0.03f offset: %0.03f\n\n",
-            ldt0028_get_aref(sensor),
-            ldt0028_get_scale(sensor),
-            ldt0028_get_offset(sensor));
-
-    float normalized = 0.0;
-    float raw_volts = 0.0;
-    float volts = 0.0;
-
-    float norm_base = 0.1;
-
-    printf("Using normalized sensor output average == %f\n", norm_base);
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-
-        ldt0028_get_normalized(sensor, &normalized);
-        ldt0028_get_raw_volts(sensor, &raw_volts);
-        ldt0028_get_volts(sensor, &volts);
-
-        if (normalized > norm_base)
-        {
-            printf("Detected vibration!\n");
-            printf("Normalized output: %0.03f, raw ldt0028 sensor output: %0.03f v "
-                    "adjusted output: %0.03f v\n\n", normalized, raw_volts, volts);
-        }
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    ldt0028_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/led.c b/examples/c/led.c
deleted file mode 100644
index 45f05a9..0000000
--- a/examples/c/led.c
+++ /dev/null
@@ -1,27 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "led.h"
-
-#include "upm_utilities.h"
-
-int main(void)
-{
-    led_context dev = led_init(2);
-    while(1){
-        if(led_on(dev) != UPM_SUCCESS){
-            printf("problem turning the LED on\n");
-        }
-        upm_delay(1);
-        if(led_off(dev) != UPM_SUCCESS){
-            printf("problem turning the LED off\n");
-        }
-        upm_delay(1);
-    }
-    led_close(dev);
-    return 0;
-}
diff --git a/examples/c/light.c b/examples/c/light.c
deleted file mode 100644
index 0070fd2..0000000
--- a/examples/c/light.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "light.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a light sensor on analog pin A0
-    light_context sensor = light_init(0);
-
-    if (!sensor)
-    {
-        printf("light_init() failed.\n");
-        return -1;
-    }
-
-    // Set the aref, scale, and offset
-    light_set_aref(sensor, 5.0);
-    light_set_scale(sensor, 1.0);
-    light_set_offset(sensor, -.1);
-    printf("aRef: %0.03f scale: %0.03f offset: %0.03f\n\n",
-            light_get_aref(sensor),
-            light_get_scale(sensor),
-            light_get_offset(sensor));
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float normalized = 0.0;
-        float raw_volts = 0.0;
-        float lux = 0.0;
-
-        light_get_normalized(sensor, &normalized);
-        light_get_raw_volts(sensor, &raw_volts);
-        light_get_lux(sensor, &lux);
-
-        printf("Normalized output: %0.03f, raw light sensor output: %0.03f v "
-                "light output: %0.03f lux\n", normalized, raw_volts, lux);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    light_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/linefinder.c b/examples/c/linefinder.c
deleted file mode 100644
index 1a427a4..0000000
--- a/examples/c/linefinder.c
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include "linefinder.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-
-int main ()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a  Line Finder sensor on digital pin D2
-    linefinder_context sensor = linefinder_init(2);
-
-    if (!sensor)
-    {
-        printf("linefinder_init() failed\n");
-        return 1;
-    }
-
-    // check every second for the presence of white or black detection
-    while (shouldRun)
-    {
-        if (linefinder_white_detected(sensor))
-            printf("White detected.\n");
-        else
-            printf("Black detected.\n");
-
-        upm_delay(1);
-    }
-
-    printf("Exiting...\n");
-
-    linefinder_close(sensor);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/lis2ds12.c b/examples/c/lis2ds12.c
deleted file mode 100644
index 6a39558..0000000
--- a/examples/c/lis2ds12.c
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "lis2ds12.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101_SSS)
-    // ARDUINO_101_SSS (ARC core) must use I2C
-    // Instantiate a LIS2DS12 instance using default i2c bus and address
-    lis2ds12_context sensor = lis2ds12_init(LIS2DS12_DEFAULT_I2C_BUS,
-                                            LIS2DS12_DEFAULT_I2C_ADDR, -1);
-#elif defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) must use SPI
-    // Instantiate a LIS2DS12 instance using default SPI bus and pin 10 as CS
-    lis2ds12_context sensor = lis2ds12_init(LIS2DS12_DEFAULT_SPI_BUS,
-                                            -1, 10);
-#else
-    // everything else use I2C by default
-    // Instantiate a LIS2DS12 instance using default i2c bus and address
-    lis2ds12_context sensor = lis2ds12_init(LIS2DS12_DEFAULT_I2C_BUS,
-                                            LIS2DS12_DEFAULT_I2C_ADDR, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("lis2ds12_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (lis2ds12_update(sensor))
-        {
-            printf("lis2ds12_update() failed\n");
-            lis2ds12_close(sensor);
-            return 1;
-        }
-
-        lis2ds12_get_accelerometer(sensor, &x, &y, &z);
-        printf("Acceleration x: %f y: %f z: %f g\n",
-               x, y, z);
-
-        printf("Compensation Temperature: %f C\n\n",
-               lis2ds12_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    lis2ds12_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/lis3dh.c b/examples/c/lis3dh.c
deleted file mode 100644
index a75fa9e..0000000
--- a/examples/c/lis3dh.c
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Author: Alex Tereschenko <alext.mkrs@gmail.com>
- * Copyright (c) 2018 Alex Tereschenko.
- *
- * Based on LIS2DS12 example by
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <signal.h>
-#include <stdio.h>
-#include <unistd.h>
-
-#include "lis3dh.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void
-sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int
-main(int argc, char** argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101_SSS)
-    // ARDUINO_101_SSS (ARC core) must use I2C
-    // Instantiate a LIS3DH instance using default i2c bus and address
-    lis3dh_context sensor = lis3dh_init(LIS3DH_DEFAULT_I2C_BUS, LIS3DH_DEFAULT_I2C_ADDR, -1);
-#elif defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) must use SPI
-    // Instantiate a LIS3DH instance using default SPI bus and pin 10 as CS
-    lis3dh_context sensor = lis3dh_init(LIS3DH_DEFAULT_SPI_BUS, -1, 10);
-#else
-    // everything else use I2C by default
-    // Instantiate a LIS3DH instance using default i2c bus and address
-    lis3dh_context sensor = lis3dh_init(LIS3DH_DEFAULT_I2C_BUS, LIS3DH_DEFAULT_I2C_ADDR, -1);
-#endif
-
-    if (!sensor) {
-        printf("lis3dh_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun) {
-        float x, y, z;
-
-        if (lis3dh_update(sensor)) {
-            printf("lis3dh_update() failed\n");
-            lis3dh_close(sensor);
-            return 1;
-        }
-
-        lis3dh_get_accelerometer(sensor, &x, &y, &z);
-        printf("Acceleration x: %f y: %f z: %f g\n", x, y, z);
-
-        printf("Compensation Temperature: %f C\n\n", lis3dh_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    lis3dh_close(sensor);
-
-    //! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/lm35.c b/examples/c/lm35.c
deleted file mode 100644
index 7e2b549..0000000
--- a/examples/c/lm35.c
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-#include "lm35.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-  signal(SIGINT, sig_handler);
-
-//! [Interesting]
-
-  // Instantiate a LM35 on analog pin A0, with a default analog
-  // reference voltage of 5.0
-  lm35_context sensor = lm35_init(0, 5.0);
-
-  // Every half second, sample the sensor and output the temperature
-
-  while (shouldRun)
-    {
-        float temp;
-        if (lm35_get_temperature(sensor, &temp) != UPM_SUCCESS)
-        {
-            printf("lm35_get_temperature failed\n");
-            return 1;
-        }
-
-        printf("Temperature: %3.2f C\n", temp);
-
-        upm_delay_ms(500);
-    }
-
-//! [Interesting]
-
-  printf("Exiting\n");
-
-  lm35_close(sensor);
-
-  return 0;
-}
diff --git a/examples/c/loudness.c b/examples/c/loudness.c
deleted file mode 100644
index c032672..0000000
--- a/examples/c/loudness.c
+++ /dev/null
@@ -1,27 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "loudness.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    loudness_context dev = loudness_init(14);
-    int val;
-    while(1){
-        if(loudness_get_value(dev, &val) != UPM_SUCCESS){
-            printf("Failed to get any values from the sensor\n");
-        }
-        printf("Loudness Value: %d\n", val);
-        upm_delay(1);
-    }
-    loudness_close(dev);
-
-    return 0;
-}
-
diff --git a/examples/c/lsm303agr.c b/examples/c/lsm303agr.c
deleted file mode 100644
index 91920bb..0000000
--- a/examples/c/lsm303agr.c
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "lsm303agr.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-    // Instantiate a LSM303AGR instance using default i2c bus and addresses
-    lsm303agr_context sensor = lsm303agr_init(LSM303AGR_DEFAULT_I2C_BUS,
-                                              LSM303AGR_DEFAULT_ACC_ADDR,
-                                              LSM303AGR_DEFAULT_MAG_ADDR);
-
-    if (!sensor)
-    {
-        printf("lsm303agr_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (lsm303agr_update(sensor))
-        {
-            printf("lsm303agr_update() failed\n");
-            return 1;
-        }
-
-        lsm303agr_get_accelerometer(sensor, &x, &y, &z);
-        printf("Accelerometer x: %f y: %f z: %f g\n",
-               x, y, z);
-
-        lsm303agr_get_magnetometer(sensor, &x, &y, &z);
-        printf("Magnetometer x: %f y: %f z: %f uT\n",
-               x, y, z);
-
-        printf("Temperature: %f C\n\n", lsm303agr_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    lsm303agr_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/lsm303d.c b/examples/c/lsm303d.c
deleted file mode 100644
index ddaf5c9..0000000
--- a/examples/c/lsm303d.c
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "lsm303d.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-    // Instantiate a LSM303D instance using default i2c bus and addresses
-    lsm303d_context sensor = lsm303d_init(LSM303D_DEFAULT_I2C_BUS,
-                                          LSM303D_DEFAULT_I2C_ADDR);
-
-    if (!sensor)
-    {
-        printf("lsm303d_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (lsm303d_update(sensor))
-        {
-            printf("lsm303d_update() failed\n");
-            return 1;
-        }
-
-        lsm303d_get_accelerometer(sensor, &x, &y, &z);
-        printf("Accelerometer x: %f y: %f z: %f g\n",
-               x, y, z);
-
-        lsm303d_get_magnetometer(sensor, &x, &y, &z);
-        printf("Magnetometer x: %f y: %f z: %f uT\n",
-               x, y, z);
-
-        printf("Temperature: %f C\n\n", lsm303d_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    lsm303d_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/lsm6ds3h.c b/examples/c/lsm6ds3h.c
deleted file mode 100644
index 971eb27..0000000
--- a/examples/c/lsm6ds3h.c
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "lsm6ds3h.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101_SSS)
-    // ARDUINO_101_SSS (ARC core) must use I2C
-    // Instantiate a LSM6DS3H instance using default i2c bus and address
-    lsm6ds3h_context sensor = lsm6ds3h_init(LSM6DS3H_DEFAULT_I2C_BUS,
-                                            LSM6DS3H_DEFAULT_I2C_ADDR, -1);
-#elif defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) must use SPI
-    // Instantiate a LSM6DS3H instance using default SPI bus and pin 10 as CS
-    lsm6ds3h_context sensor = lsm6ds3h_init(LSM6DS3H_DEFAULT_SPI_BUS,
-                                            -1, 10);
-#else
-    // everything else use I2C by default
-    // Instantiate a LSM6DS3H instance using default i2c bus and address
-    lsm6ds3h_context sensor = lsm6ds3h_init(LSM6DS3H_DEFAULT_I2C_BUS,
-                                            LSM6DS3H_DEFAULT_I2C_ADDR, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("lsm6ds3h_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (lsm6ds3h_update(sensor))
-        {
-            printf("lsm6ds3h_update() failed\n");
-            lsm6ds3h_close(sensor);
-            return 1;
-        }
-
-        lsm6ds3h_get_accelerometer(sensor, &x, &y, &z);
-        printf("Acceleration x: %f y: %f z: %f g\n",
-               x, y, z);
-
-        lsm6ds3h_get_gyroscope(sensor, &x, &y, &z);
-        printf("Gyroscope x: %f y: %f z: %f dps\n",
-               x, y, z);
-
-        printf("Compensation Temperature: %f C\n\n",
-               lsm6ds3h_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    lsm6ds3h_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/lsm6dsl.c b/examples/c/lsm6dsl.c
deleted file mode 100644
index 8e69dc3..0000000
--- a/examples/c/lsm6dsl.c
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "lsm6dsl.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101_SSS)
-    // ARDUINO_101_SSS (ARC core) must use I2C
-    // Instantiate a LSM6DSL instance using default i2c bus and address
-    lsm6dsl_context sensor = lsm6dsl_init(LSM6DSL_DEFAULT_I2C_BUS,
-                                          LSM6DSL_DEFAULT_I2C_ADDR, -1);
-#elif defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) must use SPI
-    // Instantiate a LSM6DSL instance using default SPI bus and pin 10 as CS
-    lsm6dsl_context sensor = lsm6dsl_init(LSM6DSL_DEFAULT_SPI_BUS,
-                                          -1, 10);
-#else
-    // everything else use I2C by default
-    // Instantiate a LSM6DSL instance using default i2c bus and address
-    lsm6dsl_context sensor = lsm6dsl_init(LSM6DSL_DEFAULT_I2C_BUS,
-                                          LSM6DSL_DEFAULT_I2C_ADDR, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("lsm6dsl_init() failed.\n");
-        return 1;
-    }
-
-    // now output data every 250 milliseconds
-    while (shouldRun)
-    {
-        float x, y, z;
-
-        if (lsm6dsl_update(sensor))
-        {
-            printf("lsm6dsl_update() failed\n");
-            lsm6dsl_close(sensor);
-            return 1;
-        }
-
-        lsm6dsl_get_accelerometer(sensor, &x, &y, &z);
-        printf("Acceleration x: %f y: %f z: %f g\n",
-               x, y, z);
-
-        lsm6dsl_get_gyroscope(sensor, &x, &y, &z);
-        printf("Gyroscope x: %f y: %f z: %f dps\n",
-               x, y, z);
-
-        printf("Compensation Temperature: %f C\n\n",
-               lsm6dsl_get_temperature(sensor));
-
-        upm_delay_ms(250);
-    }
-
-    printf("Exiting...\n");
-
-    lsm6dsl_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/m24lr64e.c b/examples/c/m24lr64e.c
deleted file mode 100644
index b94254f..0000000
--- a/examples/c/m24lr64e.c
+++ /dev/null
@@ -1,31 +0,0 @@
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "m24lr64e.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    m24lr64e_context dev = m24lr64e_init(0, M24LR64E_USER_MODE);
-    int addr = M24LR64E_EEPROM_I2C_LENGTH-1;
-    printf("address being accessed: %d\n", addr);
-    uint8_t byte; 
-    if(m24lr64e_read_byte(dev, addr, &byte) != UPM_SUCCESS)
-        printf("error while reading value\n");
-    printf("value read from the device: %d\n", byte);
-    byte = ~byte;
-    printf("byte to be written: %d\n", byte);
-    if(m24lr64e_write_byte(dev, addr, byte) != UPM_SUCCESS)
-        printf("error while writing byte to the device\n");
-    uint8_t var;
-    if(m24lr64e_read_byte(dev, addr, &var) != UPM_SUCCESS)
-        printf("error while reading value back\n");
-    printf("new value at %d: %d\n", addr, var);
-    m24lr64e_close(dev);
-    printf("all done!!\n");
-
-    return 0;
-}
diff --git a/examples/c/max30100.c b/examples/c/max30100.c
deleted file mode 100644
index d489894..0000000
--- a/examples/c/max30100.c
+++ /dev/null
@@ -1,130 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "max30100.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-void my_sample_handler(max30100_value sample, void* arg)
-{
-    printf("My callback sample IR: %d R: %d\n",
-            sample.IR, sample.R);
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-    max30100_context* sensor = max30100_init(0);
-
-    if (!sensor)
-    {
-        printf("max30100_init() failed\n");
-        return -1;
-    }
-
-    /* Get the temperature */
-    float temp;
-    if (max30100_get_temperature(sensor, &temp) != UPM_SUCCESS)
-    {
-        printf("max30100_get_temperature failed\n");
-        goto max30100_exit;
-    }
-
-    /* Get the version */
-    uint16_t version;
-    if (max30100_get_version(sensor, &version) != UPM_SUCCESS)
-    {
-        printf("max30100_get_version failed\n");
-        goto max30100_exit;
-    }
-
-    printf("Temperature: %f C\n", temp);
-    printf("Version: 0x%04x\n", version);
-
-    /* Set high-res (50 Hz, 16-bit) */
-    if (max30100_set_high_res(sensor, true) != UPM_SUCCESS)
-    {
-        printf("max30100_set_high_res failed\n");
-        goto max30100_exit;
-    }
-
-    /* Set to sample SpO2 */
-    if (max30100_set_mode(sensor, MAX30100_MODE_SPO2_EN) != UPM_SUCCESS)
-    {
-        printf("max30100_set_mode failed\n");
-        goto max30100_exit;
-    }
-
-    /* Read continuously, stepping up the LED current every second,
-     * us GPIO 0 as the interrupt pin */
-    max30100_sample_continuous(sensor, 0, false, &my_sample_handler, sensor);
-    for (int i = MAX30100_LED_CURRENT_0_0_MA;
-         i <= MAX30100_LED_CURRENT_50_0_MA && shouldRun; i++)
-    {
-        /* Toggle the LED current */
-        printf("Setting LED current = %d\n", i);
-
-        if ( max30100_set_current(sensor, (MAX30100_LED_CURRENT)i,
-                    (MAX30100_LED_CURRENT)i) != UPM_SUCCESS )
-        {
-            printf("max30100_set_current failed\n");
-            goto max30100_exit;
-        }
-
-        upm_delay(1);
-    }
-
-    /* Read individual samples */
-    for (int i = 0; i < 10; i++)
-    {
-        max30100_value samp;
-        if (max30100_sample(sensor, &samp) != UPM_SUCCESS)
-        {
-            printf("max30100_sample failed\n");
-            goto max30100_exit;
-        }
-
-        printf("Single value IR: %d R: %d\n", samp.IR, samp.R);
-    }
-
-max30100_exit:
-    //! [Interesting]
-    printf("Exiting\n");
-    max30100_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/mb704x.c b/examples/c/mb704x.c
deleted file mode 100644
index 6a00752..0000000
--- a/examples/c/mb704x.c
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <mb704x.h>
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-
-    // Instantiate a MB704X sensor on i2c bus 0, address 112.
-    mb704x_context sensor = mb704x_init(0, 112);
-
-    if (!sensor)
-    {
-        printf("mb704x_init() failed.\n");
-        return 1;
-    }
-
-    while (shouldRun)
-    {
-        // this will take about 1 second to complete
-        int range = mb704x_get_range(sensor);
-        if (range < 0)
-        {
-            printf("Error getting range.\n");
-        }
-        else
-        {
-            printf("Range: %d cm\n", range);
-        }
-
-        upm_delay_ms(500);
-    }
-
-    printf("Exiting\n");
-
-    mb704x_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/mcp2515-txrx.c b/examples/c/mcp2515-txrx.c
deleted file mode 100644
index af07799..0000000
--- a/examples/c/mcp2515-txrx.c
+++ /dev/null
@@ -1,152 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-#include <upm_utilities.h>
-
-#include "mcp2515.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-    // by default we just receive packets
-    bool do_tx = false;
-
-    // if an argument is given, we will transmit packets
-    if (argc > 1)
-        do_tx = true;
-//! [Interesting]
-
-    // NOTE: This example assumes that only two devices are connected
-    // to the CAN bus, and that both devices are running this example;
-    // one in TX (transmit) mode, and one in RX (receive) mode.
-
-    // If this is not the case, then in rx mode you may see other
-    // packets from other devices, or not, depending on whether the
-    // speed is correct for the network.  In tx mode, errors may be
-    // generated on the bus, especially if the CAN bus speed does not
-    // match the rest of the network.
-
-    // You should start the receiver example first.  The transmitter
-    // example will fail after about 5 seconds (timeout) of not being
-    // able to transmit a message.
-
-    // Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-
-#if defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) where you must use SPI
-    // Instantiate a MCP2515 instance using default SPI bus and pin 10 as CS
-    mcp2515_context sensor = mcp2515_init(0, 10);
-#else
-    // Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-    mcp2515_context sensor = mcp2515_init(0, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("mcp2515_init() failed\n");
-        return 1;
-    }
-
-    // By default, after initialization, the baud rate is set to
-    // 50Kbps, and the mode is NORMAL, so we don't need to set any of
-    // that here.
-
-    if (!do_tx)
-        printf("RX mode, waiting for packets...\n");
-
-    // our TX payload.  If transmitting, the first number will be
-    // incremented (and rollover) on each transmission.
-    uint8_t myPayload[8] = {0, 1, 2, 3, 4, 5, 6, 7};
-
-    while (shouldRun)
-    {
-        if (do_tx)
-        {
-            // lets build up a packet and try loading it.
-            printf("Loading a packet of 8 numbers into a tx buffer...\n");
-            if (mcp2515_load_tx_buffer(sensor, MCP2515_TX_BUFFER0, 0,
-                                       false, false, myPayload, 8))
-            {
-                printf("mcp2515_load_tx_buffer() failed\n");
-                return 1;
-            }
-
-            // now lets try to transmit it
-            printf("Transmitting packet...\n");
-            upm_result_t rv = 0;
-            if ((rv = mcp2515_transmit_buffer(sensor, MCP2515_TX_BUFFER0,
-                                              true)))
-            {
-                printf("mcp2515_transmit_buffer() failed with code %d\n", rv);
-                return 1;
-            }
-
-            // increment the first number for each transmission
-            myPayload[0]++;
-            printf("Transmit successful\n\n");
-            upm_delay_ms(500);
-        }
-        else
-        {
-            // RX mode
-            // Look for a packet waiting for us in RXB0
-            if (mcp2515_rx_status_msgs(sensor) == MCP2515_RXMSG_RXB0)
-            {
-                printf("Packet received in RXB0, decoding...\n");
-
-                // now lets retrieve it
-                MCP2515_MSG_T msg;
-                if (mcp2515_get_rx_msg(sensor, MCP2515_RX_BUFFER0, &msg))
-                {
-                    printf("mcp2515_get_rx_msg() failed\n");
-                    return 1;
-                }
-                mcp2515_print_msg(sensor, &msg);
-                printf("\n");
-            }
-
-            upm_delay_ms(100);
-        }
-
-    }
-
-    printf("Exiting...\n");
-
-    mcp2515_close(sensor);
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/mcp2515.c b/examples/c/mcp2515.c
deleted file mode 100644
index a72db6e..0000000
--- a/examples/c/mcp2515.c
+++ /dev/null
@@ -1,107 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-
-#include "mcp2515.h"
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-
-#if defined(CONFIG_BOARD_ARDUINO_101)
-    // ARDUINO_101 (Quark core) where you must use SPI
-    // Instantiate a MCP2515 instance using default SPI bus and pin 10 as CS
-    mcp2515_context sensor = mcp2515_init(0, 10);
-#else
-    // Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-    mcp2515_context sensor = mcp2515_init(0, -1);
-#endif
-
-    if (!sensor)
-    {
-        printf("mcp2515_init() failed\n");
-        return 1;
-    }
-
-    printf("Setting loopback mode...\n");
-
-    // set the mode to loopback mode.  In loopback mode, transmitted
-    // packets are sent directly to an appropriate receive buffer
-    // without actually going out onto the CAN bus.
-    if (mcp2515_set_opmode(sensor, MCP2515_OPMODE_LOOPBACK))
-    {
-        printf("mcp2515_set_opmode(loopback) failed.\n");
-        return 1;
-    }
-
-    // lets build up a packet and try loading it.
-    uint8_t myPayload[8] = {0, 1, 2, 3, 4, 5, 6, 7};
-    printf("Loading a packet of 8 numbers (0-7) into a TX buffer...\n");
-    if (mcp2515_load_tx_buffer(sensor, MCP2515_TX_BUFFER0, 0, false, false,
-                               myPayload, 8))
-    {
-        printf("mcp2515_load_tx_buffer() failed\n");
-        return 1;
-    }
-
-    // now lets try to transmit it
-    printf("Transmitting packet...\n");
-    upm_result_t rv = 0;
-    if ((rv = mcp2515_transmit_buffer(sensor, MCP2515_TX_BUFFER0, true)))
-    {
-        printf("mcp2515_transmit_buffer() failed with code %d\n", rv);
-        return 1;
-    }
-
-    printf("Transmit successful\n");
-
-    // There should now be a packet waiting for us in RXB0
-    if (mcp2515_rx_status_msgs(sensor) == MCP2515_RXMSG_RXB0)
-    {
-        printf("Packet received in RXB0, decoding...\n");
-
-        // now lets retrieve it
-        MCP2515_MSG_T msg;
-        if (mcp2515_get_rx_msg(sensor, MCP2515_RX_BUFFER0, &msg))
-        {
-            printf("mcp2515_get_rx_msg() failed\n");
-            return 1;
-        }
-
-        mcp2515_print_msg(sensor, &msg);
-    }
-    else
-    {
-        printf("No packet found, how strange.\n");
-    }
-
-    printf("Exiting...\n");
-
-    mcp2515_close(sensor);
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/md-stepper.c b/examples/c/md-stepper.c
deleted file mode 100644
index 7f832c8..0000000
--- a/examples/c/md-stepper.c
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-
-#include <md.h>
-#include <upm_utilities.h>
-
-int main(int argc, char **argv)
-{
-  //! [Interesting]
-  // Instantiate an I2C Motor Driver on I2C bus 0
-
-  md_context stepper = md_init(MD_I2C_BUS, MD_DEFAULT_I2C_ADDR);
-
-  if (!stepper)
-  {
-      printf("md_init() failed\n");
-      return 1;
-  }
-
-  // This example demonstrates using the MD to drive a stepper motor
-
-  // configure it, for this example, we'll assume 200 steps per rev
-  md_config_stepper(stepper, 200, MD_STEP_MODE1);
-
-  // set for half a rotation
-  md_set_stepper_steps(stepper, 100);
-
-  // let it go - clockwise rotation, 10 RPM speed
-  md_enable_stepper(stepper, MD_STEP_DIR_CW, 10);
-
-  upm_delay(3);
-
-  // Now do it backwards...
-  md_set_stepper_steps(stepper, 100);
-  md_enable_stepper(stepper, MD_STEP_DIR_CCW, 10);
-
-  // now disable
-  md_disable_stepper(stepper);
-
-  printf("Exiting...\n");
-
-  md_close(stepper);
-  //! [Interesting]
-  return 0;
-}
diff --git a/examples/c/md.c b/examples/c/md.c
deleted file mode 100644
index 8839324..0000000
--- a/examples/c/md.c
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-
-#include <md.h>
-#include <upm_utilities.h>
-
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-  // Instantiate an I2C Motor Driver on I2C bus 0
-
-  md_context motors = md_init(MD_I2C_BUS, MD_DEFAULT_I2C_ADDR);
-
-  if (!motors)
-  {
-      printf("md_init() failed\n");
-      return 1;
-  }
-
-  // set direction to CW and set speed to 50%
-  printf("Spin M1 and M2 at half speed for 3 seconds\n");
-  md_set_motor_directions(motors, MD_DIR_CW, MD_DIR_CW);
-  md_set_motor_speeds(motors, 127, 127);
-
-  upm_delay(3);
-  // counter clockwise
-  printf("Reversing M1 and M2 for 3 seconds\n");
-  md_set_motor_directions(motors, MD_DIR_CCW, MD_DIR_CCW);
-  upm_delay(3);
-
-  printf("Stopping motors\n");
-  md_set_motor_speeds(motors, 0, 0);
-
-  printf("Exiting...\n");
-
-  md_close(motors);
-//! [Interesting]
-  return 0;
-}
diff --git a/examples/c/mma7361.c b/examples/c/mma7361.c
deleted file mode 100644
index a5f0625..0000000
--- a/examples/c/mma7361.c
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "mma7361.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a MMA7361 sensor on analog pins A0 (X), A1 (Y) A2
-    // (Z), selftest pin on D2, sleep pin on D3 nd an analog reference
-    // value of 5.0.  The freefall pin and the range pin are unused
-    // (-1).
-    mma7361_context sensor = mma7361_init(0, 1, 2, 2, 3, -1, -1, 5.0);
-
-    if (!sensor)
-    {
-        printf("mma7361_init() failed.\n");
-        return(1);
-    }
-
-    // 1.5g (true = 6g)
-    mma7361_set_range(sensor, false);
-
-    // Every 10th of a second, update and print values
-
-    while (shouldRun)
-    {
-        mma7361_update(sensor);
-
-        float x, y, z;
-
-        mma7361_get_acceleration(sensor, &x, &y, &z);
-        printf("Acceleration x = %f y = %f z = %f\n",
-                x, y, z);
-
-        mma7361_get_volts(sensor, &x, &y, &z);
-        printf("Volts x = %f y = %f z = %f\n\n",
-                x, y, z);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting...\n");
-
-    mma7361_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/mma7660.c b/examples/c/mma7660.c
deleted file mode 100644
index c74484d..0000000
--- a/examples/c/mma7660.c
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdlib.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "upm_utilities.h"
-#include "mma7660.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate an MMA7660 on I2C bus 0
-
-    mma7660_context accel = mma7660_init(MMA7660_DEFAULT_I2C_BUS,
-                                         MMA7660_DEFAULT_I2C_ADDR);
-
-    if (!accel)
-    {
-        printf("mma7660_init() failed\n");
-        return 1;
-    }
-
-    // place device in standby mode so we can write registers
-    mma7660_set_mode_standby(accel);
-
-    // enable 64 samples per second
-    mma7660_set_sample_rate(accel, MMA7660_AUTOSLEEP_64);
-
-    // place device into active mode
-    mma7660_set_mode_active(accel);
-
-    while (shouldRun)
-    {
-        float ax, ay, az;
-
-        mma7660_get_acceleration(accel, &ax, &ay, &az);
-        printf("Acceleration: x = %f y = %f z = %f\n\n",
-               ax, ay, az);
-
-        upm_delay_ms(500);
-    }
-
-    printf("Exiting...\n");
-
-    mma7660_close(accel);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/moisture.c b/examples/c/moisture.c
deleted file mode 100644
index 0315498..0000000
--- a/examples/c/moisture.c
+++ /dev/null
@@ -1,26 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "moisture.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    moisture_context dev = moisture_init(14);
-    int val;
-    while(1){
-        if(moisture_get_moisture(dev, &val) != UPM_SUCCESS){
-            printf("Failed to get any values from the sensor\n");
-        }
-        printf("Moisture Value: %d\n", val);
-        upm_delay(1);
-    }
-    moisture_close(dev);
-
-    return 0;
-}
diff --git a/examples/c/mpr121.c b/examples/c/mpr121.c
deleted file mode 100644
index d0773c4..0000000
--- a/examples/c/mpr121.c
+++ /dev/null
@@ -1,32 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "mpr121.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    mpr121_context dev = mpr121_init(MPR121_I2C_BUS, MPR121_DEFAULT_I2C_ADDR);
-
-    if(mpr121_config_an3944(dev) != UPM_SUCCESS){
-        printf("unable to configure device\n");
-    }
-    uint32_t states;
-    while(1){
-        if(mpr121_read_buttons(dev, &states, 0) != UPM_SUCCESS){
-            printf("Error while reading button values\n");
-        }
-        printf("retrieved button states: %d\n", states);
-        upm_delay(1);
-    }
-
-    mpr121_close(dev);
-    printf("all done!!\n");
-
-    return 0;
-}
diff --git a/examples/c/mq303a.c b/examples/c/mq303a.c
deleted file mode 100644
index 87bedf5..0000000
--- a/examples/c/mq303a.c
+++ /dev/null
@@ -1,26 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "mq303a.h"
-
-#include "upm_utilities.h"
-
-int main() {
-    /* --------- MQ303A EXAMPLE -------- */
-    mq303a_context dev = mq303a_init(0, 15);
-    printf("init done for mq303a\n");
-    int value;
-    mq303a_heater_enable(dev, true);
-    upm_delay(12);
-    while(1){
-        mq303a_get_value(dev, &value);
-        printf("returned value: %d\n", value);
-        upm_delay(1);
-    }
-
-    return 0;
-}
diff --git a/examples/c/ms5803.c b/examples/c/ms5803.c
deleted file mode 100644
index dfdc56d..0000000
--- a/examples/c/ms5803.c
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "ms5803.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-  signal(SIGINT, sig_handler);
-
-//! [Interesting]
-
-  // Instantiate a MS5803 on analog I2C bus 0, at the default address
-  ms5803_context sensor = ms5803_init(0, MS5803_DEFAULT_I2C_ADDR, -1);
-
-  if (!sensor)
-  {
-      printf("ms5803_init() failed\n");
-      return 1;
-  }
-
-  // Every second, sample the sensor and output the pressure and
-  // temperature
-
-  while (shouldRun)
-    {
-        if (ms5803_update(sensor))
-        {
-            printf("ms5803_update() failed\n");
-        }
-
-        printf("Temperature: %f C, Pressure = %f mbar\n",
-               ms5803_get_temperature(sensor),
-               ms5803_get_pressure(sensor));
-
-        upm_delay(1);
-    }
-
-//! [Interesting]
-
-  printf("Exiting\n");
-
-  ms5803_close(sensor);
-
-  return 0;
-}
diff --git a/examples/c/my9221.c b/examples/c/my9221.c
deleted file mode 100644
index 0c461b1..0000000
--- a/examples/c/my9221.c
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <my9221.h>
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main ()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-
-    // Instantiate a GroveLEDBar, we use D8 for the data, and D9 for the
-    // clock.  We only use a single instance.
-    my9221_context leds = my9221_init(8, 9, 1);
-
-    if (!leds)
-    {
-        printf("my9221_init() failed\n");
-        return 1;
-    }
-
-    while (shouldRun)
-    {
-        // count up
-        printf("Counting up: ");
-        for (int i=0; i<my9221_get_max_leds(leds); i++)
-        {
-            printf("%d ", i);
-            my9221_clear_all(leds);
-            my9221_set_led(leds, i, true);
-            upm_delay_ms(100);
-        }
-        printf("\n");
-        upm_delay_ms(100);
-
-        // count down
-        printf("Counting down: ");
-        for (int i=my9221_get_max_leds(leds) - 1; i>=0; i--)
-        {
-            printf("%d ", i);
-            my9221_clear_all(leds);
-            my9221_set_led(leds, i, true);
-            upm_delay_ms(100);
-        }
-        printf("\n");
-        upm_delay_ms(100);
-    }
-
-    printf("Exiting...\n");
-
-    my9221_close(leds);
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/nmea_gps-i2c.c b/examples/c/nmea_gps-i2c.c
deleted file mode 100644
index a8191ef..0000000
--- a/examples/c/nmea_gps-i2c.c
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "nmea_gps.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-const size_t bufferLength = 128;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a NMEA_GPS UBLOX based i2c sensor on i2c bus 0 at
-    // address 0x42
-    nmea_gps_context sensor = nmea_gps_init_ublox_i2c(0, 0x42);
-
-    if (!sensor)
-    {
-        printf("nmea_gps_init_ublox_i2c() failed.\n");
-        return 1;
-    }
-
-    char buffer[bufferLength];
-    int rv = 0;
-
-    // loop, dumping NMEA data out as fast as it comes in
-    while (shouldRun)
-    {
-        if (!nmea_gps_data_available(sensor, 0))
-            upm_delay_ms(500);
-        else
-        {
-            if ((rv = nmea_gps_read(sensor, buffer, bufferLength)) >= 0)
-            {
-                int i;
-                for (i=0; i<rv; i++)
-                    printf("%c", buffer[i]);
-            }
-        }
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    nmea_gps_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/nmea_gps.c b/examples/c/nmea_gps.c
deleted file mode 100644
index 30c1773..0000000
--- a/examples/c/nmea_gps.c
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "nmea_gps.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-const size_t bufferLength = 256;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a NMEA_GPS sensor on uart 0 at 9600 baud with enable
-    // pin on D3.  If you do not need an enable pin, you can specify -1.
-    nmea_gps_context sensor = nmea_gps_init(0, 9600, 3);
-
-    if (!sensor)
-    {
-        printf("nmea_gps_init() failed.\n");
-        return 1;
-    }
-
-    char buffer[bufferLength];
-    int rv = 0;
-
-    // loop, dumping NMEA data out as fast as it comes in
-    while (shouldRun && nmea_gps_data_available(sensor, 5000))
-    {
-        if ((rv = nmea_gps_read(sensor, buffer, bufferLength)) >= 0)
-        {
-            int i;
-            for (i=0; i<rv; i++)
-                printf("%c", buffer[i]);
-        }
-    }
-
-    if (shouldRun)
-        printf("Timed out\n");
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    nmea_gps_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/nunchuck.c b/examples/c/nunchuck.c
deleted file mode 100644
index c95fdd9..0000000
--- a/examples/c/nunchuck.c
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include "nunchuck.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a nunchuck controller bus 3
-    nunchuck_context sensor = nunchuck_init(3);
-
-    if (!sensor)
-    {
-        printf("%s: nunchuck_init() failed\n", __FUNCTION__);
-        return 1;
-    }
-
-    while (shouldRun)
-    {
-        if (nunchuck_update(sensor))
-        {
-            printf("%s: nunchuck_update() failed\n", __FUNCTION__);
-            nunchuck_close(sensor);
-            return 1;
-        }
-
-        int x, y, z;
-        nunchuck_get_stick(sensor, &x, &y);
-        printf("stickX: %d stickY: %d\n", x, y);
-
-        nunchuck_get_acceleration(sensor, &x, &y, &z);
-        printf("accelX: %d accelY: %d accelZ: %d\n", x, y, z);
-
-        bool bc, bz;
-        nunchuck_get_buttons(sensor, &bc, &bz);
-        printf("button C: %s\n",
-               ((bc) ? "pressed" : "not pressed"));
-        printf("button Z: %s\n\n",
-               ((bz) ? "pressed" : "not pressed"));
-
-        upm_delay_ms(100);
-    }
-
-    nunchuck_close(sensor);
-
-    //! [Interesting]
-    return 0;
-}
diff --git a/examples/c/o2.c b/examples/c/o2.c
deleted file mode 100644
index 2102498..0000000
--- a/examples/c/o2.c
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "o2.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a o2 sensor on analog pin A0
-    o2_context sensor = o2_init(0);
-
-    if (!sensor)
-    {
-        printf("o2_init() failed.\n");
-        return -1;
-    }
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float raw_volts = 0.0;
-        float o2_percent = 0.0;
-
-        o2_get_raw_volts(sensor, &raw_volts);
-        o2_get_value(sensor, &o2_percent);
-
-        printf("O2 raw volts: %0.03f v, o2: %0.03f %%\n",
-                raw_volts, o2_percent);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    o2_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/otp538u.c b/examples/c/otp538u.c
deleted file mode 100644
index 339a57b..0000000
--- a/examples/c/otp538u.c
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <otp538u.h>
-
-
-bool shouldRun = true;
-
-// analog voltage, usually 3.3 or 5.0
-#define OTP538U_AREF   5.0
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-
-    // Instantiate a OTP538U on analog pins A0 and A1
-    // A0 is used for the Ambient Temperature and A1 is used for the
-    // Object temperature.
-    otp538u_context temps = otp538u_init(0, 1, OTP538U_AREF);
-
-    // enable debugging if you would like
-    // otp538u_set_debug(temps, true);
-
-    // Output ambient and object temperatures
-    while (shouldRun)
-    {
-        float ambient = 0, object = 0;
-
-        if (otp538u_get_ambient_temperature(temps, &ambient))
-            printf("otp538u_get_ambient_temperature() failed\n");
-        else if (otp538u_get_object_temperature(temps, &object))
-            printf("otp538u_get_object_temperature() failed\n");
-        else
-            printf("Ambient temp: %f C, Object temp: %f C\n",
-                   ambient, object);
-
-        printf("\n");
-        upm_delay(1);
-    }
-
-    printf("Exiting\n");
-
-    otp538u_close(temps);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/ppd42ns.c b/examples/c/ppd42ns.c
deleted file mode 100644
index 013029f..0000000
--- a/examples/c/ppd42ns.c
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <ppd42ns.h>
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a dust sensor on GPIO pin D8
-    ppd42ns_context dust = ppd42ns_init(8);
-
-    ppd42ns_dust_data data;
-    printf("This program will give readings every 30 seconds until "
-           "you stop it\n");
-
-    while (shouldRun)
-    {
-        data = ppd42ns_get_data(dust);
-        printf("Low pulse occupancy: %d\n", data.lowPulseOccupancy);
-        printf("Ratio: %f\n", data.ratio);
-        printf("Concentration: %f\n\n", data.concentration);
-    }
-
-    printf("Exiting...\n");
-
-    ppd42ns_close(dust);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/rn2903-p2p-rx.c b/examples/c/rn2903-p2p-rx.c
deleted file mode 100644
index 5aa535f..0000000
--- a/examples/c/rn2903-p2p-rx.c
+++ /dev/null
@@ -1,137 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <string.h>
-#include <signal.h>
-
-#include "rn2903.h"
-#include "upm_utilities.h"
-#include "upm_platform.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-#if defined(UPM_PLATFORM_ZEPHYR) && !defined(CONFIG_STDOUT_CONSOLE)
-# define printf printk
-#endif
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-
-    char *defaultDev = "/dev/ttyUSB0";
-    if (argc > 1)
-        defaultDev = argv[1];
-
-    printf("Using device: %s\n", defaultDev);
-
-    // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-#if defined(UPM_PLATFORM_ZEPHYR)
-    rn2903_context sensor = rn2903_init(0, RN2903_DEFAULT_BAUDRATE);
-#else
-    rn2903_context sensor = rn2903_init_tty(defaultDev,
-                                            RN2903_DEFAULT_BAUDRATE);
-#endif
-
-    // To use an internal UART understood by MRAA, use the following
-    // to inititialize rather than the above, which by default uses a
-    // tty path.
-    //
-    // rn2903_context sensor = rn2903_init(0, RN2903_DEFAULT_BAUDRATE);
-
-    if (!sensor)
-    {
-        printf("rn2903_init_tty() failed.\n");
-        return 1;
-    }
-
-    // enable debugging
-    // rn2903_set_debug(sensor, true);
-
-    // get version
-    if (rn2903_command(sensor, "sys get ver"))
-    {
-        printf("Failed to retrieve device version string\n");
-        rn2903_close(sensor);
-        return 1;
-    }
-    printf("Firmware version: %s\n", rn2903_get_response(sensor));
-
-    printf("Hardware EUI: %s\n", rn2903_get_hardware_eui(sensor));
-
-    // For this example, we will just try to receive a packet
-    // transmitted by the p2p-tx rn2903 example.  We reset the
-    // device to defaults, and we do not make any adjustments to the
-    // radio configuration.  You will probably want to do so for a
-    // real life application.
-
-    // The first thing to do is to suspend the LoRaWAN stack on the device.
-    if (rn2903_mac_pause(sensor))
-    {
-        printf("Failed to pause the LoRaWAN stack\n");
-        rn2903_close(sensor);
-        return 1;
-    }
-
-    // We will use continuous mode (window_size 0), though the default
-    // radio watch dog timer will expire every 15 seconds.  We will
-    // just loop here.
-    while (shouldRun)
-    {
-        printf("Waiting for packet...\n");
-        RN2903_RESPONSE_T rv;
-        rv = rn2903_radio_rx(sensor, 0);
-        if (rv)
-        {
-            printf("rn2903_radio_rx() failed with code (%d)\n", rv);
-        }
-        else
-        {
-            const char *resp = rn2903_get_response(sensor);
-            const char *payload = rn2903_get_radio_rx_payload(sensor);
-            if (!payload)
-                printf("Got response: '%s'\n", resp);
-            else
-                printf("Got payload: '%s'\n",
-                       rn2903_from_hex(sensor, payload));
-        }
-
-        printf("\n");
-    }
-
-    printf("Exiting\n");
-
-    rn2903_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/rn2903-p2p-tx.c b/examples/c/rn2903-p2p-tx.c
deleted file mode 100644
index 229e7b2..0000000
--- a/examples/c/rn2903-p2p-tx.c
+++ /dev/null
@@ -1,139 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <string.h>
-#include <signal.h>
-
-#include "rn2903.h"
-#include "upm_utilities.h"
-#include "upm_platform.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-#if defined(UPM_PLATFORM_ZEPHYR) && !defined(CONFIG_STDOUT_CONSOLE)
-# define printf printk
-#endif
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-
-    char *defaultDev = "/dev/ttyUSB0";
-    if (argc > 1)
-        defaultDev = argv[1];
-
-    printf("Using device: %s\n", defaultDev);
-
-    // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-#if defined(UPM_PLATFORM_ZEPHYR)
-    rn2903_context sensor = rn2903_init(0, RN2903_DEFAULT_BAUDRATE);
-#else
-    rn2903_context sensor = rn2903_init_tty(defaultDev,
-                                            RN2903_DEFAULT_BAUDRATE);
-#endif
-
-    // To use an internal UART understood by MRAA, use the following
-    // to inititialize rather than the above, which by default uses a
-    // tty path.
-    //
-    // rn2903_context sensor = rn2903_init(0, RN2903_DEFAULT_BAUDRATE);
-
-    if (!sensor)
-    {
-        printf("rn2903_init_tty() failed.\n");
-        return 1;
-    }
-
-    // enable debugging
-    // rn2903_set_debug(sensor, true);
-
-    // get version
-    if (rn2903_command(sensor, "sys get ver"))
-    {
-        printf("Failed to retrieve device version string\n");
-        rn2903_close(sensor);
-        return 1;
-    }
-    printf("Firmware version: %s\n", rn2903_get_response(sensor));
-
-    printf("Hardware EUI: %s\n", rn2903_get_hardware_eui(sensor));
-
-    // For this example, we will just try transmitting a packet over
-    // LoRa.  We reset the device to defaults, and we do not make any
-    // adjustments to the radio configuration.  You will probably want
-    // to do so for a real life application.
-
-    // The first thing to do is to suspend the LoRaWAN stack on the device.
-    if (rn2903_mac_pause(sensor))
-    {
-        printf("Failed to pause the LoRaWAN stack\n");
-        rn2903_close(sensor);
-        return 1;
-    }
-
-    // the default radio watchdog timer is set for 15 seconds, so we
-    // will send a packet every 10 seconds.  In reality, local
-    // restrictions limit the amount of time on the air, so in a real
-    // implementation, you would not want to send packets that
-    // frequently.
-
-    int count = 0;
-    while (shouldRun)
-    {
-        char pingbuf[32] = {};
-        snprintf(pingbuf, 32, "Ping %d", count++);
-        // All payloads must be hex encoded
-        const char *payload = rn2903_to_hex(sensor, pingbuf, strlen(pingbuf));
-
-        printf("Transmitting a packet, data: '%s' -> hex: '%s'\n",
-               pingbuf, payload);
-
-        RN2903_RESPONSE_T rv;
-        rv = rn2903_radio_tx(sensor, payload);
-
-        if (rv == RN2903_RESPONSE_OK)
-            printf("Transmit successful.\n");
-        else
-            printf("Transmit failed with code %d.\n", rv);
-
-        printf("\n");
-        upm_delay(10);
-    }
-
-    printf("Exiting\n");
-
-    rn2903_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/rn2903.c b/examples/c/rn2903.c
deleted file mode 100644
index 3b0e550..0000000
--- a/examples/c/rn2903.c
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <string.h>
-
-#include "rn2903.h"
-#include "upm_utilities.h"
-#include "upm_platform.h"
-
-#if defined(UPM_PLATFORM_ZEPHYR) && !defined(CONFIG_STDOUT_CONSOLE)
-# define printf printk
-#endif
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-
-    char *defaultDev = "/dev/ttyUSB0";
-    if (argc > 1)
-        defaultDev = argv[1];
-
-    printf("Using device: %s\n", defaultDev);
-
-    // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-#if defined(UPM_PLATFORM_ZEPHYR)
-    rn2903_context sensor = rn2903_init(0, RN2903_DEFAULT_BAUDRATE);
-#else
-    rn2903_context sensor = rn2903_init_tty(defaultDev,
-                                            RN2903_DEFAULT_BAUDRATE);
-#endif
-
-    // To use an internal UART understood by MRAA, use the following
-    // to inititialize rather than the above, which by default uses a
-    // tty path.
-    //
-    // rn2903_context sensor = rn2903_init(0, RN2903_DEFAULT_BAUDRATE);
-
-    if (!sensor)
-    {
-        printf("rn2903_init_tty() failed.\n");
-        return 1;
-    }
-
-    // enable debugging
-    // rn2903_set_debug(sensor, true);
-
-    // get version
-    if (rn2903_command(sensor, "sys get ver"))
-    {
-        printf("Failed to retrieve device version string\n");
-        rn2903_close(sensor);
-        return 1;
-    }
-    printf("Firmware version: %s\n", rn2903_get_response(sensor));
-
-    printf("Hardware EUI: %s\n", rn2903_get_hardware_eui(sensor));
-
-    // we can support two types of join, OTAA and ABP. Each requires
-    // that certain parameters be set first.  We will only attempt ABP
-    // joining with this example since it's the only one that can
-    // succeed without actual configuration.  In both cases, if you
-    // are actually attempting to join a real LoRaWAN network, you
-    // must change the parameters below to match the network you are
-    // attempting to join.
-
-    // For OTAA, you need to supply valid Device EUI, Application EUI,
-    // and Application key:
-    //
-    // rn2903_set_device_eui(sensor, "0011223344556677");
-    // rn2903_set_application_eui(sensor, "0011223344556677");
-    // rn2903_set_application_key(sensor, "01234567012345670123456701234567");
-    //
-    // RN2903_JOIN_STATUS_T rv = rn2903_join(sensor, RN2903_JOIN_TYPE_OTAA);
-    // A successful join will return RN2903_JOIN_STATUS_ACCEPTED (0).
-    // printf("JOIN: got rv %d\n", rv);
-
-    // Try an ABP join.  Note, these parameters are made up.  For a
-    // real network, you will want to use the correct values
-    // obviously.  For an ABP join, you need to supply the Device
-    // Address, Network Session Key, and the Application Session Key.
-
-    rn2903_set_device_addr(sensor, "00112233");
-    rn2903_set_network_session_key(sensor, "00112233001122330011223300112233");
-    rn2903_set_application_session_key(sensor,
-                                       "00112233001122330011223300112233");
-    RN2903_JOIN_STATUS_T rv = rn2903_join(sensor, RN2903_JOIN_TYPE_ABP);
-    if (rv == RN2903_JOIN_STATUS_ACCEPTED)
-    {
-        printf("Join successful.\n");
-
-        // All transmit payloads must be hex encoded strings, so
-        // pretend we have a temperature sensor that gave us a value
-        // of 25.6 C, and we want to transmit it.
-        const char *faketemp = "25.6";
-        printf("Transmitting a packet....\n");
-
-        RN2903_MAC_TX_STATUS_T trv;
-        trv = rn2903_mac_tx(sensor, RN2903_MAC_MSG_TYPE_UNCONFIRMED,
-                            1, // port number
-                            rn2903_to_hex(sensor, faketemp, strlen(faketemp)));
-
-        if (trv == RN2903_MAC_TX_STATUS_TX_OK)
-            printf("Transmit successful.\n");
-        else
-        {
-            // check to see if we got a downlink packet
-            if (trv == RN2903_MAC_TX_STATUS_RX_RECEIVED)
-            {
-                printf("Transmit successful, downlink packet received: %s\n",
-                       rn2903_get_response(sensor));
-            }
-            else
-            {
-                printf("Transmit failed with code %d.\n", trv);
-            }
-        }
-    }
-    else
-    {
-        printf("Join failed with code %d.\n", rv);
-    }
-
-    printf("Exiting\n");
-
-    rn2903_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/rotaryencoder.c b/examples/c/rotaryencoder.c
deleted file mode 100644
index edb265a..0000000
--- a/examples/c/rotaryencoder.c
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include "rotaryencoder.h"
-#include "upm_utilities.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a Grove Rotary Encoder, using signal pins D2 and D3
-    rotaryencoder_context sensor = rotaryencoder_init(2, 3);
-
-    if (!sensor)
-    {
-        printf("rotaryencoder_init() failed.\n");
-        return 1;
-    }
-
-    while (shouldRun)
-    {
-        printf("Position: %d\n", rotaryencoder_get_position(sensor));
-
-        upm_delay_ms(100);
-    }
-
-
-    printf("Exiting...\n");
-
-    rotaryencoder_close(sensor);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/rpr220-intr.c b/examples/c/rpr220-intr.c
deleted file mode 100644
index 6337ab4..0000000
--- a/examples/c/rpr220-intr.c
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <rpr220.h>
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-volatile unsigned int counter = 0;
-
-// Our interrupt handler
-void rpr220_isr(void *arg)
-{
-    counter++;
-}
-
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // This example uses an interrupt handler to increment a counter
-
-    // Instantiate an RPR220 digital pin D2
-    // This was tested on the Grove IR Reflective Sensor
-    rpr220_context sensor = rpr220_init(2);
-
-    if (!sensor)
-    {
-        printf("rpr220_init() failed\n");
-        return 1;
-    }
-
-    // Here, we setup our Interupt Service Routine (ISR) to count
-    // 'black' pulses detected.  We do not pass an argument to the
-    // interrupt handler (NULL).
-
-    rpr220_install_isr(sensor, rpr220_isr, NULL);
-
-    while (shouldRun)
-    {
-        printf("Counter: %d\n", counter);
-
-        upm_delay(1);
-    }
-
-    printf("Exiting...\n");
-
-    rpr220_close(sensor);
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/rpr220.c b/examples/c/rpr220.c
deleted file mode 100644
index 923aa8d..0000000
--- a/examples/c/rpr220.c
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include <rpr220.h>
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // This example uses a simple method to determine current status
-
-    // Instantiate an RPR220 digital pin D2
-    // This was tested on the Grove IR Reflective Sensor
-    rpr220_context sensor = rpr220_init(2);
-
-    if (!sensor)
-    {
-        printf("rpr220_init() failed\n");
-        return 1;
-    }
-
-    while (shouldRun)
-    {
-        if (rpr220_black_detected(sensor))
-            printf("Black detected\n");
-        else
-            printf("Black NOT detected\n");
-
-        upm_delay_ms(100);           // 100ms
-    }
-
-    printf("Exiting...\n");
-
-    rpr220_close(sensor);
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/rsc.c b/examples/c/rsc.c
deleted file mode 100644
index eb8f832..0000000
--- a/examples/c/rsc.c
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <stdio.h>
-#include "upm_utilities.h"
-#include "rsc.h"
-
-int main(void) {
-//! [Interesting]
-    rsc_context dev = rsc_init(0, 9, 8);
-
-    rsc_set_data_rate(dev, N_DR_330_SPS);
-    rsc_set_mode(dev, NORMAL_MODE);
-
-    float pressure;
-    float temp;
-    while(1){
-        pressure = rsc_get_pressure(dev);
-        printf("Retrieved pressure: %f %d\n", pressure, dev->unit);
-        temp = rsc_get_temperature(dev);
-        printf("Retieved temperature: %f C\n", temp);
-        upm_delay_ms(500);
-    }
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/servo.c b/examples/c/servo.c
deleted file mode 100644
index 68a4a68..0000000
--- a/examples/c/servo.c
+++ /dev/null
@@ -1,37 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "es08a.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    es08a_context dev = es08a_init(3, ES08A_MIN_PULSE_WIDTH, ES08A_MAX_PULSE_WIDTH);
-    if(dev == NULL){
-        printf("unable to initialize the servo context\n");
-    }
-
-    if(es08a_set_angle(dev, 90) != UPM_SUCCESS){
-        printf("unable to set angle to 90 degrees\n");
-    }
-    upm_delay(1);
-
-    if(es08a_set_angle(dev, 180) != UPM_SUCCESS){
-        printf("unable to set angle to 180 degrees\n");
-    }
-    upm_delay(1);
-
-    if(es08a_set_angle(dev, 90) != UPM_SUCCESS){
-        printf("unable to set angle to 90 degrees\n");
-    }
-    upm_delay(1);
-
-    es08a_halt(dev);
-
-    return 0;
-}
diff --git a/examples/c/sht1x.c b/examples/c/sht1x.c
deleted file mode 100644
index 5c97ad9..0000000
--- a/examples/c/sht1x.c
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "sht1x.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a SHT1X sensor using D2 as the clock, and D3 as the
-    // data pin.
-    sht1x_context sensor = sht1x_init(2, 3);
-
-    if (!sensor)
-    {
-        printf("sht1x_init() failed.\n");
-        return 1;
-    }
-
-    // Every 2 seconds, update and print values
-    while (shouldRun)
-    {
-        if (sht1x_update(sensor))
-        {
-            printf("sht1x_update() failed, exiting.\n");
-            break;
-        }
-
-        printf("Temperature: %f C\n", sht1x_get_temperature(sensor));
-        printf("Humidity:    %f RH\n", sht1x_get_humidity(sensor));
-        printf("\n");
-
-        upm_delay(2);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    sht1x_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/slide.c b/examples/c/slide.c
deleted file mode 100644
index ab8a32c..0000000
--- a/examples/c/slide.c
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "slide.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a slide sensor on analog pin A0
-    slide_context sensor = slide_init(0);
-
-    if (!sensor)
-    {
-        printf("slide_init() failed.\n");
-        return -1;
-    }
-
-    // Set the aref, scale, and offset
-    slide_set_aref(sensor, 5.0);
-    slide_set_scale(sensor, 1.0);
-    slide_set_offset(sensor, -.1);
-    printf("aRef: %0.03f scale: %0.03f offset: %0.03f\n\n",
-            slide_get_aref(sensor),
-            slide_get_scale(sensor),
-            slide_get_offset(sensor));
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float normalized = 0.0;
-        float raw_volts = 0.0;
-        float volts = 0.0;
-
-        slide_get_normalized(sensor, &normalized);
-        slide_get_raw_volts(sensor, &raw_volts);
-        slide_get_volts(sensor, &volts);
-
-        printf("Normalized output: %0.03f, raw slide sensor output: %0.03f v "
-                "adjusted output: %0.03f v\n", normalized, raw_volts, volts);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    slide_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/speaker-pwm.c b/examples/c/speaker-pwm.c
deleted file mode 100644
index b552bfa..0000000
--- a/examples/c/speaker-pwm.c
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include "speaker.h"
-
-int main ()
-{
-//! [Interesting]
-
-    // Instantiate a Speaker (PWM) on digital pin D3
-    speaker_context speaker = speaker_init_pwm(26);
-
-    if (!speaker)
-    {
-        printf("speaker_init() failed\n");
-        return 1;
-    }
-
-    // emit a series of frequencies for 500ms each
-    speaker_emit(speaker, 50, 500);
-    speaker_emit(speaker, 75, 500);
-    speaker_emit(speaker, 125, 500);
-    speaker_emit(speaker, 250, 500);
-    speaker_emit(speaker, 500, 500);
-    speaker_emit(speaker, 1000, 500);
-    speaker_emit(speaker, 2000, 500);
-    speaker_emit(speaker, 3000, 500);
-    speaker_emit(speaker, 5000, 500);
-    speaker_emit(speaker, 10000, 500);
-
-    printf("Exiting\n");
-
-    speaker_close(speaker);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/speaker.c b/examples/c/speaker.c
deleted file mode 100644
index e9dde8b..0000000
--- a/examples/c/speaker.c
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include "speaker.h"
-
-int main ()
-{
-//! [Interesting]
-
-    // Instantiate a Speaker on digital pin D2
-    speaker_context speaker = speaker_init(2);
-
-    if (!speaker)
-    {
-        printf("speaker_init() failed\n");
-        return 1;
-    }
-
-    // Play all 7 of the lowest notes
-    speaker_play_all(speaker);
-
-    // Play a medium C-sharp
-    speaker_play_sound(speaker, 'c', true, "med");
-
-    printf("Exiting\n");
-
-    speaker_close(speaker);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/tsl2561.c b/examples/c/tsl2561.c
deleted file mode 100644
index 64743d1..0000000
--- a/examples/c/tsl2561.c
+++ /dev/null
@@ -1,22 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "tsl2561.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    tsl2561_context dev = tsl2561_init(0, TSL2561_Address, GAIN_0X, INTEGRATION_TIME1_101MS);
-    float abc = 0;
-    if(tsl2561_get_lux(dev, &abc) != UPM_SUCCESS){
-        printf("ERROR !! ERROR !! ERROR!!");
-    }
-    printf("value retrieved: %f\n", abc);
-
-    return 0;
-}
diff --git a/examples/c/ttp223.c b/examples/c/ttp223.c
deleted file mode 100644
index 7896ea9..0000000
--- a/examples/c/ttp223.c
+++ /dev/null
@@ -1,25 +0,0 @@
-//Modified: Abhishek Malik <abhishek.malik@intel.com>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "ttp223.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    ttp223_context dev = ttp223_init(2);
-    bool abc = 0;
-    while(1){
-        if(ttp223_is_pressed(dev, &abc) != UPM_SUCCESS){
-            printf("an error has occurred\n");
-        }
-        upm_delay(1);
-        printf("value retrieved: %d\n", abc);
-    }
-
-    return 0;
-}
diff --git a/examples/c/uartat-le910.c b/examples/c/uartat-le910.c
deleted file mode 100644
index fa60163..0000000
--- a/examples/c/uartat-le910.c
+++ /dev/null
@@ -1,169 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-
-#include "uartat.h"
-#include "upm_utilities.h"
-
-const size_t bufferLength = 256;
-
-int main(int argc, char **argv)
-{
-//! [Interesting]
-
-    char *defaultDev = "/dev/ttyUSB0";
-    if (argc > 1)
-        defaultDev = argv[1];
-
-    printf("Using device: %s\n", defaultDev);
-    // Instantiate a UARTAT sensor on defaultDev at 115200 baud.
-    uartat_context sensor = uartat_init_tty(defaultDev, 115200);
-
-    if (!sensor)
-    {
-        printf("uartat_init_tty() failed.\n");
-        return 1;
-    }
-
-    // This is a simplistic example that tries to configure the LE910,
-    // and use it's built-in socket capabilities to connect to a
-    // remote host, obtain a small piece of data, and return it.  It's
-    // mainly intended to show you how you can use the various AT
-    // commands supported by the LE910 to perform simple tasks.
-    //
-    // You must have a valid SIM card with an active data plan for
-    // this example to do anything interesting.
-    //
-    // See the LE910 AT Commands reference for full information on
-    // what is possible with this device.  The uartat driver is
-    // intended to make it a little easier to control AT-style
-    // devices, but is by no means a full-featured communication
-    // infrastructure.  A "real" application will probably need to be
-    // much more sophisticated, and custom designed for the desired
-    // task.
-    //
-    // For experimenting with various AT commands, try using an
-    // interactive terminal emulator like minicom or screen.
-
-    char buffer[bufferLength];
-
-    // make sure we are in command mode
-    if (!uartat_in_command_mode(sensor))
-    {
-        printf("Not in command mode, switching...\n");
-        uartat_command_mode(sensor, "+++", 1000);
-    }
-
-    // flter out CR's in responses by default
-    uartat_filter_cr(sensor, true);
-
-    printf("Configuring modem...\n");
-
-    // discard any waiting characters
-    uartat_drain(sensor);
-
-    // reset modem
-    uartat_command(sensor, "ATZ\r");
-
-    // turn off command echo, set verbosity to 1, enable data
-    // connection mode
-    uartat_command(sensor, "ATE0 V1 +FCLASS=0\r");
-    uartat_drain(sensor);
-
-    // Now issue some commands and output the results.
-
-    printf("Modem and SIM information:\n");
-    if (uartat_command_with_response(sensor, "AT+ICCID\r",
-                                      buffer, bufferLength))
-        printf("ICCID (SIM ID): %s\n", buffer);
-
-    if (uartat_command_with_response(sensor, "AT+CGSN=1\r",
-                                      buffer, bufferLength))
-        printf("IMEI: %s\n", buffer);
-
-    // see if we are on the network....
-    if (uartat_command_with_response(sensor, "AT+CREG?\r",
-                                      buffer, bufferLength))
-    {
-        printf("%s\n", buffer);
-        // look for "CGREG: 0,1" or "CGREG: 0,5"
-        if (uartat_find(sensor, buffer, "CREG: 0,1") ||
-            uartat_find(sensor, buffer, "CREG: 0,5"))
-        {
-            printf("Connected to the cell data network.\n");
-
-            // wait up to 5 seconds for responses now...
-            uartat_set_response_wait_time(sensor, 5000);
-
-            // setup PDP context (socket 1).  An ERROR response is
-            // possible if the PDP context is already set up.
-            uartat_command(sensor, "AT#SGACT=1,1\r");
-
-            // setup a TCP socket to nist.gov and read the timestamp.
-
-            printf("Connecting to time-a.nist.gov, TCP port 13\n");
-
-            // Wait up to 60 seconds to find the NO CARRIER
-            // string, which will be present at the end, if the
-            // connection succeeded and the requested data was
-            // obtained.
-            if (uartat_command_waitfor(sensor,
-                                       "AT#SD=1,0,13,\"time-a.nist.gov\"\r",
-                                       buffer, bufferLength,
-                                       "\nNO CARRIER\n", 60000))
-            {
-                // print out the response
-                printf("RESPONSE:\r%s\r", buffer);
-            }
-            else
-            {
-                printf("No response.\n");
-            }
-
-            // destroy PDP context
-            uartat_set_response_wait_time(sensor, 250);
-            uartat_command(sensor, "AT#SGACT=1,0\r");
-        }
-        else
-        {
-            printf("You do not appear to be connected to the network...\n");
-        }
-    }
-    else
-    {
-        printf("Error executing query\n");
-    }
-
-    // reset the modem
-    uartat_command(sensor, "ATZ\r");
-
-    printf("Exiting\n");
-
-    uartat_close(sensor);
-
-//! [Interesting]
-
-    return 0;
-}
diff --git a/examples/c/uln200xa.c b/examples/c/uln200xa.c
deleted file mode 100644
index 3271d15..0000000
--- a/examples/c/uln200xa.c
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-
-#include <upm_utilities.h>
-#include "uln200xa.h"
-
-int main ()
-{
-//! [Interesting]
-
-    // Instantiate a Stepper motor on a ULN200XA Darlington controller.
-
-    // This was tested with the Grove Gear Stepper Motor with Driver
-
-    // Wire the pins so that I1 is pin D8, I2 is pin D9, I3 is pin D10 and
-    // I4 is pin D11
-    uln200xa_context motor = uln200xa_init(4096, 8, 9, 10, 11);
-
-    if (!motor)
-    {
-        printf("uln200xa_init() failed\n");
-        return 1;
-    }
-
-    uln200xa_set_speed(motor, 5);
-    uln200xa_set_direction(motor, ULN200XA_DIR_CW);
-    printf("Rotating 1 revolution clockwise.\n");
-    uln200xa_stepper_steps(motor, 4096);
-
-    printf("Sleeping for 2 seconds...\n");
-    upm_delay(2);
-
-    printf("Rotating 1/2 revolution counter clockwise.\n");
-    uln200xa_set_direction(motor, ULN200XA_DIR_CCW);
-    uln200xa_stepper_steps(motor, 2048);
-
-    // turn off the power
-    uln200xa_release(motor);
-
-    printf("Exiting...\n");
-
-    uln200xa_close(motor);
-//! [Interesting]
-  return 0;
-}
diff --git a/examples/c/urm37-uart.c b/examples/c/urm37-uart.c
deleted file mode 100644
index b76e993..0000000
--- a/examples/c/urm37-uart.c
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "urm37.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a URM37 sensor on UART 0, with the reset pin on D2
-    urm37_context sensor = urm37_init(0, 2, 0, 0, 0, false);
-
-    if (!sensor)
-    {
-        printf("urm37_init() failed.\n");
-        return(1);
-    }
-
-    // Every half a second, sample the URM37 and output the measured
-    // distance in cm.
-
-    while (shouldRun)
-    {
-        float distance, temperature;
-
-        urm37_get_distance(sensor, &distance, 0);
-        printf("Detected distance (cm): %f\n", distance);
-
-        urm37_get_temperature(sensor, &temperature);
-        printf("Temperature (C): %f\n\n", temperature);
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    urm37_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/urm37.c b/examples/c/urm37.c
deleted file mode 100644
index a78e7fd..0000000
--- a/examples/c/urm37.c
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "urm37.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a URM37 sensor on analog pin A0, reset pin on D2,
-    // trigger pin on D3 with an analog reference voltage of 5.0
-    urm37_context sensor = urm37_init(0, 2, 3, 5.0, 0, true);
-
-    if (!sensor)
-    {
-        printf("urm37_init() failed.\n");
-        return(1);
-    }
-
-    // Every half a second, sample the URM37 and output the measured
-    // distance in cm.
-
-    while (shouldRun)
-    {
-        float distance;
-
-        urm37_get_distance(sensor, &distance, 0);
-        printf("Detected distance (cm): %f\n", distance);
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    urm37_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/vdiv.c b/examples/c/vdiv.c
deleted file mode 100644
index 757cbd4..0000000
--- a/examples/c/vdiv.c
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "vdiv.h"
-#include "upm_utilities.h"
-
-bool shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-int main()
-{
-    signal(SIGINT, sig_handler);
-
-    //! [Interesting]
-
-    // Instantiate a sensor on analog pin A0
-    vdiv_context sensor = vdiv_init(0, 5);
-
-    if (!sensor)
-    {
-        printf("vdiv_init() failed.\n");
-        return(1);
-    }
-
-    // Every half a second, sample the sensor output
-    while (shouldRun)
-    {
-        float raw_volts = 0.0, computed_volts = 0.0;
-
-        vdiv_get_raw_volts(sensor, &raw_volts);
-        vdiv_get_computed_volts(sensor, &computed_volts);
-
-        printf("Divide SW: %d ADC voltage: %0.03f Sensor voltage: %0.03f\n",
-                vdiv_get_divsw(sensor), raw_volts, computed_volts);
-
-        upm_delay_ms(500);
-    }
-
-    //! [Interesting]
-
-    printf("Exiting\n");
-
-    vdiv_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/veml6070.c b/examples/c/veml6070.c
deleted file mode 100644
index 21672b4..0000000
--- a/examples/c/veml6070.c
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
- 
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include "veml6070.h"
-
-#include "upm_utilities.h"
-
-int main()
-{
-    veml6070_context dev = veml6070_init(0);
-    if(dev == NULL) {
-        printf("Unable to initialize sensor\n");
-        return 0;
-    }
-    upm_delay(1);
-
-    while(1){
-        printf("Retrieved UV Value: %d\n", veml6070_get_uv_intensity(dev));
-        upm_delay(1);
-    }
-
-    return 0;
-}
diff --git a/examples/c/water.c b/examples/c/water.c
deleted file mode 100644
index 405f44b..0000000
--- a/examples/c/water.c
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "water.h"
-#include "upm_utilities.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-
-int main ()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a Water sensor on digital pin D2
-    water_context sensor = water_init(2);
-
-    if (!sensor)
-    {
-        printf("water_init() failed.\n");
-        return(1);
-    }
-
-    while (shouldRun)
-    {
-        if (water_is_wet(sensor))
-            printf("Sensor is wet\n");
-        else
-            printf("Sensor is dry\n");
-
-        upm_delay(1);
-    }
-//! [Interesting]
-
-    printf("Exiting...\n");
-
-    water_close(sensor);
-
-    return 0;
-}
diff --git a/examples/c/wfs.c b/examples/c/wfs.c
deleted file mode 100644
index 4fa8617..0000000
--- a/examples/c/wfs.c
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2014-02017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <stdio.h>
-#include <signal.h>
-
-#include <upm_utilities.h>
-#include "wfs.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-    if (signo == SIGINT)
-        shouldRun = false;
-}
-
-
-int main(int argc, char **argv)
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a Water Flow Sensor on digital pin D2.  This must
-    // be an interrupt capable pin.
-
-    wfs_context sensor = wfs_init(2);
-    if (!sensor)
-    {
-        printf("%s: wfs_init() failed\n", __FUNCTION__);
-        return 1;
-    }
-
-    // set the flow counter to 0 and start counting
-    wfs_clear_flow_counter(sensor);
-    if (wfs_start_flow_counter(sensor))
-    {
-        printf("%s: wfs_start_flow_counter() failed\n", __FUNCTION__);
-        wfs_close(sensor);
-        return 1;
-    }
-
-    while (shouldRun)
-    {
-        // we grab these (millis and flowCount) just for display
-        // purposes in this example
-        uint32_t millis = wfs_get_millis(sensor);
-        uint32_t flowCount = wfs_flow_counter(sensor);
-
-        float fr = wfs_flow_rate(sensor);
-
-        // output milliseconds passed, flow count, and computed flow rate
-        printf("Millis: %8d Flow Count: %5d Flow Rate: %f LPM\n",
-               millis, flowCount, fr);
-
-        // best to gather data for at least one second for reasonable
-        // results.
-        upm_delay(2);
-    }
-
-    wfs_stop_flow_counter(sensor);
-
-    printf("Exiting...\n");
-
-    wfs_close(sensor);
-
-//! [Interesting]
-    return 0;
-}
diff --git a/examples/c/yg1006.c b/examples/c/yg1006.c
deleted file mode 100644
index 3d361e1..0000000
--- a/examples/c/yg1006.c
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-#include <unistd.h>
-#include <signal.h>
-
-#include "yg1006.h"
-#include "upm_utilities.h"
-
-int shouldRun = true;
-
-void sig_handler(int signo)
-{
-  if (signo == SIGINT)
-    shouldRun = false;
-}
-
-
-int main ()
-{
-    signal(SIGINT, sig_handler);
-
-//! [Interesting]
-    // Instantiate a YG1006 sensor on digital pin D2
-    yg1006_context sensor = yg1006_init(2);
-
-    if (!sensor)
-    {
-        printf("yg1006_init() failed.\n");
-        return(1);
-    }
-
-    while (shouldRun)
-    {
-        if (yg1006_flame_detected(sensor))
-            printf("Flame detected.\n");
-        else
-            printf("No flame detected.\n");
-
-        upm_delay(1);
-    }
-//! [Interesting]
-
-    printf("Exiting...\n");
-
-    yg1006_close(sensor);
-
-    return 0;
-}
diff --git a/examples/java/A110X_Example.java b/examples/java/A110X_Example.java
deleted file mode 100644
index 1e74850..0000000
--- a/examples/java/A110X_Example.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class A110X_Example {
-	
-	public static void main(String[] args) throws InterruptedException {
-		//! [Interesting]
-		// Instantiate an A110X sensor on digital pin D2
-		upm_a110x.A110X hall = new upm_a110x.A110X(2);
-		
-		// check every second for the presence of a magnetic field (south polarity)
-		while(true){
-			if(hall.magnetDetected())
-				System.out.println("Magnet (south polarity) detected.");
-			else
-				System.out.println("No magnet detected.");
-			
-			Thread.sleep(1000);
-		}
-		//! [Interesting]
-	}
-}
diff --git a/examples/java/A110X_intr_Example.java b/examples/java/A110X_intr_Example.java
deleted file mode 100644
index ce722b8..0000000
--- a/examples/java/A110X_intr_Example.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class A110X_intr_Example {
-	
-	public static int counter=0;
-		
-	public static void main(String[] args) throws InterruptedException {
-		//! [Interesting]
-		// Instantiate an A110X sensor on digital pin D2
-		upm_a110x.A110X hall = new upm_a110x.A110X(2);
-
-		// This example uses a user-supplied interrupt handler to count
-		// pulses that occur when a magnetic field of the correct polarity
-		// is detected.  This could be used to measure the rotations per
-		// minute (RPM) of a rotor for example.
-
-		A110XISR callback = new A110XISR();
-		hall.installISR(callback);
-		
-		while(true){
-			System.out.println("Counter: " + counter);
-			Thread.sleep(1000);
-		}
-		//! [Interesting]
-	}
-}
-
-class A110XISR implements Runnable {
-	public A110XISR(){
-		super();
-	}
-	public void run(){
-		A110X_intr_Example.counter++;
-	}
-}
\ No newline at end of file
diff --git a/examples/java/ADC121C021_Example.java b/examples/java/ADC121C021_Example.java
deleted file mode 100644
index 57722c4..0000000
--- a/examples/java/ADC121C021_Example.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class ADC121C021_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate an ADC121C021 on I2C bus 0
-		upm_adc121c021.ADC121C021 adc = new upm_adc121c021.ADC121C021(0);
-
-		// An analog sensor, such as a Grove light sensor,
-		// must be attached to the adc
-		// Prints the value and corresponding voltage every 50 milliseconds
-		while (true) {
-			int val = adc.value();
-
-			System.out.println("ADC value: " + val + "Volts = " + adc.valueToVolts(val));
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/AM2315_Example.java b/examples/java/AM2315_Example.java
deleted file mode 100644
index dae8a25..0000000
--- a/examples/java/AM2315_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_am2315.AM2315;
-
-public class AM2315_Example {
-
-	static {
-		try {
-			System.loadLibrary("javaupm_am2315");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		float humidity = 0;
-		float temperature = 0;
-		
-		// Instantiate the sensor
-		AM2315 sensor = new AM2315(0, upm_am2315.javaupm_am2315Constants.AM2315_I2C_ADDRESS);
-		sensor.testSensor();
-		
-		while(true){
-			// retrieving the humidity and temperature values
-			humidity = sensor.getHumidity();
-			temperature = sensor.getTemperature();
-			
-			System.out.println("Temperature : "+temperature+" Humidity: "+humidity);
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/APA102_Example.java b/examples/java/APA102_Example.java
deleted file mode 100644
index 540dd6a..0000000
--- a/examples/java/APA102_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Yannick Adam <yannick.adam@gmail.com>
- * Copyright (c) 2016 Yannick Adam
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class APA102_Example {
-
-  public static void main(String[] args) throws InterruptedException {
-    // ! [Interesting]
-    // Instantiate a strip of 30 LEDs on SPI bus 0
-    upm_apa102.APA102 ledStrip =
-        new upm_apa102.APA102(30, (short)0, false, (byte)-1);
-
-    System.out.println("Set all LEDs to blue");
-    ledStrip.setAllLeds((short)31, (short)0, (short)0, (short)255);
-
-    System.out.println("Set LEDs between 10 and 20 to green");
-    ledStrip.setLeds(10, 20, (short)31, (short)0, (short)255, (short)0);
-
-    System.out.println("Set a single LED to red at index 15");
-    ledStrip.setLed(15, (short)31, (short)255, (short)0, (short)0);
-
-    // ! [Interesting]
-  }
-}
diff --git a/examples/java/Ad8232_Example.java b/examples/java/Ad8232_Example.java
deleted file mode 100644
index e4c1933..0000000
--- a/examples/java/Ad8232_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-* Author: Abhishek Malik <abhishek.malik@intel.com>
-* Copyright (c) 2016 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-import upm_ad8232.AD8232;
-
-public class Ad8232_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Instantiate a Ad8232 sensor on digital pins 10 (LO+), 11 (LO-)
-		// and an analog pin, 0 (OUTPUT)
-		AD8232 ad8232 = new AD8232(10, 11, 0);
-		while(true){
-			// Output the raw numbers from the ADC, for plotting elsewhere.
-			// A return of 0 indicates a Lead Off (LO) condition.
-			// In theory, this data could be fed to software like Processing
-			// (https://www.processing.org/) to plot the data just like an
-			// EKG you would see in a hospital.
-			System.out.println(ad8232.value());
-			try {
-				Thread.sleep(1);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following error has occurred: "+e.getMessage());
-			}
-		}
-	}
-
-}
diff --git a/examples/java/Ads1015_Example.java b/examples/java/Ads1015_Example.java
deleted file mode 100644
index 8620c12..0000000
--- a/examples/java/Ads1015_Example.java
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-/* This example demonstrates how to use one the ADS1015 ADC on the Grove Joule
- * Shield or the Sparkfun ADC Block for Edison with devices that output a small
- * differential voltage (e.g. geophones, piezoelectric bands or pads,
- * thermocouples).
- */
-import java.io.*;
-import java.util.concurrent.*;
-import upm_ads1x15.*;
-
-public class Ads1015_Example
-{
-    static boolean running = true;
-    static int id = 0; // Sample number
-    static String fileName = "./ads1015.data"; // Output filename
-
-    public static void main(String[] args) throws InterruptedException
-    {
-        // Open the output file
-        FileWriter fw = null;
-        BufferedWriter bw = null;
-        try {
-            fw = new FileWriter(fileName);
-            bw = new BufferedWriter(fw);
-        } catch (IOException e) {
-            System.out.println("Failed to open output file for writing: " + e.toString());
-            System.exit(1);
-        }
-
-        // Initialize and configure the ADS1015
-        ADS1015 ads1015 = new ADS1015(0, (short)0x48);
-
-        // Put the ADC into differential mode for pins A0 and A1
-        ads1015.getSample(ADS1X15.ADSMUXMODE.DIFF_0_1);
-
-        // Set the gain based on expected VIN range to -/+ 2.048 V
-        // Can be adjusted based on application to as low as -/+ 0.256 V, see API
-        // documentation for details
-        ads1015.setGain(ADS1X15.ADSGAIN.GAIN_TWO);
-
-        // Set the sample rate to 3300 samples per second (max) and turn on continuous
-        // sampling
-        ads1015.setSPS(ADS1015.ADSSAMPLERATE.SPS_3300);
-        ads1015.setContinuous(true);
-
-        // Schedule a task to stop logging after 10 seconds
-        Executors.newSingleThreadScheduledExecutor().schedule(new Runnable() {
-            @Override
-            public void run() {
-                running = false;
-            }
-        }, 10, TimeUnit.SECONDS);
-
-        // Read from sensor and write to file every ms
-        while(running){
-            try {
-                bw.write(id + " " + String.format("%.7f", ads1015.getLastSample()) + "\n");
-            } catch (IOException e) {
-                System.out.println("Failed to write sample " + id + " to file: "+ e.toString());
-                System.exit(1);
-            }
-            id++;
-            Thread.sleep(1);
-        }
-
-        // Close and exit
-        try {
-            bw.close();
-            fw.close();
-        } catch (IOException e) {
-            System.out.println("Failed to close output file cleanly: " + e.toString());
-            System.exit(1);
-        }
-        System.out.println("Wrote " + id + " samples to file: " + fileName);
-        System.exit(0);
-    }
-}
diff --git a/examples/java/Ads1115_Example.java b/examples/java/Ads1115_Example.java
deleted file mode 100644
index 2f98f48..0000000
--- a/examples/java/Ads1115_Example.java
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-/* This example demonstrates how to use one of the ADS1115 ADCs on the
- * DFRobot Joule Shield with devices that output a small differential
- * voltage (e.g. geophones, piezoelectric bands or pads, thermocouples).
- */
-import java.io.*;
-import java.util.concurrent.*;
-import upm_ads1x15.*;
-
-public class Ads1115_Example
-{
-    static boolean running = true;
-    static int id = 0; // Sample number
-    static String fileName = "./ads1115.data"; // Output filename
-
-    public static void main(String[] args) throws InterruptedException
-    {
-        // Open the output file
-        FileWriter fw = null;
-        BufferedWriter bw = null;
-        try {
-            fw = new FileWriter(fileName);
-            bw = new BufferedWriter(fw);
-        } catch (IOException e) {
-            System.out.println("Failed to open output file for writing: " + e.toString());
-            System.exit(1);
-        }
-
-        // Initialize and configure the ADS1115 for the SM-24 Geophone
-        // There are two ADS1115 chips on the DFRobot Joule Shield on the same I2C bus
-        //     - 0x48 gives access to pins A0 - A3
-        //     - 0x49 gives access to pins A4 - A7
-        ADS1115 ads1115 = new ADS1115(0, (short)0x48);
-
-        // Put the ADC into differential mode for pins A0 and A1,
-        // the SM-24 Geophone is connected to these pins
-        ads1115.getSample(ADS1X15.ADSMUXMODE.DIFF_0_1);
-
-        // Set the gain based on expected VIN range to -/+ 2.048 V
-        // Can be adjusted based on application to as low as -/+ 0.256 V, see API
-        // documentation for details
-        ads1115.setGain(ADS1X15.ADSGAIN.GAIN_TWO);
-
-        // Set the sample rate to 860 samples per second (max) and turn on continuous
-        // sampling
-        ads1115.setSPS(ADS1115.ADSDATARATE.SPS_860);
-        ads1115.setContinuous(true);
-
-        // Schedule a task to stop logging after 10 seconds
-        Executors.newSingleThreadScheduledExecutor().schedule(new Runnable() {
-            @Override
-            public void run() {
-                running = false;
-            }
-        }, 10, TimeUnit.SECONDS);
-
-        // Read from sensor and write to file every ms
-        while(running){
-            try {
-                bw.write(id + " " + String.format("%.7f", ads1115.getLastSample()) + "\n");
-            } catch (IOException e) {
-                System.out.println("Failed to write sample " + id + " to file: "+ e.toString());
-                System.exit(1);
-            }
-            id++;
-            Thread.sleep(1);
-        }
-
-        // Close and exit
-        try {
-            bw.close();
-            fw.close();
-        } catch (IOException e) {
-            System.out.println("Failed to close output file cleanly: " + e.toString());
-            System.exit(1);
-        }
-        System.out.println("Wrote " + id + " samples to file: " + fileName);
-        System.exit(0);
-    }
-}
diff --git a/examples/java/Adxl345_Example.java b/examples/java/Adxl345_Example.java
deleted file mode 100644
index 1918c0c..0000000
--- a/examples/java/Adxl345_Example.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class Adxl345_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] val;
-		float[] accel;
-
-		// Note: Sensor only works at 3.3V on the Intel Edison with Arduino
-		// breakout
-		upm_adxl345.Adxl345 sensor = new upm_adxl345.Adxl345(0);
-
-		while (true) {
-			sensor.update();
-			val = sensor.getRawValues();
-			accel = sensor.getAcceleration();
-
-			System.out.println("Current scale: " + sensor.getScale());
-			System.out.println("Raw Values: X: " + val[0] + " Y: " + val[1] + " Z: " + val[2]);
-			System.out.println("Acceleration: X: " + accel[0] + "g Y: " + accel[1] + "g Z: "
-					+ accel[2] + "g");
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/AeotecDSB09104_Example.java b/examples/java/AeotecDSB09104_Example.java
deleted file mode 100644
index d606aa3..0000000
--- a/examples/java/AeotecDSB09104_Example.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ozw.AeotecDSB09104;
-
-public class AeotecDSB09104_Example
-{
-    private static String defaultDev = "/dev/ttyACM0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate an Aeotec DSB09104 instance, on device node 12.
-        // You will almost certainly need to change this to reflect
-        // your own network.  Use the ozwdump example to see what
-        // nodes are available.
-        AeotecDSB09104 sensor = new AeotecDSB09104(12);
-
-        // The first thing to do is create options, then lock them when done.
-        sensor.optionsCreate();
-        sensor.optionsLock();
-
-        System.out.println("Initializing, this may take awhile depending "
-                           + "on your ZWave network");
-
-        sensor.init(defaultDev);
-        System.out.println("Initialization complete");
-
-        System.out.println("Querying data...");
-
-        while (true)
-            {
-                sensor.update();
-
-                System.out.println("Watts, Channel 1: "
-                                   + sensor.getWattsC1()
-                                   + " W");
-
-                System.out.println("Watts, Channel 2: "
-                                   + sensor.getWattsC2()
-                                   + " W");
-
-                System.out.println("Watts, Channel 3: "
-                                   + sensor.getWattsC3()
-                                   + " W");
-
-                System.out.println("Energy, Channel 1: "
-                                   + sensor.getEnergyC1()
-                                   + " kWh");
-
-                System.out.println("Energy, Channel 2: "
-                                   + sensor.getEnergyC2()
-                                   + " kWh");
-
-                System.out.println("Energy, Channel 3: "
-                                   + sensor.getEnergyC3()
-                                   + " kWh");
-
-                System.out.println("Battery Level: "
-                                   + sensor.getBatteryLevel()
-                                   + "%");
-
-                System.out.println();
-
-                Thread.sleep(3000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/AeotecDW2E_Example.java b/examples/java/AeotecDW2E_Example.java
deleted file mode 100644
index 994e89c..0000000
--- a/examples/java/AeotecDW2E_Example.java
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ozw.AeotecDW2E;
-
-public class AeotecDW2E_Example
-{
-    private static String defaultDev = "/dev/ttyACM0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate an Aeotec Door/Window 2nd Edition sensor
-        // instance, on device node 10.  You will almost certainly
-        // need to change this to reflect your own network.  Use the
-        // ozwdump example to see what nodes are available.
-        AeotecDW2E sensor = new AeotecDW2E(10);
-
-        // The first thing to do is create options, then lock them when done.
-        sensor.optionsCreate();
-        sensor.optionsLock();
-
-        System.out.println("Initializing, this may take awhile depending "
-                           + "on your ZWave network");
-
-        sensor.init(defaultDev);
-        System.out.println("Initialization complete");
-
-        System.out.println("Querying data...");
-
-        while (true)
-            {
-                if (sensor.isDeviceAvailable())
-                    {
-                        System.out.println("Alarm status: "
-                                           + sensor.isAlarmTripped());
-
-                        System.out.println("Tamper Switch status: "
-                                           + sensor.isTamperTripped());
-
-                        System.out.println("Battery Level: "
-                                           + sensor.getBatteryLevel()
-                                           + "%");
-
-                        System.out.println();
-                    }
-                else
-                    {
-                        System.out.println("Device has not yet responded "
-                                           + "to probe.");
-                        System.out.println("Try waking it, or wait until "
-                                           + "it wakes itself if "
-                                           + "configured to do so.");
-
-                        System.out.println();
-                    }
-
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/AeotecSDG2_Example.java b/examples/java/AeotecSDG2_Example.java
deleted file mode 100644
index 7a45dc9..0000000
--- a/examples/java/AeotecSDG2_Example.java
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ozw.AeotecSDG2;
-
-public class AeotecSDG2_Example
-{
-    private static String defaultDev = "/dev/ttyACM0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate an Aeotec Smart Dimmer Gen2 instance, on device node
-        // 9.  You will almost certainly need to change this to reflect your
-        // own network.  Use the ozwdump example to see what nodes are
-        // available.
-        AeotecSDG2 sensor = new AeotecSDG2(9);
-
-        // The first thing to do is create options, then lock them when done.
-        sensor.optionsCreate();
-        sensor.optionsLock();
-
-        System.out.println("Initializing, this may take awhile depending "
-                           + "on your ZWave network");
-
-        sensor.init(defaultDev);
-        System.out.println("Initialization complete");
-
-        // turn light on
-        System.out.println("Turning switch on, then sleeping for 5 secs");
-        sensor.on();
-        Thread.sleep(5000);
-
-        System.out.println("Querying data...");
-
-        boolean dim = false;
-        while (true)
-            {
-                // put on a light show...
-                if (dim)
-                    sensor.setLevel(25);
-                else
-                    sensor.on();
-
-                dim = !dim;
-
-                sensor.update();
-
-                System.out.println("Switch status: "
-                                   + sensor.isOn());
-
-                System.out.println("Volts: "
-                                   + sensor.getVolts()
-                                   + " volts");
-
-                System.out.println("Energy Consumption: "
-                                   + sensor.getEnergy()
-                                   + " kWh");
-
-                System.out.println("Watts: "
-                                   + sensor.getWatts());
-
-                System.out.println("Current: "
-                                   + sensor.getCurrent()
-                                   + " amps");
-
-                System.out.println();
-
-                Thread.sleep(5000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/AeotecSS6_Example.java b/examples/java/AeotecSS6_Example.java
deleted file mode 100644
index 7505794..0000000
--- a/examples/java/AeotecSS6_Example.java
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ozw.AeotecSS6;
-
-public class AeotecSS6_Example
-{
-    private static String defaultDev = "/dev/ttyACM0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate an Aeotec Smart Switch 6 instance, on device
-        // node 11.  You will almost certainly need to change this to
-        // reflect your own network.  Use the ozwdump example to see
-        // what nodes are available.
-        AeotecSS6 sensor = new AeotecSS6(11);
-
-        // The first thing to do is create options, then lock them when done.
-        sensor.optionsCreate();
-        sensor.optionsLock();
-
-        System.out.println("Initializing, this may take awhile depending "
-                           + "on your ZWave network");
-
-        sensor.init(defaultDev);
-        System.out.println("Initialization complete");
-
-        // turn light on
-        System.out.println("Turning switch on, then sleeping for 5 secs");
-        sensor.on();
-        Thread.sleep(5000);
-
-        System.out.println("Querying data...");
-
-        while (true)
-            {
-                sensor.update();
-
-                System.out.println("Switch status: "
-                                   + sensor.isOn());
-
-                System.out.println("Volts: "
-                                   + sensor.getVolts()
-                                   + " volts");
-
-                System.out.println("Energy Consumption: "
-                                   + sensor.getEnergy()
-                                   + " kWh");
-
-                System.out.println("Watts: "
-                                   + sensor.getWatts());
-
-                System.out.println("Current: "
-                                   + sensor.getCurrent()
-                                   + " amps");
-
-                System.out.println();
-
-                Thread.sleep(3000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/Apds9002_Example.java b/examples/java/Apds9002_Example.java
deleted file mode 100644
index ce7939f..0000000
--- a/examples/java/Apds9002_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_apds9002.APDS9002;
-
-public class Apds9002_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Instantiate the APDS9002 (Grove luminance sensor) on the Analog pin A0
-		APDS9002 lum = new APDS9002(0);
-
-		while(true){
-			System.out.println("The Luminance value is : "+lum.value());
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/BH1749_Example.java b/examples/java/BH1749_Example.java
deleted file mode 100755
index e2dded9..0000000
--- a/examples/java/BH1749_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-public class BH1749_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-    //! [Interesting]
-        int sampleCounter = 10;
-        long waitTime;
-        upm_bh1749.BH1749 bh1749;
-        upm_bh1749.uint16Vector result;
-
-        bh1749 = new upm_bh1749.BH1749();
-        bh1749.SensorInit(upm_bh1749.OPERATING_MODES.INT_JUDGE_1,
-            upm_bh1749.MEAS_TIMES.MEAS_240MS, upm_bh1749.RGB_GAINS.RGB_GAIN_1X,
-            upm_bh1749.IR_GAINS.IR_GAIN_1X, upm_bh1749.INT_SOURCES.RED);
-        bh1749.SetThresholdHigh(511);
-        bh1749.Enable();
-
-        waitTime = bh1749.GetMeasurementTime();
-        System.out.println("Color readings");
-        while (sampleCounter-- > 0) {
-            result = bh1749.GetMeasurements();
-            System.out.println("R: " + result.get(0) + ", G: " + result.get(1) +
-                            ", B: " + result.get(2) + ", IR: " + result.get(3) +
-                            ", G2: " + result.get(4));
-
-            Thread.sleep((long) waitTime);
-        }
-    //! [Interesting]
-    }
-}
\ No newline at end of file
diff --git a/examples/java/BH1750_Example.java b/examples/java/BH1750_Example.java
deleted file mode 100644
index 47d235e..0000000
--- a/examples/java/BH1750_Example.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bh1750.BH1750;
-
-public class BH1750_Example 
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate a BH1750 sensor using defaults (I2C bus (0), using
-        // the default I2C address (0x23), and setting the mode to highest
-        // resolution, lowest power mode).
-        BH1750 sensor = new BH1750();
-
-        // Every second, sample the BH1750 and output the measured lux
-        // value
-
-        while (true)
-            {
-                System.out.println("Detected Light Level (lux): "
-                                   + sensor.getLux());
-
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BH1792_Example.java b/examples/java/BH1792_Example.java
deleted file mode 100755
index 088c62d..0000000
--- a/examples/java/BH1792_Example.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-//! [Interesting]
-public class BH1792_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        int sampleCounter = 20;
-        float waitTime;
-        upm_bh1792.BH1792 bh1792;
-
-        bh1792 = new upm_bh1792.BH1792();
-        BH1792ISR callback = new BH1792ISR(bh1792);
-
-        bh1792.SoftReset();
-        bh1792.EnableSyncMode(256, 32);
-
-        bh1792.InstallISR(33, callback);
-
-        waitTime = bh1792.GetMeasurementTimeMS();
-        bh1792.StartMeasurement();
-
-        System.out.println("Heart rate sensor readings");
-        while (true) {
-            Thread.sleep((long) waitTime);
-        }
-    }
-}
-
-class BH1792ISR implements Runnable {
-
-    upm_bh1792.intVector2D result;
-    upm_bh1792.BH1792 bh1792;
-
-    public BH1792ISR(upm_bh1792.BH1792 bh1792) {
-        super();
-        this.bh1792 = bh1792;
-    }
-
-    public void run() {
-        result = this.bh1792.GetFifoData();
-        for(int i = 0; i < 32; i++)
-            System.out.println(i + ": off: " + result.get(i).get(0) +
-                                ", on: " + result.get(i).get(1));
-        System.out.println("Timestamp: " + System.nanoTime() + " nsec\n");
-    }
-}
-//! [Interesting]
diff --git a/examples/java/BISS0001_Example.java b/examples/java/BISS0001_Example.java
deleted file mode 100644
index fe94e97..0000000
--- a/examples/java/BISS0001_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class BISS0001_Example{
-
-	public static void main(String[] args) throws InterruptedException {
-//! [Interesting]
-        // Instantiate a Grove Motion sensor on GPIO pin D7
-		upm_biss0001.BISS0001 motion = new upm_biss0001.BISS0001(7);
-	
-		while (true) {
-			boolean value = motion.value();
-			
-			if(value)
-				System.out.println("Detecting moving object");
-			else
-				System.out.println("No moving objects detected");
-			
-			Thread.sleep(1000);
-		}
-//! [Interesting]
-	}
-
-}
diff --git a/examples/java/BMA220_Example.java b/examples/java/BMA220_Example.java
deleted file mode 100644
index c332c78..0000000
--- a/examples/java/BMA220_Example.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class BMA220_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Instantiate an BMA220 using default parameters (bus 0, addr 0x0a)
-		upm_bma220.BMA220 sensor = new upm_bma220.BMA220();
-
-		while (true) {
-			float acc[];
-
-			sensor.update();
-			acc = sensor.getAccelerometer();
-			System.out.print("Accelerometer: ");
-			System.out.println("AX: " + acc[0] + "AY: " + acc[1] + "AZ: " + acc[2]);
-
-			Thread.sleep(1000);
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/BMA250E_Example.java b/examples/java/BMA250E_Example.java
deleted file mode 100644
index a2404f7..0000000
--- a/examples/java/BMA250E_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bma250e.BMA250E;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class BMA250E_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BMA250E instance using default i2c bus and address
-        BMA250E sensor = new BMA250E();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // BMA250E(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> dataA = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + dataA.get(0)
-                                   + " y: " + dataA.get(1)
-                                   + " z: " + dataA.get(2)
-                                   + " g");
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BMC150_Example.java b/examples/java/BMC150_Example.java
deleted file mode 100644
index 32288f3..0000000
--- a/examples/java/BMC150_Example.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmx055.BMC150;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class BMC150_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BMC150 instance using default i2c bus and address
-        BMC150 sensor = new BMC150();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> data = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " g");
-
-                data = sensor.getMagnetometer();
-
-                System.out.println("Magnetometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " uT");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BME280_Example.java b/examples/java/BME280_Example.java
deleted file mode 100644
index 0a627e5..0000000
--- a/examples/java/BME280_Example.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmp280.BME280;
-
-public class BME280_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BME280 instance using default i2c bus and address
-        BME280 sensor = new BME280();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // BME280(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println("Pressure: "
-                                   + sensor.getPressure()
-                                   + " Pa");
-                
-                System.out.println("Computed Altitude: "
-                                   + sensor.getAltitude()
-                                   + " m");
-
-                System.out.println("Humidity: "
-                                   + sensor.getHumidity()
-                                   + " %RH");
-
-                System.out.println();
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BME280_Interface_Example.java b/examples/java/BME280_Interface_Example.java
deleted file mode 100644
index e3940d2..0000000
--- a/examples/java/BME280_Interface_Example.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Author: Sisinty Sasmita Patra <sisinty.s.patra@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmp280.*;
-import upm_interfaces.*;
-
-public class BME280_Interface_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BME280 instance using default i2c bus and address
-        BME280 sensor = new BME280();
-
-        ITemperatureSensor t_sensor = sensor;
-        IHumiditySensor h_sensor = sensor;
-        IPressureSensor p_sensor = sensor;
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // BME280(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                System.out.println("Calling Interface Functions: ");
-
-                System.out.println("Compensation Temperature: "
-                                   + t_sensor.getTemperatureCelsius()
-                                   + " C / ");
-
-                System.out.println("Pressure: "
-                                   + p_sensor.getPressurePa()
-                                   + " Pa");
-
-                System.out.println("Humidity: "
-                                   + h_sensor.getHumidityRelative()
-                                   + " %RH");
-
-                System.out.println();
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BMG160_Example.java b/examples/java/BMG160_Example.java
deleted file mode 100644
index a50f543..0000000
--- a/examples/java/BMG160_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmg160.BMG160;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class BMG160_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BMG160 instance using default i2c bus and address
-        BMG160 sensor = new BMG160();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // BMG160(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> data = sensor.getGyroscope();
-
-                System.out.println("Gyroscope x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " degrees/s");
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BMI055_Example.java b/examples/java/BMI055_Example.java
deleted file mode 100644
index 67f9636..0000000
--- a/examples/java/BMI055_Example.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmx055.BMI055;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class BMI055_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BMI055 instance using default i2c bus and address
-        BMI055 sensor = new BMI055();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> data = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " g");
-
-                data = sensor.getGyroscope();
-
-                System.out.println("Gyroscope x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " degrees/s");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BMI160_Example.java b/examples/java/BMI160_Example.java
deleted file mode 100644
index 6d83e2e..0000000
--- a/examples/java/BMI160_Example.java
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmi160.BMI160;
-
-public class BMI160_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate a BMI160 instance using default i2c bus and address
-        BMI160 sensor = new BMI160();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                float dataA[] = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer: "
-                                   + "AX: "
-                                   + dataA[0]
-                                   + " AY: "
-                                   + dataA[1]
-                                   + " AZ: "
-                                   + dataA[2]);
-
-                float dataG[] = sensor.getGyroscope();
-
-                System.out.println("Gryoscope:     "
-                                   + "GX: "
-                                   + dataG[0]
-                                   + " GY: "
-                                   + dataG[1]
-                                   + " GZ: "
-                                   + dataG[2]);
-
-                float dataM[] = sensor.getMagnetometer();
-
-                System.out.println("Magnetometer:  "
-                                   + "MX: "
-                                   + dataM[0]
-                                   + " MY: "
-                                   + dataM[1]
-                                   + " MZ: "
-                                   + dataM[2]);
-
-                System.out.println();
-                Thread.sleep(500);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BMM150_Example.java b/examples/java/BMM150_Example.java
deleted file mode 100644
index 194c14b..0000000
--- a/examples/java/BMM150_Example.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmm150.BMM150;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class BMM150_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BMM150 instance using default i2c bus and address
-        BMM150 sensor = new BMM150();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // BMM150(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> data = sensor.getMagnetometer();
-
-                System.out.println("Magnetometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " uT");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BMP280_Example.java b/examples/java/BMP280_Example.java
deleted file mode 100644
index 6bd600b..0000000
--- a/examples/java/BMP280_Example.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmp280.BMP280;
-
-public class BMP280_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BMP280 instance using default i2c bus and address
-        BMP280 sensor = new BMP280();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // BMP280(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println("Pressure: "
-                                   + sensor.getPressure()
-                                   + " Pa");
-                
-                System.out.println("Computed Altitude: "
-                                   + sensor.getAltitude()
-                                   + " m");
-
-                System.out.println();
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BMPX8X_Example.java b/examples/java/BMPX8X_Example.java
deleted file mode 100644
index 12a930d..0000000
--- a/examples/java/BMPX8X_Example.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class BMPX8X_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-// ! [Interesting]
-
-        // Instantiate a BMPX8X sensor on I2C using defaults.
-        upm_bmpx8x.BMPX8X sensor = new upm_bmpx8x.BMPX8X();
-
-        // Print the pressure, altitude, sea level, and
-        // temperature values every .5 seconds
-        while (true)
-        {
-            sensor.update();
-
-            System.out.println("Pressure: "
-                               + sensor.getPressure()
-                               + " Pa, Temperature: "
-                               + sensor.getTemperature()
-                               + " C, Altitude: "
-                               + sensor.getAltitude()
-                               + " m, Sea level: "
-                               + sensor.getSealevelPressure()
-                               + " Pa");
-
-            Thread.sleep(500);
-        }
-// ! [Interesting]
-    }
-
-}
diff --git a/examples/java/BMX055_Example.java b/examples/java/BMX055_Example.java
deleted file mode 100644
index b4bdf54..0000000
--- a/examples/java/BMX055_Example.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bmx055.BMX055;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class BMX055_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a BMX055 instance using default i2c bus and address
-        BMX055 sensor = new BMX055();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> data = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " g");
-
-                data = sensor.getGyroscope();
-
-                System.out.println("Gyroscope x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " degrees/s");
-
-                data = sensor.getMagnetometer();
-
-                System.out.println("Magnetometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " uT");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/BNO055_Example.java b/examples/java/BNO055_Example.java
deleted file mode 100644
index fd71444..0000000
--- a/examples/java/BNO055_Example.java
+++ /dev/null
@@ -1,101 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_bno055.BNO055;
-
-public class BNO055_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate an BNO055 using default parameters (bus 0, addr
-        // 0x28).  The default running mode is NDOF absolute orientation
-        // mode.
-        BNO055 sensor = new BNO055();
-
-        System.out.println("First we need to calibrate.  4 numbers will be output every");
-        System.out.println("second for each sensor.  0 means uncalibrated, and 3 means");
-        System.out.println("fully calibrated.");
-        System.out.println("See the UPM documentation on this sensor for instructions on");
-        System.out.println("what actions are required to calibrate.");
-        System.out.println("");
-
-        while (!sensor.isFullyCalibrated())
-            {
-                upm_bno055.intVector calData = sensor.getCalibrationStatus();
-
-                System.out.println("Magnetometer: " + calData.get(0)
-                                   + " Accelerometer: " + calData.get(1)
-                                   + " Gyroscope: " + calData.get(2)
-                                   + " System: " + calData.get(3));
-
-                Thread.sleep(1000);
-
-            }
-
-        System.out.println("");
-        System.out.println("Calibration complete.");
-        System.out.println("");
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                upm_bno055.floatVector data = sensor.getEulerAngles();
-
-                System.out.println("Euler: Heading: " + data.get(0)
-                                   + " Roll: " + data.get(1)
-                                   + " Pitch: " + data.get(2)
-                                   + " degrees");
-
-                data = sensor.getQuaternions();
-                System.out.println("Quaternion: W: " + data.get(0)
-                                   + " X: " + data.get(1)
-                                   + " Y: " + data.get(2)
-                                   + " Z: " + data.get(3));
-
-                data = sensor.getLinearAcceleration();
-                System.out.println("Linear Acceleration: X: " + data.get(0)
-                                   + " Y: " + data.get(1)
-                                   + " Z: " + data.get(2)
-                                   + " m/s^2");
-
-                data = sensor.getGravityVectors();
-                System.out.println("Gravity Vector: X: " + data.get(0)
-                                   + " Y: " + data.get(1)
-                                   + " Z: " + data.get(2)
-                                   + " m/s^2");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/Button_Example.java b/examples/java/Button_Example.java
deleted file mode 100644
index 61115e1..0000000
--- a/examples/java/Button_Example.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Button_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Create the button object using GPIO pin 2
-		upm_button.Button button = new upm_button.Button(2);
-
-		while (true) {
-			System.out.println(button.name() + " value is " + button.value());
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/Button_intr_Example.java b/examples/java/Button_intr_Example.java
deleted file mode 100644
index 9268d4c..0000000
--- a/examples/java/Button_intr_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Button_intr_Example {
-
-	public static int counter = 0;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_button.Button b = new upm_button.Button(2);
-
-		ButtonISR callback = new ButtonISR();
-		b.installISR(2, callback);
-
-		while (true) {
-			System.out.println("Counter: " + counter);
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
-
-class ButtonISR implements Runnable {
-	public ButtonISR() {
-		super();
-	}
-
-	public void run() {
-		Button_intr_Example.counter++;
-		System.out.println("Button pressed!");
-	}
-}
diff --git a/examples/java/Buzzer_Example.java b/examples/java/Buzzer_Example.java
deleted file mode 100644
index fb527a8..0000000
--- a/examples/java/Buzzer_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_buzzer.Buzzer;
-public class Buzzer_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		int chord[] = {
-				upm_buzzer.javaupm_buzzer.BUZZER_DO,
-				upm_buzzer.javaupm_buzzer.BUZZER_RE,
-				upm_buzzer.javaupm_buzzer.BUZZER_MI,
-				upm_buzzer.javaupm_buzzer.BUZZER_FA,
-				upm_buzzer.javaupm_buzzer.BUZZER_SOL,
-				upm_buzzer.javaupm_buzzer.BUZZER_LA,
-				upm_buzzer.javaupm_buzzer.BUZZER_SI};
-
-		// Instantiate a buzzer on digital pin D5
-		Buzzer sound = new Buzzer(5);
-
-		// print sensor name
-		System.out.println(sound.name());
-
-		for (int i = 0; i < chord.length; i++) {
-			// play each note for one half second
-			int note = sound.playSound(chord[i], 500000);
-			System.out.println(note);
-
-			Thread.sleep(100);
-		}
-		// ! [Interesting]
-		sound.stopSound();
-	}
-
-}
diff --git a/examples/java/CJQ4435_Example.java b/examples/java/CJQ4435_Example.java
deleted file mode 100644
index ef71ece..0000000
--- a/examples/java/CJQ4435_Example.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class CJQ4435_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// Instantiate a CJQ4435 MOSFET on a PWM capable digital pin D3
-		upm_cjq4435.CJQ4435 mosfet = new upm_cjq4435.CJQ4435(3);
-
-		mosfet.setPeriodMS(10);
-		mosfet.enable(true);
-
-		while (true) {
-			// start with a duty cycle of 0.0 (off) and increment to 1.0 (on)
-			for (float i = 0; i <= 1; i += 0.1) {
-				mosfet.setDutyCycle(i);
-				Thread.sleep(100);
-			}
-			Thread.sleep(1000);
-
-			// Now take it back down
-			// start with a duty cycle of 1.0 (on) and decrement to 0.0 (off)
-			for (float i = 1; i >= 0; i -= 0.1) {
-				mosfet.setDutyCycle(i);
-				Thread.sleep(100);
-			}
-			Thread.sleep(1000);
-		}
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/CMakeLists.txt b/examples/java/CMakeLists.txt
deleted file mode 100644
index 2841eab..0000000
--- a/examples/java/CMakeLists.txt
+++ /dev/null
@@ -1,264 +0,0 @@
-# The purpose of this CMakeLists.txt is to compile all listed JAVA examples
-# during build time (ensuring that ALL examples compile against their
-# dependency JAVA packages).
-
-find_package(Java REQUIRED)
-include(UseJava)
-
-# Add a JAVA example target for the provided JAVA source file which depends
-# on UPM JAVA targets.
-#
-# Usage:
-#   add_example(example_class_name upm_target_dependency_list)
-#
-# Parameters:
-#   example_class_name: JAVA class name.  This name MUST match the JAVA
-#                       example file name.
-#                       <example_class_name>.java
-#   upm_target_dependency_list: One or more UPM library targets.  This
-#                       function assumes a javaupm_<target> also exists.
-#
-# Examples:
-#   # Creates SensorFooExample JAVA target, depends on target: sensorfoo,
-#   # and will add upm_sensorfoo.jar to the javac classpath.
-#   add_example(SensorFooExample sensorfoo)
-#
-#   # Creates SensorFooExample JAVA target, depends on targets: sensorfoo,
-#   # and interfaces and will add both upm_sensorfoo.jar and upm_interfaces.jar
-#   # to the javac classpath.
-#   add_example(SensorFooExample "sensorfoo;interfaces"")
-#
-function(add_example example_class_name dependency_list)
-    set(example_file "${example_class_name}.java")
-
-    # Build a list of all dependency jar files
-    set(jar_file_list "")
-
-    # Build a list of all dependency java target names
-    set(java_targets_list "")
-
-    # Iterate over the dependencies
-    foreach(dependency ${dependency_list})
-        set(java_target "javaupm_${dependency}")
-
-        # Append to the targets list
-        list(APPEND java_targets_list ${java_target})
-
-        # If a dependency target does NOT exist, print a warning and skip
-        if (NOT TARGET ${java_target})
-            message(STATUS "Example ${example_file} is missing a required CMake target (${java_target}), skipping...")
-            return()
-        endif()
-
-        # Get the jar for this java_target (saved as a property)
-        get_target_property(jar_file ${java_target} JAR_FILE_ABSOLUTE)
-
-        # Append to the jar list
-        list(APPEND jar_file_list ${jar_file})
-    endforeach()
-
-    # Add the jar/s
-    add_jar(${example_class_name} SOURCES ${example_file} INCLUDE_JARS ${jar_file_list})
-
-    # Add a dependency from this jar to all dependency java targets
-    add_dependencies(${example_class_name} ${java_targets_list})
-endfunction()
-
-add_example(A110X_Example a110x)
-add_example(A110X_intr_Example a110x)
-add_example(Ad8232_Example ad8232)
-add_example(ADC121C021_Example adc121c021)
-add_example(Ads1015_Example "ads1x15;interfaces")
-add_example(Ads1115_Example ads1x15)
-add_example(Adxl345_Example adxl345)
-add_example(AM2315_Example am2315)
-add_example(APA102_Example apa102)
-add_example(Apds9002_Example apds9002)
-add_example(BH1749_Example bh1749)
-add_example(BH1750_Example bh1750)
-add_example(BH1792_Example bh1792)
-add_example(BISS0001_Example biss0001)
-add_example(BMA250E_Example bma250e)
-add_example(BMC150_Example bmx055)
-add_example(BME280_Example "bmp280;interfaces")
-add_example(BMG160_Example bmg160)
-add_example(BMI055_Example bmx055)
-add_example(BMI160_Example bmi160)
-add_example(BMM150_Example bmm150)
-add_example(BMP280_Example "bmp280;interfaces")
-add_example(BMPX8X_Example "bmpx8x;interfaces")
-add_example(BMX055_Example bmx055)
-add_example(BNO055_Example bno055)
-add_example(Button_Example button)
-add_example(Button_intr_Example button)
-add_example(Buzzer_Example buzzer)
-add_example(CJQ4435_Example cjq4435)
-add_example(Collision_Example collision)
-add_example(CWLSXXA_Example cwlsxxa)
-add_example(DFREC_Example dfrec)
-add_example(DFRORP_Example dfrorp)
-add_example(DS1307_Example ds1307)
-add_example(ECEZO_Example ecezo)
-add_example(ECS1030_Example ecs1030)
-add_example(EHR_Example ehr)
-add_example(Emg_Example emg)
-add_example(ENC03R_Example enc03r)
-add_example(ES08A_Example "servo;interfaces")
-add_example(FlexSensor_Example flex)
-add_example(Gp2y0a_Example gp2y0a)
-add_example(GroveButton_Example grove)
-add_example(GroveButton_intr_Example grove)
-add_example(GroveEHR_Example groveehr)
-add_example(GroveEmg_Example groveemg)
-add_example(GroveGsr_Example grovegsr)
-add_example(GroveLEDBar_Example my9221)
-add_example(GroveLED_Example grove)
-add_example(GroveLed_multi_Example grove)
-add_example(GroveLight_Example grove)
-add_example(GroveLineFinder_Example grovelinefinder)
-add_example(GroveMD_Example grovemd)
-add_example(GroveMoisture_Example grovemoisture)
-add_example(GroveMQ3_Example gas)
-add_example(GroveMQ9_Example gas)
-add_example(GroveO2_Example groveo2)
-add_example(GroveQTouch_Example at42qt1070)
-add_example(GroveRelay_Example grove)
-add_example(GroveRotary_Example grove)
-add_example(GROVESCAM_Example grovescam)
-add_example(GroveSlide_Example grove)
-add_example(GroveSpeaker_Example grovespeaker)
-add_example(GroveTemp_Example grove)
-add_example(GroveVDiv_Example grovevdiv)
-add_example(GroveWater_Example grovewater)
-add_example(GroveWFS_Example grovewfs)
-add_example(Gsr_Example gsr)
-add_example(GUVAS12D_Example guvas12d)
-add_example(H3LIS331DL_Example h3lis331dl)
-add_example(HCSR04_Example hcsr04)
-add_example(HKA5_Example hka5)
-add_example(HM11_Example hm11)
-add_example(Hmc5883l_Example hmc5883l)
-add_example(HMTRP_Example hmtrp)
-add_example(HP20x_Example hp20x)
-add_example(HTU21D_Example htu21d)
-add_example(Itg3200_Example itg3200)
-add_example(Jhd1313m1_Example jhd1313m1)
-add_example(Jhd1313m1_lcd_Example jhd1313m1)
-add_example(Joystick12_Example joystick12)
-add_example(KX122_Example kx122)
-add_example(KXTJ3_Example kxtj3)
-add_example(Lcm1602_i2c_Example lcm1602)
-add_example(Lcm1602_parallel_Example lcm1602)
-add_example(LDT0028_Example ldt0028)
-add_example(LE910_Example uartat)
-add_example(LED_Example led)
-add_example(Light_Example light)
-add_example(LineFinder_Example linefinder)
-add_example(LIS2DS12_Example lis2ds12)
-add_example(LoL_Example lol)
-add_example(LSM303AGR_Example lsm303agr)
-add_example(LSM303D_Example lsm303d)
-add_example(LSM303DLH_Example lsm303dlh)
-add_example(LSM6DS3H_Example lsm6ds3h)
-add_example(LSM6DSL_Example lsm6dsl)
-add_example(M24LR64E_Example m24lr64e)
-add_example(MAX30100_Example max30100)
-add_example(MAX31855_Example max31855)
-add_example(MAX44000_Example max44000)
-add_example(MAX5487_Example max5487)
-add_example(MAXds3231m_Example maxds3231m)
-add_example(MB704X_Example mb704x)
-add_example(MCP2515_Example mcp2515)
-add_example(MCP2515_TXRX_Example mcp2515)
-add_example(MD_Example md)
-add_example(MHZ16_Example mhz16)
-add_example(Microphone_Example mic)
-add_example(MMA7361_Example mma7361)
-add_example(MMA7455_Example mma7455)
-add_example(MMA7660_Example mma7660)
-add_example(Moisture_Example moisture)
-add_example(MPL3115A2_Example mpl3115a2)
-add_example(MPR121_Example mpr121)
-add_example(MPU9150_Example mpu9150)
-add_example(MQ2_Example gas)
-add_example(MQ303A_Example mq303a)
-add_example(MQ5_Example gas)
-add_example(MS5803_Example ms5803)
-add_example(NMEAGPS_Example nmea_gps)
-add_example(NMEAGPS_I2C_Example nmea_gps)
-add_example(NRF24L01_receiver_Example nrf24l01)
-add_example(NRF24L01_transmitter_Example nrf24l01)
-add_example(NUNCHUCK_Example nunchuck)
-add_example(O2_Example o2)
-add_example(OTP538U_Example otp538u)
-add_example(P9813_Example p9813)
-add_example(PPD42NS_Example ppd42ns)
-add_example(Pulsensor_Example pulsensor)
-add_example(Relay_Example relay)
-add_example(RFR359F_Example rfr359f)
-add_example(RN2903_Example rn2903)
-add_example(RN2903_P2P_RX_Example rn2903)
-add_example(RN2903_P2P_TX_Example rn2903)
-add_example(RotaryEncoder_Example rotaryencoder)
-add_example(Rotary_Example rotary)
-add_example(RPR220_Example rpr220)
-add_example(RPR220_intr_Example rpr220)
-add_example(SCAM_Example scam)
-add_example(SensorTemplate_Example sensortemplate)
-add_example(SHT1X_Example sht1x)
-add_example(Slide_Example slide)
-add_example(SM130_Example sm130)
-add_example(Speaker_Example speaker)
-add_example(SpeakerPWM_Example speaker)
-add_example(SSD1308_oled_Example lcd)
-add_example(SSD1327_oled_Example lcd)
-add_example(ST7735_Example st7735)
-add_example(TEAMS_Example teams)
-add_example(Temperature_Example temperature)
-add_example(TEX00_Example tex00)
-add_example(Th02_Example th02)
-add_example(TM1637_Example tm1637)
-add_example(TP401_Example gas)
-add_example(TSL2561_Example tsl2561)
-add_example(TTP223_Example ttp223)
-add_example(ULN200XA_Example uln200xa)
-add_example(VDiv_Example vdiv)
-add_example(VEML6070_Example veml6070)
-add_example(Water_Example water)
-add_example(WaterLevelSensor_Example waterlevel)
-add_example(WFS_Example wfs)
-add_example(WT5001_Example wt5001)
-add_example(YG1006_Example yg1006)
-add_example(ZFM20_Example zfm20)
-
-if(SWIG_VERSION VERSION_GREATER 3.0.8)
-    add_example(BME280_Interface_Example "bmp280;interfaces")
-    add_example(IMS_Example "ims;interfaces")
-    add_example(RHUSB_Example "rhusb;interfaces")
-endif()
-
-if (OPENZWAVE_FOUND)
-    add_example(AeotecDSB09104_Example ozw)
-    add_example(AeotecDW2E_Example ozw)
-    add_example(AeotecSDG2_Example ozw)
-    add_example(AeotecSS6_Example ozw)
-    add_example(TZEMT400_Example ozw)
-endif()
-
-if (MODBUS_FOUND)
-    add_example(H803X_Example h803x)
-endif()
-
-if (BACNET_FOUND)
-    add_example(E50HX_Example e50hx)
-    add_example(T8100_Example t8100)
-    add_example(TB7300_Example tb7300)
-endif()
-
-if (JPEG_FOUND)
-    add_example(VCAP_Example vcap)
-endif()
-
-if (NOT ANDROID)
-    add_example(StepMotor_Example stepmotor)
-endif ()
diff --git a/examples/java/CWLSXXA_Example.java b/examples/java/CWLSXXA_Example.java
deleted file mode 100644
index e0f3052..0000000
--- a/examples/java/CWLSXXA_Example.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_cwlsxxa.CWLSXXA;
-
-public class CWLSXXA_Example 
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate an CWLSXXA instance, using A0 for CO2, A1 for
-        // humidity and A2 for temperature
-        CWLSXXA sensor = new CWLSXXA(0, 1, 2);
-        
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                // we show both C and F for temperature
-                System.out.println("Temperature: " 
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println("Humidity: "
-                                   + sensor.getHumidity()
-                                   + " %");
-
-                System.out.println("CO2: "
-                                   + sensor.getCO2()
-                                   + " ppm");
-                
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/Collision_Example.java b/examples/java/Collision_Example.java
deleted file mode 100644
index 8a163d2..0000000
--- a/examples/java/Collision_Example.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_collision.*;
-
-public class Collision_Example {
-
-	public static void main(String[] args) {
-		// Initializing the sensor on D2 on the Base Shield
-		upm_collision.Collision collision = new upm_collision.Collision(2);
-		boolean collisionState = false;
-
-		// ! [Interesting]
-		while(true){
-			if(collision.isColliding() && !collisionState){
-				System.out.println("Collision!!");
-				collisionState = true;
-			}
-			else if (collisionState){
-				System.out.println("No Collision!");
-				collisionState = false;
-			}
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/DFREC_Example.java b/examples/java/DFREC_Example.java
deleted file mode 100644
index 6209260..0000000
--- a/examples/java/DFREC_Example.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_dfrec.DFREC;
-
-public class DFREC_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a DFRobot EC sensor on analog pin A0, with a ds18b20
-        // temperature sensor connected to UART 0, and a device index (for
-        // the ds1820b uart bus) of 0, and an analog reference voltage of
-        // 5.0.
-        DFREC sensor = new DFREC(0, 0, 0, 5.0f);
-
-        // Every 2 seconds, update and print values
-        while (true)
-            {
-                sensor.update();
-
-                System.out.println("EC = "
-                                   + sensor.getEC()
-                                   + " ms/cm");
-                System.out.println("Volts = "
-                                   + sensor.getVolts()
-                                   + ", Temperature = "
-                                   + sensor.getTemperature()
-                                   + " C");
-
-                System.out.println();
-                Thread.sleep(2000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/DFRORP_Example.java b/examples/java/DFRORP_Example.java
deleted file mode 100644
index 1a8c388..0000000
--- a/examples/java/DFRORP_Example.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_dfrorp.DFRORP;
-
-public class DFRORP_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a DFRobot ORP sensor on analog pin A0 with an
-        // analog reference voltage of 5.0.
-        DFRORP sensor = new DFRORP(0, 5.0f);
-
-        // To calibrate:
-        //
-        // Disconnect the sensor probe (but leave the sensor interface
-        // board connected).  Then run one of the examples while
-        // holding down the 'calibrate' button on the device.  Read
-        // the ORP value reported (it should be fairly small).
-        //
-        // This value is what you should supply to
-        // setCalibrationOffset().  Then reconnect the probe to the
-        // interface board and you should be ready to go.
-        //
-        // DO NOT press the calibrate button on the interface board
-        // while the probe is attached or you can permanently damage
-        // the probe.
-        sensor.setCalibrationOffset(0.97f);
-
-        // Every second, update and print values
-        while (true)
-            {
-                sensor.update();
-
-                System.out.println("ORP: " +
-                                   sensor.getORP()
-                                   + " mV");
-
-                System.out.println();
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/DFRPH_Example.java b/examples/java/DFRPH_Example.java
deleted file mode 100644
index 14c6a18..0000000
--- a/examples/java/DFRPH_Example.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class DFRPH_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Instantiate a DFRPH sensor on analog pin A0, with an analog
-		// reference voltage of 5.0 V
-		upm_dfrph.DFRPH sensor = new upm_dfrph.DFRPH(0, 5.0f);
-
-		// After calibration, set the offset (based on calibration with a pH
-		// 7.0 buffer solution). See the UPM sensor documentation for
-		// calibrations instructions.
-		sensor.setOffset(0.065f);
-
-		// Every second, sample the pH and output it's corresponding
-		// analog voltage.
-		while (true) {
-			System.out.println("Detected volts:  = " + sensor.volts());
-			System.out.println("pH value: " + sensor.pH());
-			Thread.sleep(1000);
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/DS1307_Example.java b/examples/java/DS1307_Example.java
deleted file mode 100644
index 7a9212c..0000000
--- a/examples/java/DS1307_Example.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class DS1307_Example {
-
-	static private void printTime(upm_ds1307.DS1307 rtc) {
-		System.out.print("The time is: " + rtc.getMonth() + "/" + rtc.getDayOfMonth() + "/"
-				+ rtc.getYear() + " " + rtc.getHours() + ":" + rtc.getMinutes() + ":"
-				+ rtc.getSeconds());
-
-		if (rtc.getAmPmMode()) {
-			if (rtc.getAmPmMode())
-				System.out.print(" PM");
-			else
-				System.out.print(" AM");
-		}
-
-		System.out.println();
-
-		if (rtc.getAmPmMode())
-			System.out.println("Clock is in AM/PM mode");
-		else
-			System.out.println("Clock is in 24h mode");
-
-	}
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a DS1037 on I2C bus 0
-		upm_ds1307.DS1307 rtc = new upm_ds1307.DS1307(0);
-
-		// always do this first
-		System.out.println("Loading the current time...");
-		if (!rtc.loadTime()) {
-			System.err.println("rtc->loadTime() failed.");
-			System.exit(-1);
-		}
-
-		printTime(rtc);
-
-		// set the year as an example
-		System.out.println("setting the year to 50");
-		rtc.setYear(50);
-		rtc.setTime();
-
-		// reload the time and print it
-		rtc.loadTime();
-		printTime(rtc);
-
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/E50HX_Example.java b/examples/java/E50HX_Example.java
deleted file mode 100644
index 24b6e3a..0000000
--- a/examples/java/E50HX_Example.java
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_e50hx.E50HX;
-
-public class E50HX_Example
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // You will need to edit this example to conform to your site
-        // and your devices, specifically the Device Object Instance
-        // ID passed to the constructor, and the arguments to
-        // initMaster() that are appropriate for your BACnet network.
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-        System.out.println("Initializing...");
-
-        // Instantiate an E50HX object for an E50HX device that has
-        // 1075425 as it's unique Device Object Instance ID.  NOTE:
-        // You will certainly want to change this to the correct value
-        // for your device(s).
-        E50HX sensor = new E50HX(1075425);
-
-        // Initialize our BACnet master, if it has not already been
-        // initialized, with the device and baudrate, choosing 1000001 as
-        // our unique Device Object Instance ID, 2 as our MAC address and
-        // using default values for maxMaster and maxInfoFrames
-        sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-        // Uncomment to enable debugging output
-        // sensor.setDebug(true);
-
-        System.out.println();
-        System.out.println("Device Description: "
-                           + sensor.getDeviceDescription());
-        System.out.println("Device Location: "
-                           + sensor.getDeviceLocation());
-        System.out.println();
-
-        // update and print a few values every 5 seconds
-        while (true)
-            {
-                System.out.println("System Voltage: "
-                                   + sensor.getAnalogValue(E50HX.ANALOG_VALUES_T.AV_System_Voltage)
-                                   + " "
-                                   + sensor.getAnalogValueUnits(E50HX.ANALOG_VALUES_T.AV_System_Voltage));
-
-                System.out.println("System Type: "
-                                   + sensor.getAnalogValue(E50HX.ANALOG_VALUES_T.AV_System_Type));
-
-                System.out.println("Energy Consumption: "
-                                   + sensor.getAnalogInput(E50HX.ANALOG_INPUTS_T.AI_Energy)
-                                   + " "
-                                   + sensor.getAnalogInputUnits(E50HX.ANALOG_INPUTS_T.AI_Energy));
-
-                System.out.println("Power Up Counter: "
-                                   + sensor.getAnalogInput(E50HX.ANALOG_INPUTS_T.AI_Power_Up_Count));
-
-                System.out.println();
-                Thread.sleep(5000);
-            }
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/ECEZO_Example.java b/examples/java/ECEZO_Example.java
deleted file mode 100644
index ddc2425..0000000
--- a/examples/java/ECEZO_Example.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ecezo.ECEZO;
-
-public class ECEZO_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-         // Instantiate a ECEZO sensor on uart 0 at 9600 baud.
-        ECEZO sensor = new ECEZO(0, 9600, false);
-
-        // For I2C, assuming the device is configured for address 0x64 on
-        // I2C bus 0, you could use something like:
-        //
-        // ECEZO sensor = new ECEZO(0, 0x64, true);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                System.out.println("EC "
-                                   + sensor.getEC()
-                                   + " uS/cm, TDS "
-                                   + sensor.getTDS()
-                                   + " mg/L, Salinity "
-                                   + sensor.getSalinity()
-                                   + " PSS-78, SG "
-                                   + sensor.getSG());
-
-                Thread.sleep(5000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/ECS1030_Example.java b/examples/java/ECS1030_Example.java
deleted file mode 100644
index d98ab5f..0000000
--- a/examples/java/ECS1030_Example.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_ecs1030.ECS1030;
-
-public class ECS1030_Example {
-
-	static {
-		try {
-			System.loadLibrary("javaupm_ecs1030");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		ECS1030 sensor = new ECS1030((short)0);
-		
-		while(true){
-			System.out.println("I = "+sensor.getCurrency_A()+", Power = "+sensor.getPower_A());
-			System.out.println("I = "+sensor.getCurrency_B()+", Power = "+sensor.getPower_B());
-		}
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/EHR_Example.java b/examples/java/EHR_Example.java
deleted file mode 100644
index 253884d..0000000
--- a/examples/java/EHR_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class EHR_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a  Ear-clip Heart Rate sensor on digital pin D2
-		upm_ehr.EHR heart = new upm_ehr.EHR(2);
-
-		// set the beat counter to 0, init the clock and start counting beats
-		heart.clearBeatCounter();
-		heart.initClock();
-		heart.startBeatCounter();
-
-		while (true) {
-			long millis = heart.getMillis();
-			long beats = heart.beatCounter();
-
-			// heartRate() requires that at least 5 seconds pass before
-			// returning anything other than 0
-			int hr = heart.heartRate();
-
-			// output milliseconds passed, beat count, and computed heart rate
-			System.out.println("Millis: " + millis + ", Beats: " + beats + ", Heart rate: " + hr);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/ENC03R_Example.java b/examples/java/ENC03R_Example.java
deleted file mode 100644
index 2c05a95..0000000
--- a/examples/java/ENC03R_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-public class ENC03R_Example {
-	private static final long CALIBRATION_SAMPLES = 1000;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Instantiate a ENC03R on analog pin A0
-		upm_enc03r.ENC03R gyro = new upm_enc03r.ENC03R(0);
-
-		System.out.println("Please place the sensor in a stable location, and do not");
-		System.out.println("move it while calibration takes place");
-		System.out.println("This may take a couple of minutes.");
-
-		gyro.calibrate(CALIBRATION_SAMPLES);
-		System.out.println("Calibration complete.  Reference value: " + gyro.calibrationValue());
-
-		// Read the input and print both the raw value and the angular velocity,
-		// waiting 1 second between readings
-		while (true) {
-			gyro.update();
-
-			System.out.println("Angular velocity: "
-                                           +  gyro.angularVelocity()
-                                           + " deg/s");
-
-			Thread.sleep(100);
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/ES08A_Example.java b/examples/java/ES08A_Example.java
deleted file mode 100644
index 01db78c..0000000
--- a/examples/java/ES08A_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class ES08A_Example {
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_servo.ES08A servo = new upm_servo.ES08A(6);
-
-		// Sets the shaft to 180, then to 90, then to 0,
-		// then back to 90, and finally back to 180,
-		// pausing for a second in between each angle
-		servo.setAngle(180);
-		System.out.println("Set angle to 180");
-		Thread.sleep(1000);
-
-		servo.setAngle(90);
-		System.out.println("Set angle to 90");
-		Thread.sleep(1000);
-
-		servo.setAngle(0);
-		System.out.println("Set angle to 0");
-		Thread.sleep(1000);
-
-		servo.setAngle(90);
-		System.out.println("Set angle to 90");
-		Thread.sleep(1000);
-
-		servo.setAngle(180);
-		System.out.println("Set angle to 180");
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/Emg_Example.java b/examples/java/Emg_Example.java
deleted file mode 100644
index a74f085..0000000
--- a/examples/java/Emg_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_emg.EMG;
-
-public class Emg_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Instantiating the Grove EMG sensor on Analog pin 0
-		EMG emg = new EMG(0);
-		System.out.println("Calibrating ... ");
-		emg.calibrate();
-
-		while(true){
-			System.out.println("EMG Val: "+emg.value());
-			try {
-				Thread.sleep(100);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-	}
-	//! [Interesting]
-}
diff --git a/examples/java/FlexSensor_Example.java b/examples/java/FlexSensor_Example.java
deleted file mode 100644
index 46d8295..0000000
--- a/examples/java/FlexSensor_Example.java
+++ /dev/null
@@ -1,41 +0,0 @@
-import upm_flex.Flex;
-
-public class FlexSensor_Example {
-
-	static {
-		try {
-			System.loadLibrary("javaupm_flex");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// The was tested with a Spectra Symbol flex sensor.
-		// We attached a 22K resistor to a breadboard,
-		// with 1 end attached to GND and the other connected to
-		// both the flex sensor and A0.
-		// The flex sensor was connected on 1 pin to the 22K resistor and A0
-		// and on the other pin to 5V.
-
-		// Instantiate a Flex sensor on analog pin A0
-		Flex flex = new Flex(0);
-		while(true){
-			System.out.println("Flex Sensor value is: "+flex.value());
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				e.printStackTrace();
-			}
-		}
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GROVESCAM_Example.java b/examples/java/GROVESCAM_Example.java
deleted file mode 100644
index 9fa6c33..0000000
--- a/examples/java/GROVESCAM_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class GROVESCAM_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Serial Camera on UART 0
-		upm_grovescam.GROVESCAM camera = new upm_grovescam.GROVESCAM(0);
-
-		// make sure port is initialized properly. 115200 baud is the default.
-		if (!camera.setupTty()) {
-			System.err.println("Failed to setup tty port parameters");
-			System.exit(-1);
-		}
-
-		if (camera.init())
-			System.out.println("Initialized...");
-		else
-			System.out.println("Initialization failed");
-
-		if (camera.preCapture())
-			System.out.println("preCapture succeeded...");
-		else
-			System.out.println("preCapture failed.");
-
-		if (camera.doCapture())
-			System.out.println("doCapture succeeded...");
-		else
-			System.out.println("doCapture failed.");
-
-		if (camera.getImageSize() > 0) {
-			System.out.println("Storing image.jpg...");
-
-			if (camera.storeImage("image.jpg"))
-				System.out.println("storeImage succeeded...");
-			else
-				System.out.println("storeImage failed.");
-
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GUVAS12D_Example.java b/examples/java/GUVAS12D_Example.java
deleted file mode 100644
index 3167a3b..0000000
--- a/examples/java/GUVAS12D_Example.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- *         Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015-2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GUVAS12D_Example {
-    // analog voltage, usually 3.3 or 5.0
-    private static final float GUVAS12D_AREF = 5;
-
-    public static void main(String[] args) throws InterruptedException {
-        // ! [Interesting]
-        // Instantiate a GUVAS12D on analog pin A0
-        upm_guvas12d.GUVAS12D volts = new upm_guvas12d.GUVAS12D(0,
-                                                                GUVAS12D_AREF);
-
-        while (true)
-        {
-            System.out.println("Volts: "
-                               + volts.volts()
-                               + ", Intensity: "
-                               + volts.intensity()
-                               + " mW/m^2");
-
-            Thread.sleep(1000);
-        }
-        // ! [Interesting]
-    }
-
-}
diff --git a/examples/java/Gp2y0a_Example.java b/examples/java/Gp2y0a_Example.java
deleted file mode 100644
index d02b15d..0000000
--- a/examples/java/Gp2y0a_Example.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_gp2y0a.GP2Y0A;
-
-public class Gp2y0a_Example {
-	
-	public static final float GP2Y0A_AREF 		= 5;
-	public static final short SAMPLES_PER_QUERY = 20;
-
-	static {
-		try {
-			System.loadLibrary("javaupm_gp2y0a");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Note, for the Grove 80cm version of this sensor, due to the way
-		// it is wired, you need to plug this into the A0 port, where it
-		// will use the available A1 pin for data.
-
-		// Instantiate a GP2Y0A on analog pin A1
-		GP2Y0A gp2y0a = new GP2Y0A(1);
-
-		// The higher the voltage (closer to AREF) the closer the object is.  NOTE:
-		// the measured voltage will probably not exceed 3.3 volts.
-		// Every second, print the averaged voltage value (averaged over 20 samples).
-		while(true){
-			System.out.println("AREF: " + GP2Y0A_AREF + "\t, Voltage Value (Higher means Closer): "+ gp2y0a.value(GP2Y0A_AREF, SAMPLES_PER_QUERY));
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GroveButton_Example.java b/examples/java/GroveButton_Example.java
deleted file mode 100644
index 479a668..0000000
--- a/examples/java/GroveButton_Example.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveButton_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Create the button object using GPIO pin 2
-		upm_grove.GroveButton button = new upm_grove.GroveButton(2);
-
-		while (true) {
-			System.out.println(button.name() + " value is " + button.value());
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GroveButton_intr_Example.java b/examples/java/GroveButton_intr_Example.java
deleted file mode 100644
index 4cf26b4..0000000
--- a/examples/java/GroveButton_intr_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveButton_intr_Example {
-
-	public static int counter = 0;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_grove.GroveButton b = new upm_grove.GroveButton(2);
-
-		ButtonISR callback = new ButtonISR();
-		b.installISR(2, callback);
-
-		while (true) {
-			System.out.println("Counter: " + counter);
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
-
-class ButtonISR implements Runnable {
-	public ButtonISR() {
-		super();
-	}
-
-	public void run() {
-		GroveButton_intr_Example.counter++;
-		System.out.println("Button pressed!");
-	}
-}
\ No newline at end of file
diff --git a/examples/java/GroveCollision_Example.java b/examples/java/GroveCollision_Example.java
deleted file mode 100644
index 50907f7..0000000
--- a/examples/java/GroveCollision_Example.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_grovecollision.*;
-
-public class GroveCollision_Example {
-
-	public static void main(String[] args) {
-		// Initializing the sensor on D2 on the Base Shield
-		upm_grovecollision.GroveCollision collision = new upm_grovecollision.GroveCollision(2);
-		boolean collisionState = false;
-
-		// ! [Interesting]
-		while(true){
-			if(collision.isColliding() && !collisionState){
-				System.out.println("Collision!!");
-				collisionState = true;
-			}
-			else if (collisionState){
-				System.out.println("No Collision!");
-				collisionState = false;
-			}
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/GroveEHR_Example.java b/examples/java/GroveEHR_Example.java
deleted file mode 100644
index 5a209b5..0000000
--- a/examples/java/GroveEHR_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class GroveEHR_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Ear-clip Heart Rate sensor on digital pin D2
-		upm_groveehr.GroveEHR heart = new upm_groveehr.GroveEHR(2);
-
-		// set the beat counter to 0, init the clock and start counting beats
-		heart.clearBeatCounter();
-		heart.initClock();
-		heart.startBeatCounter();
-
-		while (true) {
-			long millis = heart.getMillis();
-			long beats = heart.beatCounter();
-
-			// heartRate() requires that at least 5 seconds pass before
-			// returning anything other than 0
-			int hr = heart.heartRate();
-
-			// output milliseconds passed, beat count, and computed heart rate
-			System.out.println("Millis: " + millis + ", Beats: " + beats + ", Heart rate: " + hr);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/GroveEmg_Example.java b/examples/java/GroveEmg_Example.java
deleted file mode 100644
index 5652f62..0000000
--- a/examples/java/GroveEmg_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_groveemg.GroveEMG;
-
-public class GroveEmg_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Instantiating the Grove EMG sensor on Analog pin 0
-		GroveEMG emg = new GroveEMG(0);
-		System.out.println("Calibrating ... ");
-		emg.calibrate();
-
-		while(true){
-			System.out.println("EMG Val: "+emg.value());
-			try {
-				Thread.sleep(100);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-	}
-	//! [Interesting]
-}
diff --git a/examples/java/GroveGsr_Example.java b/examples/java/GroveGsr_Example.java
deleted file mode 100644
index 3aaf5a9..0000000
--- a/examples/java/GroveGsr_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_grovegsr.GroveGSR;
-
-public class GroveGsr_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-
-		//! [Interesting]
-		// Instantiate a Grove GSR sensor on analog pin A0
-		GroveGSR gsr = new GroveGSR(0);
-		System.out.println("Calibrating...");
-		gsr.calibrate();
-		
-		while(true){
-			System.out.println("Value: "+gsr.value());
-			try {
-				Thread.sleep(500);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/GroveLEDBar_Example.java b/examples/java/GroveLEDBar_Example.java
deleted file mode 100644
index 2efd9ff..0000000
--- a/examples/java/GroveLEDBar_Example.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveLEDBar_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        //! [Interesting]
-        // Instantiate a Grove LED Bar, with Data pin D8 and Clock pin D9
-        upm_my9221.GroveLEDBar bar = new upm_my9221.GroveLEDBar((short) 8, (short) 9);
-        
-        while (true) {
-            for (short idx = 1; idx < 11; idx++) {
-                bar.setBarLevel(idx);
-                Thread.sleep(100);
-            }
-        }
-        //! [Interesting]
-    }
-	
-}
diff --git a/examples/java/GroveLED_Example.java b/examples/java/GroveLED_Example.java
deleted file mode 100644
index a065dc1..0000000
--- a/examples/java/GroveLED_Example.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveLED_Example {
-	public static void main (String args[]) throws InterruptedException {
-		//! [Interesting]
-        upm_grove.GroveLed led = new upm_grove.GroveLed(2);
-		
-		for (int i = 0; i < 10; ++i) {
-			led.on();
-			Thread.sleep(1000);
-			led.off();
-			Thread.sleep(1000);
-		}
-		led.delete();
-        //! [Interesting]
-	}
-}
diff --git a/examples/java/GroveLed_multi_Example.java b/examples/java/GroveLed_multi_Example.java
deleted file mode 100644
index 9e213f8..0000000
--- a/examples/java/GroveLed_multi_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class GroveLed_multi_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a grove LED on D2. Here we are controlling a Grove
-		// Multi-color flash LED. We just just need to turn it on - it will
-		// then cycle through various colors (red, green, blue, purple) on it's
-		// own until turned off.
-		upm_grove.GroveLed led = new upm_grove.GroveLed(2);
-
-		// start the light show
-		led.on();
-
-		// just sleep until interrupted
-		while (true) {
-			Thread.sleep(1);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/GroveLight_Example.java b/examples/java/GroveLight_Example.java
deleted file mode 100644
index 4b2549e..0000000
--- a/examples/java/GroveLight_Example.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveLight_Example {
-	public static void main(String args[]) throws InterruptedException {
-		// ! [Interesting]
-		upm_grove.GroveLight gl = new upm_grove.GroveLight(2);
-
-		while (true) {
-			float raw_value = gl.raw_value();
-			float value = gl.value();
-
-			System.out.println("raw value: " + raw_value);
-			System.out.println("value: " + value);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/GroveLineFinder_Example.java b/examples/java/GroveLineFinder_Example.java
deleted file mode 100644
index dc7b966..0000000
--- a/examples/java/GroveLineFinder_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveLineFinder_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Line Finder sensor on digital pin D2
-		upm_grovelinefinder.GroveLineFinder finder = new upm_grovelinefinder.GroveLineFinder(2);
-		// check every second for the presence of white detection
-		while (true) {
-			boolean val = finder.whiteDetected();
-			if (val) {
-				System.out.println("White detected");
-			} else {
-				System.out.println("Black detected");
-			}
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GroveMD_Example.java b/examples/java/GroveMD_Example.java
deleted file mode 100644
index 4c1306e..0000000
--- a/examples/java/GroveMD_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveMD_Example {
-	private static final short speed50 = 127;
-	private static final short speed0 = 0;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate an I2C Grove Motor Driver on I2C bus 0
-		upm_grovemd.GroveMD motors = new upm_grovemd.GroveMD();
-
-		// set direction to clockwise (CW) and set speed to 50%
-		System.out.println("Spin M1 and M2 at half speed for 3 seconds");
-		motors.setMotorDirections(upm_grovemd.GroveMD.DC_DIRECTION_T.DIR_CW,
-				upm_grovemd.GroveMD.DC_DIRECTION_T.DIR_CW);
-		motors.setMotorSpeeds(speed50, speed50);
-		Thread.sleep(3000);
-
-		// counter clockwise (CCW)
-		System.out.println("Reversing M1 and M2 for 3 seconds");
-		motors.setMotorDirections(upm_grovemd.GroveMD.DC_DIRECTION_T.DIR_CCW,
-				upm_grovemd.GroveMD.DC_DIRECTION_T.DIR_CCW);
-		Thread.sleep(3000);
-
-		// stop motors
-		System.out.println("Stopping motors");
-		motors.setMotorSpeeds(speed0, speed0);
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GroveMQ3_Example.java b/examples/java/GroveMQ3_Example.java
deleted file mode 100644
index 08f36c6..0000000
--- a/examples/java/GroveMQ3_Example.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
- 
-import upm_gas.Gas;
-import upm_gas.MQ2;
-import upm_gas.MQ3;
-import upm_gas.MQ4;
-import upm_gas.MQ5;
-import upm_gas.MQ6;
-import upm_gas.MQ7;
-import upm_gas.MQ8;
-import upm_gas.MQ9;
-import upm_gas.TP401;
-import upm_gas.thresholdContext;
-
-public class GroveMQ3_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// initialize the sensor on A0
-		MQ3 mq3 = new MQ3(0);
-
-		short[] buffer = new short[128];
-
-		thresholdContext context = new thresholdContext();
-
-		context.setAverageReading(0);
-		context.setRunningAverage(0);
-		context.setAveragedOver(2);
-
-		int len;
-		int thres;
-		while(true){
-			len = mq3.getSampledWindow((long)2, buffer);
-
-			if(len != 0){
-				thres = mq3.findThreshold(context, 30, buffer);
-				mq3.printGraph(context, (short)5);
-				if(thres != 0){
-					// do something
-					System.out.println("threshold is crossed");
-				}
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/GroveMQ9_Example.java b/examples/java/GroveMQ9_Example.java
deleted file mode 100644
index 082a551..0000000
--- a/examples/java/GroveMQ9_Example.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
- 
-import upm_gas.Gas;
-import upm_gas.MQ2;
-import upm_gas.MQ3;
-import upm_gas.MQ4;
-import upm_gas.MQ5;
-import upm_gas.MQ6;
-import upm_gas.MQ7;
-import upm_gas.MQ8;
-import upm_gas.MQ9;
-import upm_gas.TP401;
-import upm_gas.thresholdContext;
-
-public class GroveMQ9_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// initialize the sensor on A0
-		MQ9 mq9 = new MQ9(0);
-
-		short[] buffer = new short[128];
-
-		thresholdContext context = new thresholdContext();
-
-		context.setAverageReading(0);
-		context.setRunningAverage(0);
-		context.setAveragedOver(2);
-
-		int len;
-		int thres;
-		while(true){
-			len = mq9.getSampledWindow((long)2, buffer);
-
-			if(len != 0){
-				thres = mq9.findThreshold(context, 30, buffer);
-				mq9.printGraph(context, (short)5);
-				if(thres != 0){
-					// do something
-					System.out.println("threshold is crossed");
-				}
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/GroveMoisture_Example.java b/examples/java/GroveMoisture_Example.java
deleted file mode 100644
index 6207691..0000000
--- a/examples/java/GroveMoisture_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveMoisture_Example {
-	public static void main(String args[]) throws InterruptedException {
-		// ! [Interesting]
-		upm_grovemoisture.GroveMoisture gm = new upm_grovemoisture.GroveMoisture(1);
-
-		while (true) {
-			int moisture_val = gm.value();
-			String result;
-
-			if (moisture_val >= 0 && moisture_val < 300)
-				result = "Dry";
-			else if ((moisture_val >= 0 && moisture_val < 300))
-				result = "Moist";
-			else
-				result = "Wet";
-
-			System.out.println("Moisture Value: " + moisture_val + ", " + result);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/GroveO2_Example.java b/examples/java/GroveO2_Example.java
deleted file mode 100644
index e50edb5..0000000
--- a/examples/java/GroveO2_Example.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_groveo2.GroveO2;
-
-public class GroveO2_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Initializing the Grove O2 sensor on the A) analog pin
-		GroveO2 o2 = new GroveO2(0);
-
-		while(true){
-			System.out.println("The output voltage is: "+o2.voltageValue());
-			try {
-				Thread.sleep(100);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception has occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-}
diff --git a/examples/java/GroveQTouch_Example.java b/examples/java/GroveQTouch_Example.java
deleted file mode 100644
index 9b83af6..0000000
--- a/examples/java/GroveQTouch_Example.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_at42qt1070.AT42QT1070;
-
-public class GroveQTouch_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		// Instantiating the Q Touch sensor on the I2C bus 0
-		AT42QT1070 touch = new AT42QT1070(0, (short) 0x1b);
-		short pressedButtons;
-
-		// ! [Interesting]
-		while(true){
-			touch.updateState();
-			printButtons(touch.getButtons());
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				e.printStackTrace();
-			}
-		}
-		// ! [Interesting]
-	}
-
-	/**
-	 * This function prints out the button numbers from 0 through 6
-	 * @param buttonNumber
-	 */
-	public static void printButtons(int buttonNumber){
-		boolean buttonPressed = false;
-		System.out.print("Button Pressed: ");
-		for(int i=0;i<7;i++){
-			if((buttonNumber & (1<<i)) != 0){
-				System.out.println(i+" ");
-				buttonPressed = true;
-			}
-		}
-
-
-
-		if(!buttonPressed){
-			System.out.println("None ");
-		}
-	}
-}
diff --git a/examples/java/GroveRelay_Example.java b/examples/java/GroveRelay_Example.java
deleted file mode 100644
index 69d9b2b..0000000
--- a/examples/java/GroveRelay_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveRelay_Example {
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Create the button object using UART
-		upm_grove.GroveRelay relay = new upm_grove.GroveRelay(5);
-
-		for (int i = 0; i < 3; i++) {
-			relay.on();
-			if (relay.isOn())
-				System.out.println("Relay is on");
-			Thread.sleep(1000);
-
-			relay.off();
-			if (relay.isOff())
-				System.out.println("Relay is off");
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/GroveRotary_Example.java b/examples/java/GroveRotary_Example.java
deleted file mode 100644
index efddf1b..0000000
--- a/examples/java/GroveRotary_Example.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveRotary_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_grove.GroveRotary knob = new upm_grove.GroveRotary(0);
-
-		while (true) {
-			float abs_value = knob.abs_value(); // Absolute raw value
-			float abs_deg = knob.abs_deg(); // Absolute degrees
-			float abs_rad = knob.abs_rad(); // Absolute radians
-			float rel_value = knob.rel_value(); // Relative raw value
-			float rel_deg = knob.rel_deg(); // Relative degrees
-			float rel_rad = knob.rel_rad(); // Relative radians
-
-			System.out.println("Absolute: " + abs_value + " raw, " + abs_deg + " deg, " + abs_rad
-					+ " rad");
-			System.out.println("Relative: " + rel_value + " raw, " + rel_deg + " deg, " + rel_rad
-					+ " rad");
-
-			Thread.sleep(3000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GroveSlide_Example.java b/examples/java/GroveSlide_Example.java
deleted file mode 100644
index 3f3ea80..0000000
--- a/examples/java/GroveSlide_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveSlide_Example {
-	public static void main (String args[]) throws InterruptedException {
-		//! [Interesting]
-        // Instantiate new grove slide potentiometer on  analog pin A0
-        upm_grove.GroveSlide slide = new upm_grove.GroveSlide(0);
-		
-		while (true) {
-			float raw_value = slide.raw_value();
-			float value = slide.voltage_value();
-
-			System.out.println("raw value: " + raw_value);
-			System.out.println("value: " + value);
-			
-			Thread.sleep(2500);
-		}
-        //! [Interesting]
-	}
-}
diff --git a/examples/java/GroveSpeaker_Example.java b/examples/java/GroveSpeaker_Example.java
deleted file mode 100644
index b752466..0000000
--- a/examples/java/GroveSpeaker_Example.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveSpeaker_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Speaker on digital pin D2
-		upm_grovespeaker.GroveSpeaker speaker = new upm_grovespeaker.GroveSpeaker(2);
-
-		// Play all 7 of the lowest notes
-		speaker.playAll();
-
-		// Play a medium C-sharp
-		speaker.playSound('c', true, "med");
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GroveTemp_Example.java b/examples/java/GroveTemp_Example.java
deleted file mode 100644
index f09c958..0000000
--- a/examples/java/GroveTemp_Example.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveTemp_Example {
-	public static void main (String args[]) throws InterruptedException {
-		//! [Interesting]
-        upm_grove.GroveTemp temp = new upm_grove.GroveTemp(3);
-		
-		for (int i = 0; i < 10; ++i) {
-			
-			int celsius = temp.value();
-			int fahrneheit = celsius * 2 + 32;
-
-			System.out.println("Celsius: " + celsius);
-			System.out.println("Fahrneheit: " + fahrneheit);
-			
-			Thread.sleep(1000);
-		}
-		temp.delete();
-        //! [Interesting]
-	}
-}
diff --git a/examples/java/GroveUltraSonic_Example.java b/examples/java/GroveUltraSonic_Example.java
deleted file mode 100644
index 1636b68..0000000
--- a/examples/java/GroveUltraSonic_Example.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveUltraSonic_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		upm_groveultrasonic.GroveUltraSonic sonar = new upm_groveultrasonic.GroveUltraSonic(2);
-
-		while (true) {
-			int width = sonar.getDistance();
-			System.out.println("Echo width = " + width);
-			System.out.println("Distance inches = " + width / 148.0);
-			Thread.sleep(1000);
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/GroveVDiv_Example.java b/examples/java/GroveVDiv_Example.java
deleted file mode 100644
index a18ef70..0000000
--- a/examples/java/GroveVDiv_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class GroveVDiv_Example {
-	private static final short gain3 = 3;
-	private static final short gain10 = 10;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Voltage Divider sensor on analog pin A0
-		upm_grovevdiv.GroveVDiv vDiv = new upm_grovevdiv.GroveVDiv(0);
-
-		// collect data and output measured voltage according to the setting
-		// of the scaling switch (3 or 10)
-		while (true) {
-			long val = vDiv.value(100);
-			float gain3val = vDiv.computedValue(gain3, val);
-			float gain10val = vDiv.computedValue(gain10, val);
-
-			System.out.println("ADC value: " + val + ", Gain 3: " + gain3val + "v, Gain 10: "
-					+ gain10val);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/GroveWFS_Example.java b/examples/java/GroveWFS_Example.java
deleted file mode 100644
index fd63018..0000000
--- a/examples/java/GroveWFS_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class GroveWFS_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Water Flow Sensor on digital pin D2
-		upm_grovewfs.GroveWFS flow = new upm_grovewfs.GroveWFS(2);
-
-		flow.clearFlowCounter();
-		flow.startFlowCounter();
-
-		while (true) {
-			System.out.print("Millis: " + flow.getMillis() + " FlowCount: " + flow.flowCounter());
-			System.out.println(" Flow Rate: " + flow.flowRate() + " LPM");
-
-			Thread.sleep(2000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/GroveWater_Example.java b/examples/java/GroveWater_Example.java
deleted file mode 100644
index e76446c..0000000
--- a/examples/java/GroveWater_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class GroveWater_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Water sensor on digital pin D2
-		upm_grovewater.GroveWater water = new upm_grovewater.GroveWater(2);
-
-		while (true) {
-			boolean val = water.isWet();
-			if (val) {
-				System.out.println("Sensor is wet");
-			} else {
-				System.out.println("Sensor is dry");
-			}
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/Gsr_Example.java b/examples/java/Gsr_Example.java
deleted file mode 100644
index 77ac7e4..0000000
--- a/examples/java/Gsr_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_gsr.GSR;
-
-public class Gsr_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-
-		//! [Interesting]
-		// Instantiate a Grove GSR sensor on analog pin A0
-		GSR gsr = new GSR(0);
-		System.out.println("Calibrating...");
-		gsr.calibrate();
-		
-		while(true){
-			System.out.println("Value: "+gsr.value());
-			try {
-				Thread.sleep(500);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/H3LIS331DL_Example.java b/examples/java/H3LIS331DL_Example.java
deleted file mode 100644
index 50089d8..0000000
--- a/examples/java/H3LIS331DL_Example.java
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class H3LIS331DL_Example {
-	
-	public static void main(String[] args) throws InterruptedException {
-		//! [Interesting]
-		
-		// Instantiate an H3LIS331DL on I2C bus 0
-		upm_h3lis331dl.H3LIS331DL sensor = new upm_h3lis331dl.H3LIS331DL(0);
-		
-		// Initialize the device with default values
-		sensor.init();
-		
-		while(true){
-			sensor.update();
-			
-			upm_h3lis331dl.IntVector val = sensor.getRawXYZ();
-			System.out.println( "Raw: X: " + val.get(0) + " Y: " + val.get(1) + " Z: " + val.get(2)  );
-			
-			upm_h3lis331dl.FloatVector accel = sensor.getAcceleration();
-			System.out.println( "Acceleration: X: " + accel.get(0) + " Y: " + accel.get(1) + " Z: " + accel.get(2) );
-			
-			Thread.sleep(1000);
-		}
-		//! [Interesting]
-	}
-}
diff --git a/examples/java/H803X_Example.java b/examples/java/H803X_Example.java
deleted file mode 100644
index 5d4828e..0000000
--- a/examples/java/H803X_Example.java
+++ /dev/null
@@ -1,123 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_h803x.H803X;
-
-public class H803X_Example 
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-        System.out.println("Initializing...");
-
-        // Instantiate an H803X instance, using MODBUS slave address 1, and
-        // default comm parameters (9600, 8, N, 2)
-        H803X sensor = new H803X(defaultDev, 1);
-        
-        // output the Slave ID (manufacturer, model, serno)
-        System.out.println("Slave ID: " + sensor.getSlaveID());
-        System.out.println();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                // H8035 / H8036
-                System.out.println("Consumption (kWh): " 
-                                   + sensor.getConsumption());
-                System.out.println("Real Power (kW): " 
-                                   + sensor.getRealPower());
-
-                if (sensor.isH8036())
-                    {
-                        // The H8036 has much more data available...
-                        
-                        System.out.println("Reactive Power (kVAR): "
-                                           + sensor.getReactivePower());
-                        System.out.println("Apparent Power (kVA): "
-                                           + sensor.getApparentPower());
-                        System.out.println("Power Factor: "
-                                           + sensor.getPowerFactor());
-                        System.out.println("Volts Line to Line: "
-                                           + sensor.getVoltsLineToLine());
-                        System.out.println("Volts Line to Neutral: "
-                                           + sensor.getVoltsLineToNeutral());
-                        
-                        System.out.println("Current: " + sensor.getCurrent());
-                        
-                        System.out.println("Real Power Phase A (kW): "
-                                           + sensor.getRealPowerPhaseA());
-                        System.out.println("Real Power Phase B (kW): "
-                                           + sensor.getRealPowerPhaseB());
-                        System.out.println("Real Power Phase C (kW): "
-                                           + sensor.getRealPowerPhaseC());
-                        
-                        System.out.println("Power Factor Phase A: "
-                                           + sensor.getPowerFactorPhaseA());
-                        System.out.println("Power Factor Phase B: "
-                                           + sensor.getPowerFactorPhaseB());
-                        System.out.println("Power Factor Phase C: "
-                                           + sensor.getPowerFactorPhaseC());
-                        
-                        System.out.println("Volts Phase A to B: "
-                                           + sensor.getVoltsPhaseAToB());
-                        System.out.println("Volts Phase B to C: "
-                                           + sensor.getVoltsPhaseBToC());
-                        System.out.println("Volts Phase A to C: "
-                                           + sensor.getVoltsPhaseAToC());
-                        System.out.println("Volts Phase A to Neutral: "
-                                           + sensor.getVoltsPhaseAToNeutral());
-                        System.out.println("Volts Phase B to Neutral: "
-                                           + sensor.getVoltsPhaseBToNeutral());
-                        System.out.println("Volts Phase C to Neutral: "
-                                           + sensor.getVoltsPhaseCToNeutral());
-                        
-                        System.out.println("Current Phase A: "
-                                           + sensor.getCurrentPhaseA());
-                        System.out.println("Current Phase B: "
-                                           + sensor.getCurrentPhaseB());
-                        System.out.println("Current Phase C: "
-                                           + sensor.getCurrentPhaseC());
-                        
-                        System.out.println("Avg Real Power (kW): "
-                                           + sensor.getAvgRealPower());
-                        System.out.println("Min Real Power (kW): "
-                                           + sensor.getMinRealPower());
-                        System.out.println("Max Real Power (kW): "
-                                           + sensor.getMaxRealPower());
-                    }
-
-                System.out.println();
-                Thread.sleep(2000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/HCSR04_Example.java b/examples/java/HCSR04_Example.java
deleted file mode 100644
index 9798d4e..0000000
--- a/examples/java/HCSR04_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-import upm_hcsr04.*;
-
-public class HCSR04_Example {
-
-	// ! [Interesting]
-	public static void main(String[] args) throws InterruptedException {
-		HCSR04 sonar = new HCSR04((short) 2, (short) 4);
-
-		Thread.sleep(1000);
-
-		while (true) {
-			System.out.println("Get distance");
-			double distance = sonar.getDistance(HCSR04_U.swigToEnum(0));
-			System.out.println("Distance: " + distance);
-
-			Thread.sleep(5000);
-		}
-	}
-}
-// ! [Interesting]
\ No newline at end of file
diff --git a/examples/java/HKA5_Example.java b/examples/java/HKA5_Example.java
deleted file mode 100644
index e485fa1..0000000
--- a/examples/java/HKA5_Example.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_hka5.HKA5;
-
-public class HKA5_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate a HKA5 sensor on uart 0.  We don't use the set or
-        // reset pins, so we pass -1 for them.
-        HKA5 sensor = new HKA5(0, -1, -1);
-
-        // update once every 2 seconds and output data
-        while (true)
-            {
-                sensor.update();
-
-                System.out.println("PM 1  : "
-                                   + sensor.getPM1()
-                                   + " ug/m3");
-                System.out.println("PM 2.5: "
-                                   + sensor.getPM2_5()
-                                   + " ug/m3");
-                System.out.println("PM 10 : "
-                                   + sensor.getPM10()
-                                   + " ug/m3");
-
-                System.out.println();
-                Thread.sleep(2000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/HM11_Example.java b/examples/java/HM11_Example.java
deleted file mode 100644
index f7ec8b0..0000000
--- a/examples/java/HM11_Example.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class HM11_Example {
-
-	private static final int BUFSIZ = 1024;
-
-	private static void printUsage() {
-		System.out.println("Usage: java HM11_Example [AT command]");
-
-		System.out.println("If an argument is supplied on the command line, that argument is");
-		System.out.println("sent to the module and the response is printed out.");
-		System.out.println("If no argument is used, then the address and PIN of the module");
-		System.out.println("are queried and the results printed out.");
-
-	}
-
-	private static void sendCommand(upm_hm11.HM11 ble, byte[] cmd) {
-		byte[] buffer = new byte[BUFSIZ];
-		ble.writeData(cmd);
-
-		// wait up to 1 second
-		if (ble.dataAvailable(1000)) {
-			ble.readData(buffer);
-		} else {
-			System.err.println("Timed out waiting for response");
-		}
-
-	}
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a HM11 BLE Module on UART 0
-		upm_hm11.HM11 ble = new upm_hm11.HM11(0);
-
-		// make sure port is initialized properly. 9600 baud is the default.
-		if (!ble.setupTty()) {
-			System.err.println("Failed to setup tty port parameters");
-			System.exit(-1);
-		}
-
-		printUsage();
-
-		if (args.length > 0) {
-			System.out.println("Sending command line argument (" + args[0] + ")...");
-			sendCommand(ble, args[0].getBytes());
-		} else {
-			// query the module address
-			String addr = "AT+ADDR?";
-			System.out.println("Querying module address (" + addr + ")...");
-			sendCommand(ble, addr.getBytes());
-
-			Thread.sleep(1000);
-
-			// query the module address
-			String pin = "AT+PASS?";
-			System.out.println("Querying module pin (" + pin + ")...");
-			sendCommand(ble, pin.getBytes());
-
-			// Other potentially useful commands are:
-			//
-			// AT+VERS? - query module version
-			// AT+ROLE0 - set as slave
-			// AT+ROLE1 - set as master
-			// AT+CLEAR - clear all previous settings
-			// AT+RESET - restart the device
-			//
-			// A comprehensive list is available from the datasheet at:
-			// http://www.seeedstudio.com/wiki/images/c/cd/Bluetooth4_en.pdf
-
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/HMTRP_Example.java b/examples/java/HMTRP_Example.java
deleted file mode 100644
index 0a6ea91..0000000
--- a/examples/java/HMTRP_Example.java
+++ /dev/null
@@ -1,122 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class HMTRP_Example {
-
-	static private final int bufferLength = 255;
-
-	private static void printUsage() {
-		System.out.println("Usage:");
-		System.out.println("Pass a commandline argument (any argument) to this program");
-		System.out.println("to query the radio configuration and output it.  NOTE: the");
-		System.out.println("radio must be in CONFIG mode for this to work.");
-		System.out.println("Running this program without arguments will simply transmit");
-		System.out.println("'Hello World!' every second, and output any data received from");
-		System.out.println("another radio.");
-	}
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a HMTRP radio device on uart 0
-		upm_hmtrp.HMTRP radio = new upm_hmtrp.HMTRP(0);
-
-		// make sure port is initialized properly. 9600 baud is the default.
-		if (!radio.setupTty()) {
-			System.err.println("Failed to setup tty port parameters");
-			System.exit(-1);
-		}
-		printUsage();
-
-		// By default, this radio simply transmits data sent via writeData()
-		// and reads any available data via readData().
-
-		// It can be placed into a configuration mode by grounding the
-		// CONFIG pin on the module. When this is done, the various
-		// configuration query and config methods can be used. In this
-		// example, by default, we just read any data available fom the
-		// device, and periodically transmit "Hello World".
-
-		// If any argument was specified on the command line, do a simple
-		// configuration query and output the results. The radio must be in
-		// CONFIG mode for this to work.
-
-		if (args.length > 0) {
-			// config mode
-			long[] freq = {0};
-			long[] dataRate = {0};
-			int[] rxBandwidth = {0};
-			short[] modulation = {0};
-			short[] txPower = {0};
-			long[] uartBaud = {0};
-
-			if (radio.getConfig(freq, dataRate, rxBandwidth, modulation, txPower, uartBaud)) {
-				System.out.println("Radio configuration:");
-				System.out.println("freq: " + freq[0] + " dataRate: " + dataRate[0]
-						+ " rxBandwidth: " + rxBandwidth[0] + "Khz");
-				System.out.println("modulation: " + modulation[0] + "Khz txPower: " + txPower[0]
-						+ " uartBaud: " + uartBaud[0]);
-			} else {
-				System.err.println("getConfig() failed.  Make sure the radio is in CONFIG mode.");
-			}
-		} else {
-			// normal read/write mode
-			byte[] radioBuffer = new byte[bufferLength];
-			byte[] hello = "Hello World".getBytes();
-			int counter = 0;
-
-			System.out.println("Running in normal read/write mode.");
-
-			while (true) {
-				// we don't want the read to block in this example, so always
-				// check to see if data is available first.
-				if (radio.dataAvailable()) {
-					int rv = radio.readData(radioBuffer);
-
-					if (rv > 0) {
-						System.out.print("Received: ");
-						for (int i = 0; i < radioBuffer.length; i++)
-							System.out.print((char) radioBuffer[i]);
-						System.out.println();
-					} else {
-						System.err.println("Port read error.");
-						break;
-					}
-					continue;
-				}
-
-				Thread.sleep(100);
-
-				counter++;
-				// every second, transmit "Hello World!"
-				if (counter > 10) {
-					System.out.println("Transmitting hello world...");
-					radio.writeData(hello);
-					counter = 0;
-				}
-			}
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/HP20x_Example.java b/examples/java/HP20x_Example.java
deleted file mode 100644
index 9371908..0000000
--- a/examples/java/HP20x_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_hp20x.HP20X;
-
-public class HP20x_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-
-		//! [Interesting]
-		// Instantiate the sensor on the default I2C bus and sensor
-		HP20X hp20x = new HP20X();
-		
-		// Initializing the sensor with the default values
-		hp20x.init();
-
-		while(true){
-			System.out.println("Temperature: "+hp20x.getTemperature()+"\tPressure: "+hp20x.getPressure()+"\tAltitude: "+hp20x.getAltitude());
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-}
diff --git a/examples/java/HTU21D_Example.java b/examples/java/HTU21D_Example.java
deleted file mode 100644
index 85719bd..0000000
--- a/examples/java/HTU21D_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class HTU21D_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_htu21d.HTU21D sensor = new upm_htu21d.HTU21D(0);
-		sensor.testSensor();
-
-		while (true) {
-			sensor.sampleData();
-
-			System.out.println("Humidity: " + sensor.getHumidity() + "%");
-			System.out.println("Compensated RH: " + sensor.getCompRH() + "%");
-			System.out.println("Temperature: " + sensor.getTemperature() + "C");
-			System.out.println("Dew Point: " + sensor.getDewPoint() + "C");
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/Hmc5883l_Example.java b/examples/java/Hmc5883l_Example.java
deleted file mode 100644
index bdb52bd..0000000
--- a/examples/java/Hmc5883l_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Hmc5883l_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate on I2C
-		upm_hmc5883l.Hmc5883l compas = new upm_hmc5883l.Hmc5883l(0);
-
-		short[] pos;
-
-		// Set your declination from true north in radians
-		compas.set_declination(0.2749f);
-
-		while (true) {
-			// Update the coordinates
-			compas.update();
-
-			pos = compas.coordinates();
-			System.out.println("Coor: " + pos[0] + " " + pos[1] + " " + pos[2]);
-			System.out.println("Heading: " + compas.heading() + " Direction:" + compas.direction());
-
-			Thread.sleep(2000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/IMS_Example.java b/examples/java/IMS_Example.java
deleted file mode 100644
index 8b9ef00..0000000
--- a/examples/java/IMS_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ims.IMS;
-
-public class IMS_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-        // ! [Interesting]
-
-        // Instantiate a IMS instance using bus 0 and default i2c address
-        IMS sensor = new IMS((short)0);
-
-        while (true)
-        {
-            System.out.println("Version: "
-                    + sensor.get_version()
-                    + " light: "
-                    + sensor.get_light()
-                    + " moisture: "
-                    + sensor.get_moisture()
-                    + " temp: "
-                    + sensor.get_temperature()
-                    + " C");
-
-            Thread.sleep(1000);
-        }
-
-        // ! [Interesting]
-    }
-}
diff --git a/examples/java/Itg3200_Example.java b/examples/java/Itg3200_Example.java
deleted file mode 100644
index 41967fb..0000000
--- a/examples/java/Itg3200_Example.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class Itg3200_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] rot;
-		float[] ang;
-
-		// Note: Sensor not supported on Intel Edison with Arduino breakout
-		upm_itg3200.Itg3200 gyro = new upm_itg3200.Itg3200(0);
-
-		while (true) {
-			gyro.update();
-			rot = gyro.getRawValues();
-			ang = gyro.getRotation();
-
-			System.out.println("Raw Values: X: " + rot[0] + " Y: " + rot[1] + " Z: " + rot[2]);
-			System.out.println("Angular Velocities: X: " + ang[0] + " Y: " + ang[1] + " Z: "
-					+ ang[2]);
-
-			System.out.println("Temp: " + gyro.getTemperature() + ", Raw: " + gyro.getRawTemp());
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/Jhd1313m1_Example.java b/examples/java/Jhd1313m1_Example.java
deleted file mode 100644
index 7e5269d..0000000
--- a/examples/java/Jhd1313m1_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Jhd1313m1_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        // ! [Interesting]
-        upm_jhd1313m1.Jhd1313m1 lcd = new upm_jhd1313m1.Jhd1313m1(0);
-
-        lcd.setCursor(0, 0);
-        lcd.write("Hello World");
-        lcd.setCursor(1, 2);
-        lcd.write("Hello World");
-
-        System.out.println("Sleeping for 5 seconds");
-        Thread.sleep(5000);
-        lcd.clear();
-        // ! [Interesting]
-    }
-
-}
diff --git a/examples/java/Jhd1313m1_lcd_Example.java b/examples/java/Jhd1313m1_lcd_Example.java
deleted file mode 100644
index 781cb8f..0000000
--- a/examples/java/Jhd1313m1_lcd_Example.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Jhd1313m1_lcd_Example{
-
-    public static void main(String[] args) throws InterruptedException {
-        //! [Interesting]
-        upm_jhd1313m1.Jhd1313m1 lcd =
-            new upm_jhd1313m1.Jhd1313m1(1, 0x3E, 0x62);
-
-        lcd.setCursor(0,0);
-        lcd.write("Hello World");
-        lcd.setCursor(1,2);
-        lcd.write("Hello World");
-
-        System.out.println("Sleeping for 5 seconds");
-        Thread.sleep(5000);
-        lcd.clear();
-        //! [Interesting]
-    }
-
-}
diff --git a/examples/java/Joystick12_Example.java b/examples/java/Joystick12_Example.java
deleted file mode 100644
index cc2486b..0000000
--- a/examples/java/Joystick12_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Joystick12_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		//! [Interesting]
-		// Instantiate a joystick on analog pins A0 and A1
-		upm_joystick12.Joystick12 joystick = new upm_joystick12.Joystick12(0,1);
-
-		// Print the X and Y input values every second
-		while(true){
-			float x = joystick.getXInput();
-			float y = joystick.getYInput();
-
-			System.out.println("Driving X: " + x + " , and Y: " + y );
-
-			Thread.sleep(1000);
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/Joystick12_example_Example.java b/examples/java/Joystick12_example_Example.java
deleted file mode 100644
index 8a76f05..0000000
--- a/examples/java/Joystick12_example_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Joystick12_example_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		//! [Interesting]
-		// Instantiate a joystick on analog pins A0 and A1
-		upm_joystick12.Joystick12 joystick = new upm_joystick12.Joystick12(0,1);
-		
-		// Print the X and Y input values every second
-		while(true){
-			float x = joystick.getXInput();
-			float y = joystick.getYInput();
-			
-			System.out.println("Driving X: " + x + " , and Y: " + y );
-			
-			Thread.sleep(1000);
-		}
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/KX122_Example.java b/examples/java/KX122_Example.java
deleted file mode 100644
index c3b04d7..0000000
--- a/examples/java/KX122_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class KX122_Example {
-	public static void main(String[] args) throws InterruptedException {
-		//! [Interesting]
-		// Instantiate a KX122
-		upm_kx122.KX122 kx122 = new upm_kx122.KX122(0, -1, 24);
-
-		// Reset the device
-		kx122.softwareReset();
-
-		// Initialize the device
-		kx122.deviceInit(upm_kx122.KX122_ODR_T.KX122_ODR_50,
-				upm_kx122.KX122_RES_T.HIGH_RES,
-				upm_kx122.KX122_RANGE_T.KX122_RANGE_2G);
-
-		// Print the acceleration
-		while(true){
-			upm_kx122.floatVector xyz = kx122.getAccelerationDataVector();
-			System.out.println("Acceleration: x = " + xyz.get(0)
-				+ " y = " + xyz.get(1)
-				+ " z = " + xyz.get(2));
-
-			Thread.sleep(1000);
-		}
-		//! [Interesting]
-	}
-}
diff --git a/examples/java/KXTJ3_Example.java b/examples/java/KXTJ3_Example.java
deleted file mode 100755
index c9aa6b0..0000000
--- a/examples/java/KXTJ3_Example.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-public class KXTJ3_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-
-        upm_kxtj3.KXTJ3 kxtj3 = new upm_kxtj3.KXTJ3(0);
-
-        kxtj3.SensorInit(upm_kxtj3.KXTJ3_ODR_T.KXTJ3_ODR_25,
-            upm_kxtj3.KXTJ3_RESOLUTION_T.HIGH_RES,
-            upm_kxtj3.KXTJ3_G_RANGE_T.KXTJ3_RANGE_16G_14);
-
-        float waitTime = kxtj3.GetAccelerationSamplePeriod() * 1000;
-        int sampleCounter = 10;
-        System.out.println("Setting settings:\nODR: 25 Hz\nResolution: " +
-                            "High\nAcceleration range: 16g with 14bits");
-        System.out.println("Acceleration");
-        upm_kxtj3.floatVector xyz;
-        while (sampleCounter-- > 0) {
-            xyz = kxtj3.GetAccelerationVector();
-            System.out.println("x = " + xyz.get(0) + " y = " + xyz.get(1) +
-                            " z = " + xyz.get(2));
-
-            Thread.sleep((long) waitTime);
-        }
-    }
-}
diff --git a/examples/java/LCD_EBOLED_Example.java b/examples/java/LCD_EBOLED_Example.java
deleted file mode 100644
index f313da3..0000000
--- a/examples/java/LCD_EBOLED_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class LCD_EBOLED_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Instantiate an Edison Block OLED using default values
-		upm_lcd.EBOLED lcd = new upm_lcd.EBOLED();
-
-		lcd.clear();
-		lcd.setCursor(10, 15);
-		lcd.write("Hello");
-		lcd.setCursor(30, 15);
-		lcd.write("World!");
-		lcd.refresh();
-
-		System.out.println("Sleeping for 5 secconds...");
-		Thread.sleep(5000);
-
-		lcd.delete();
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/LCD_SSD1306_Example.java b/examples/java/LCD_SSD1306_Example.java
deleted file mode 100644
index 677b6b3..0000000
--- a/examples/java/LCD_SSD1306_Example.java
+++ /dev/null
@@ -1,146 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class LCD_SSD1306_Example {
-	
-	static private final int[] intel_logo = new int[]{
-	        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128, -128, -128, -128, 192, 192, 192, 224,
-	        224, 224, 224, 240, 240, 248, 248, 120, 120, 120, 120, 60, 60, 60, 60, 60,
-	        62, 30, 30, 30, 30, 30, 30, 30, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
-	        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 31, 31, 31, 31, 31,
-	        30, 62, 62, 62, 62, 126, 126, 124, 124, 252, 252, 248, 248, 240, 240, 240,
-	        224, 224, 224, 192, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128,
-	        128, 0, 56, 56, 28, 30, 14, 15, 15, 7, 7, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0,
-	        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	        192, 192, 192, 192, 192, 192, 192, 192, 0, 0, 0, 0, 192, 193, 195, 195,
-	        195, 7, 15, 15, 63, 127, 255, 255, 255, 254, 252, 252, 240, 192, 0, 0, 0,
-	        0, 0, 0, 0, 0, 128, 192, 192, 240, 248, 124, 124, 60, 0, 0, 0, 0, 159, 159,
-	        159, 159, 159, 159, 159, 159, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128,
-	        128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 0,
-	        0, 0, 0, 0, 254, 254, 254, 254, 254, 254, 254, 254, 128, 128, 128, 128,
-	        128, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 192, 192, 192, 192, 192, 192, 128,
-	        128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255,
-	        0, 0, 0, 0, 3, 7, 3, 3, 3, 0, 0, 0, 0, 0, 1, 1, 255, 255, 255, 255, 255,
-	        255, 255, 0, 0, 224, 248, 252, 252, 255, 127, 15, 15, 3, 1, 0, 0, 0, 0, 0,
-	        0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255,
-	        255, 255, 255, 255, 255, 15, 15, 15, 15, 15, 15, 255, 255, 255, 255, 255,
-	        255, 255, 252, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 15, 15,
-	        15, 15, 15, 224, 224, 252, 254, 255, 255, 255, 255, 159, 159, 143, 143,
-	        135, 135, 143, 159, 255, 255, 255, 255, 255, 255, 252, 248, 0, 0, 0, 255,
-	        255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
-	        224, 248, 248, 255, 255, 255, 255, 255, 127, 15, 255, 255, 255, 255, 255,
-	        255, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255,
-	        255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0,
-	        0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255,
-	        255, 255, 255, 255, 255, 192, 192, 192, 192, 192, 31, 31, 255, 255, 255,
-	        255, 255, 255, 231, 231, 199, 199, 199, 199, 199, 199, 199, 199, 231, 231,
-	        231, 231, 199, 135, 0, 0, 0, 63, 255, 255, 255, 255, 255, 255, 255, 0, 0,
-	        0, 0, 224, 240, 248, 248, 252, 254, 255, 255, 255, 127, 63, 63, 31, 15, 7,
-	        7, 1, 0, 0, 63, 63, 255, 255, 255, 255, 255, 240, 192, 192, 128, 0, 0, 0,
-	        0, 0, 0, 0, 0, 1, 3, 3, 7, 7, 7, 7, 7, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7,
-	        0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 3, 3, 7, 7, 7,
-	        7, 7, 7, 7, 7, 7, 0, 0, 0, 1, 3, 3, 3, 7, 7, 7, 7, 15, 15, 15, 15, 7, 7, 7,
-	        7, 7, 3, 3, 3, 1, 0, 0, 0, 0, 1, 3, 3, 7, 135, 135, 135, 192, 192, 0, 0, 7,
-	        7, 3, 3, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 15, 15,
-	        31, 127, 127, 127, 255, 255, 252, 252, 252, 248, 240, 240, 240, 224, 224,
-	        224, 192, 192, 192, 192, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	        0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192,
-	        224, 224, 224, 224, 240, 240, 240, 240, 248, 248, 248, 248, 252, 252, 252,
-	        254, 254, 255, 255, 255, 255, 255, 255, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0,
-	        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
-	        3, 3, 3, 7, 7, 7, 15, 15, 31, 31, 31, 63, 63, 63, 63, 63, 127, 127, 127,
-	        127, 127, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-	        254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-	        255, 255, 255, 255, 255, 255, 255, 127, 127, 127, 127, 127, 127, 127, 127,
-	        63, 63, 63, 63, 63, 31, 31, 31, 31, 31, 15, 15, 15, 15, 7, 7, 7, 7, 3, 3,
-	        3, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	        0, 0, 0, 0, 0, 0, 0
-	};
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		
-		upm_lcd.SSD1306 lcd = new upm_lcd.SSD1306(0x0, 0x3D);
-		
-		byte[] image = new byte[intel_logo.length];
-		for (int i = 0; i < intel_logo.length; i++)
-			image[i] = (byte) intel_logo[i];
-
-	    lcd.clear();
-	    lcd.stopscroll();
-	    lcd.draw(image);
-
-	    Thread.sleep(5000);
-
-	    lcd.clear();
-	    lcd.setCursor(2, 0);
-	    lcd.write("Hello");
-	    lcd.setCursor(3,0);
-	    lcd.write("World");
-	    
-	    Thread.sleep(3000);
-
-	    lcd.invert(true);
-
-	    Thread.sleep(3000);
-
-	    lcd.dim(true);
-
-	    Thread.sleep(3000);
-
-	    lcd.dim(false);
-
-	    Thread.sleep(3000);
-
-	    lcd.invert(false);
-	    lcd.startscrollright((short) 0x00, (short) 0x0F);
-
-	    Thread.sleep(5000);
-
-	    lcd.stopscroll();
-	    lcd.startscrollleft((short) 0x00, (short) 0x0F);
-
-	    Thread.sleep(5000);
-
-	    lcd.stopscroll();
-	    lcd.startscrolldiagleft((short) 0x00, (short) 0x0F);
-
-	    Thread.sleep(5000);;
-
-	    lcd.stopscroll();
-	    lcd.startscrolldiagright((short) 0x00,(short) 0x0F);
-
-	    Thread.sleep(5000);
-
-	    lcd.stopscroll();
-
-	    lcd.delete();
-		
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/LDT0028_Example.java b/examples/java/LDT0028_Example.java
deleted file mode 100644
index 5c0452b..0000000
--- a/examples/java/LDT0028_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class LDT0028_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Create the LDT0-028 Piezo Vibration Sensor object using AIO pin 0
-		upm_ldt0028.LDT0028 sensor = new upm_ldt0028.LDT0028(0);
-
-		System.out.println("Sensor name: " + sensor.name());
-
-		while (true) {
-			System.out.println("Sample value: " + sensor.getSample());
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/LE910_Example.java b/examples/java/LE910_Example.java
deleted file mode 100644
index d17ceca..0000000
--- a/examples/java/LE910_Example.java
+++ /dev/null
@@ -1,167 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_uartat.UARTAT;
-
-public class LE910_Example
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-    static private final int bufferLength = 256;
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        if (args.length > 0)
-            defaultDev = args[0];
-
-        System.out.println("Using device " + defaultDev);
-        System.out.println("Initializing...");
-
-        // Instantiate a UARTAT sensor on defaultDev at 115200 baud.
-        UARTAT sensor = new UARTAT(defaultDev, 115200);
-
-        // This is a simplistic example that tries to configure the LE910,
-        // and use it's built-in socket capabilities to connect to a
-        // remote host, obtain a small piece of data, and return it.  It's
-        // mainly intended to show you how you can use the various AT
-        // commands supported by the LE910 to perform simple tasks.
-        //
-        // You must have a valid SIM card with an active data plan for
-        // this example to do anything interesting.
-        //
-        // See the LE910 AT Commands reference for full information on
-        // what is possible with this device.  The uartat driver is
-        // intended to make it a little easier to control AT-style
-        // devices, but is by no means a full-featured communication
-        // infrastructure.  A "real" application will probably need to be
-        // much more sophisticated with regard to parsing, doing retries,
-        // etc.
-        //
-        // For experimenting with various AT commands, try using an
-        // interactive terminal emulator like minicom or screen.
-
-        // make sure we are in command mode
-        if (!sensor.inCommandMode())
-        {
-            System.out.println("Not in command mode, switching...");
-            sensor.commandMode("+++", 1000);
-        }
-
-        // flter out CR's in responses by default
-        sensor.filterCR(true);
-
-        System.out.println("Configuring modem...");
-
-        // discard any waiting characters
-        sensor.drain();
-
-        // reset modem
-        sensor.command("ATZ\r");
-
-        // turn off command echo, set verbosity to 1, enable data
-        // connection mode
-        sensor.command("ATE0 V1 +FCLASS=0\r");
-        sensor.drain();
-
-        // Now issue some commands and output the results.
-
-        System.out.println("Modem and SIM information:");
-
-        String buffer;
-
-        buffer = sensor.commandWithResponse("AT+ICCID\r", bufferLength);
-        if (buffer.length() > 0)
-        {
-            System.out.println("ICCID (SIM ID): " + buffer);
-        }
-
-        buffer = sensor.commandWithResponse("AT+CGSN=1\r", bufferLength);
-        if (buffer.length() > 0)
-        {
-            System.out.println("IMEI: " + buffer);
-        }
-
-        // see if we are on the network....
-        buffer = sensor.commandWithResponse("AT+CREG?\r", bufferLength);
-        if (buffer.length() > 0)
-        {
-            System.out.println(buffer);
-
-            // look for "CGREG: 0,1" or "CGREG: 0,5"
-            if (sensor.find(buffer, "CREG: 0,1") ||
-                sensor.find(buffer, "CREG: 0,5"))
-            {
-                System.out.println("Connected to the cell data network.");
-
-                // wait up to 5 seconds for responses now...
-                sensor.setResponseWaitTime(5000);
-
-                // setup PDP context (socket 1).  An ERROR repsonse is
-                // possible if the PDP context is already set up.
-                sensor.command("AT#SGACT=1,1\r");
-
-                // setup a TCP socket to nist.gov and read the timestamp.
-
-                System.out.println("Connecting to time-a.nist.gov, TCP port 13");
-
-                // Wait up to 60 seconds to find the NO CARRIER
-                // string, which will be present at the end, if the
-                // connection succeeded and the requested data was
-                // obtained.
-                buffer =
-                    sensor.commandWaitFor("AT#SD=1,0,13,\"time-a.nist.gov\"\r",
-                                          bufferLength, "\nNO CARRIER\n", 60000);
-                if (buffer.length() > 0)
-                {
-                    // print out the response
-                    System.out.println("RESPONSE: ");
-                    System.out.println(buffer);
-                }
-                else
-                {
-                    System.out.println("No response.");
-                }
-
-                // destroy PDP context
-                sensor.setResponseWaitTime(250);
-                sensor.command("AT#SGACT=1,0\r");
-            }
-            else
-            {
-                System.out.println("You do not appear to be connected to the network...");
-            }
-        }
-        else
-        {
-            System.out.println("Error executing query\n");
-        }
-
-        // reset the modem
-        sensor.command("ATZ\r");
-
-        System.out.println("Exiting");
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/LED_Example.java b/examples/java/LED_Example.java
deleted file mode 100644
index 70180ec..0000000
--- a/examples/java/LED_Example.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class LED_Example {
-	public static void main (String args[]) throws InterruptedException {
-		//! [Interesting]
-        upm_led.Led led = new upm_led.Led(2);
-		
-		for (int i = 0; i < 10; ++i) {
-			led.on();
-			Thread.sleep(1000);
-			led.off();
-			Thread.sleep(1000);
-		}
-		led.delete();
-        //! [Interesting]
-	}
-}
diff --git a/examples/java/LIS2DS12_Example.java b/examples/java/LIS2DS12_Example.java
deleted file mode 100644
index b56d307..0000000
--- a/examples/java/LIS2DS12_Example.java
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_lis2ds12.*;
-
-public class LIS2DS12_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a LIS2DS12 instance using default i2c bus and address
-        LIS2DS12 sensor = new LIS2DS12();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // LIS2DS12(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                floatVector dataA = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + dataA.get(0)
-                                   + " y: " + dataA.get(1)
-                                   + " z: " + dataA.get(2)
-                                   + " g");
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/LIS3DH_Example.java b/examples/java/LIS3DH_Example.java
deleted file mode 100644
index beb563a..0000000
--- a/examples/java/LIS3DH_Example.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Alex Tereschenko <alext.mkrs@gmail.com>
- * Copyright (c) 2018 Alex Tereschenko.
- *
- * Based on LIS2DS12 example by
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_lis3dh.*;
-
-public class LIS3DH_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a LIS3DH instance using default i2c bus and address
-        LIS3DH sensor = new LIS3DH();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // LIS3DH(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                floatVector dataA = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + dataA.get(0)
-                                   + " y: " + dataA.get(1)
-                                   + " z: " + dataA.get(2)
-                                   + " g");
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/LM35_Example.java b/examples/java/LM35_Example.java
deleted file mode 100644
index b303211..0000000
--- a/examples/java/LM35_Example.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class LM35_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Instantiate a LM35 on analog pin A0, with a default analog
-		// reference voltage of 5.0
-		upm_lm35.LM35 sensor = new upm_lm35.LM35(0);
-
-		// Every half second, sample the sensor and output the temperature
-
-		while (true) {
-			System.out.println("Temperature: " + sensor.getTemperature() + " C");
-			Thread.sleep(500);
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/LSM303AGR_Example.java b/examples/java/LSM303AGR_Example.java
deleted file mode 100644
index bf56911..0000000
--- a/examples/java/LSM303AGR_Example.java
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_lsm303agr.LSM303AGR;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class LSM303AGR_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a LSM303AGR instance using default i2c bus and address
-        LSM303AGR sensor = new LSM303AGR();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> data = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " g");
-
-                data = sensor.getMagnetometer();
-                System.out.println("Magnetometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " uT");
-
-                System.out.println("Temperature: "
-                                   + sensor.getTemperature());
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/LSM303DLH_Example.java b/examples/java/LSM303DLH_Example.java
deleted file mode 100644
index 8c3a25d..0000000
--- a/examples/java/LSM303DLH_Example.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class LSM303DLH_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate LSM303DLH compass on I2C
-		upm_lsm303dlh.LSM303DLH sensor = new upm_lsm303dlh.LSM303DLH(0);
-
-		// Get the coordinate data
-		sensor.getCoordinates();
-		short[] coor = sensor.getRawCoorData(); // in XYZ order.
-		// The sensor returns XZY, but the driver compensates and makes it XYZ
-
-		// Print out the X, Y, and Z coordinate data using two different methods
-		System.out.println("coor: rX " + coor[0] + " - rY " + coor[1] + " - rZ " + coor[2]);
-		System.out.println("coor: gX " + sensor.getCoorX() + " - gY " + sensor.getCoorY()
-				+ " - gZ " + sensor.getCoorZ());
-
-		// Get and print out the heading
-		System.out.println("heading: " + sensor.getHeading());
-
-		// Get the acceleration
-		sensor.getAcceleration();
-		short[] accel = sensor.getRawAccelData();
-
-		// Print out the X, Y, and Z acceleration data using two different
-		// methods
-		System.out.println("acc: rX " + accel[0] + " - rY " + accel[1] + " - rZ " + accel[2]);
-		System.out.println("acc: gX " + sensor.getAccelX() + " - gY " + sensor.getAccelY()
-				+ " - gZ " + sensor.getAccelZ());
-
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/LSM303D_Example.java b/examples/java/LSM303D_Example.java
deleted file mode 100644
index ce262a2..0000000
--- a/examples/java/LSM303D_Example.java
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_lsm303d.LSM303D;
-import java.util.AbstractList;
-import java.lang.Float;
-
-public class LSM303D_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a LSM303D instance using default i2c bus and address
-        LSM303D sensor = new LSM303D();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                AbstractList<Float> data = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " g");
-
-                data = sensor.getMagnetometer();
-                System.out.println("Magnetometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " uT");
-
-                System.out.println("Temperature: "
-                                   + sensor.getTemperature());
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/LSM6DS3H_Example.java b/examples/java/LSM6DS3H_Example.java
deleted file mode 100644
index b705cb0..0000000
--- a/examples/java/LSM6DS3H_Example.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_lsm6ds3h.*;
-
-public class LSM6DS3H_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a LSM6DS3H instance using default i2c bus and address
-        LSM6DS3H sensor = new LSM6DS3H();
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // LSM6DS3H(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                floatVector data = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " g");
-
-                data = sensor.getGyroscope();
-
-                System.out.println("Gyroscope x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " dps");
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/LSM6DSL_Example.java b/examples/java/LSM6DSL_Example.java
deleted file mode 100644
index 373c54d..0000000
--- a/examples/java/LSM6DSL_Example.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_lsm6dsl.*;
-
-public class LSM6DSL_Example
-{
-    public static void main(String[] args) throws InterruptedException
-        {
-// ! [Interesting]
-
-            // Instantiate a LSM6DSL instance using default i2c bus and address
-            LSM6DSL sensor = new LSM6DSL();
-
-            // For SPI, bus 0, you would pass -1 as the address, and a
-            // valid pin for CS:
-            // LSM6DSL(0, -1, 10);
-
-            while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                floatVector data = sensor.getAccelerometer();
-
-                System.out.println("Accelerometer x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " g");
-
-                data = sensor.getGyroscope();
-
-                System.out.println("Gyroscope x: " + data.get(0)
-                                   + " y: " + data.get(1)
-                                   + " z: " + data.get(2)
-                                   + " dps");
-
-                System.out.println("Compensation Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(250);
-            }
-
-// ! [Interesting]
-        }
-}
diff --git a/examples/java/LSM9DS0_Example.java b/examples/java/LSM9DS0_Example.java
deleted file mode 100644
index a84dc52..0000000
--- a/examples/java/LSM9DS0_Example.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class LSM9DS0_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting
-
-		// Instantiate an LSM9DS0 using default parameters (bus 1, gyro addr 6b,
-		// xm addr 1d)
-
-		upm_lsm9ds0.LSM9DS0 sensor = new upm_lsm9ds0.LSM9DS0();
-
-		sensor.init();
-
-		while (true) {
-			sensor.update();
-
-			float[] accel = sensor.getAccelerometer();
-			System.out.println("Accelerometer: ");
-			System.out.println("AX: " + accel[0] + "; AY: " + accel[1] + "; AZ: " + accel[2]);
-
-			float[] gyro = sensor.getGyroscope();
-			System.out.println("Gyroscope: ");
-			System.out.println("GX: " + gyro[0] + "; GY: " + gyro[1] + "; GZ: " + gyro[2]);
-
-			float[] magnet = sensor.getMagnetometer();
-			System.out.println("Magnetometer: ");
-			System.out.println("MX: " + magnet[0] + "; MY: " + magnet[1] + "; MZ: " + magnet[2]);
-
-			System.out.println("Temperature: " + sensor.getTemperature());
-
-			Thread.sleep(500);
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/Lcm1602_i2c_Example.java b/examples/java/Lcm1602_i2c_Example.java
deleted file mode 100644
index b13e9cb..0000000
--- a/examples/java/Lcm1602_i2c_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class Lcm1602_i2c_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        // ! [Interesting]
-        upm_lcm1602.Lcm1602 lcd = new upm_lcm1602.Lcm1602(0, 0x27);
-
-        lcd.setCursor(0, 0);
-        lcd.write("Hello World");
-        Thread.sleep(3000);
-
-        lcd.setCursor(1, 2);
-        lcd.write("Hello World");
-        Thread.sleep(3000);
-
-        // ! [Interesting]
-    }
-}
diff --git a/examples/java/Lcm1602_parallel_Example.java b/examples/java/Lcm1602_parallel_Example.java
deleted file mode 100644
index 64995b5..0000000
--- a/examples/java/Lcm1602_parallel_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class Lcm1602_parallel_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        // ! [Interesting]
-        // LCD connection:
-        // LCD RS pin to digital pin 8
-        // LCD Enable pin to digital pin 13
-        // LCD D4 pin to digital pin 2
-        // LCD D5 pin to digital pin 3
-        // LCD D6 pin to digital pin 4
-        // LCD D7 pin to digital pin 5
-        // LCD R/W pin to ground
-        // 10K trimmer potentiometer:
-        // ends to +5V and ground
-        // wiper to LCD VO pin (pin 3)
-        upm_lcm1602.Lcm1602 lcd =
-            new upm_lcm1602.Lcm1602(8, 13, 2, 3, 4, 5, (short) 16, (short) 2);
-
-        lcd.setCursor(0, 0);
-        lcd.write("Hello World");
-        lcd.setCursor(1, 2);
-        lcd.write("Hello World");
-
-        System.out.println("Sleeping for 5 seconds");
-        Thread.sleep(5000);
-        // ! [Interesting]
-    }
-}
diff --git a/examples/java/Light_Example.java b/examples/java/Light_Example.java
deleted file mode 100644
index 508a237..0000000
--- a/examples/java/Light_Example.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Light_Example {
-    public static void main(String args[]) throws InterruptedException {
-        // ! [Interesting]
-        upm_light.Light gl = new upm_light.Light(0);
-
-        while (true) {
-            float raw_value = gl.getNormalized();
-            float value = gl.value();
-
-            System.out.println("normalized: " + raw_value);
-            System.out.println("value: " + value);
-
-            Thread.sleep(1000);
-        }
-        // ! [Interesting]
-    }
-}
diff --git a/examples/java/LineFinder_Example.java b/examples/java/LineFinder_Example.java
deleted file mode 100644
index a9257f4..0000000
--- a/examples/java/LineFinder_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class LineFinder_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a  Line Finder sensor on digital pin D2
-		upm_linefinder.LineFinder finder = new upm_linefinder.LineFinder(2);
-		// check every second for the presence of white detection
-		while (true) {
-			boolean val = finder.whiteDetected();
-			if (val) {
-				System.out.println("White detected");
-			} else {
-				System.out.println("Black detected");
-			}
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/LoL_Example.java b/examples/java/LoL_Example.java
deleted file mode 100644
index efa017d..0000000
--- a/examples/java/LoL_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class LoL_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_lol.LoL sensor = new upm_lol.LoL();
-
-		int x = 0, y = 0;
-		while (true) {
-			// revert pixel
-			sensor.setPixel(x, y, sensor.getPixel(x, y));
-
-			if (++x == 13) {
-				x = 0;
-				y++;
-			}
-			if (y == 9)
-				y = 0;
-			Thread.sleep(10);
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/LoL_example_Example.java b/examples/java/LoL_example_Example.java
deleted file mode 100644
index e5b4794..0000000
--- a/examples/java/LoL_example_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class LoL_example_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_lol.LoL sensor = new upm_lol.LoL();
-
-		int x = 0, y = 0;
-		while (true) {
-			// revert pixel
-			sensor.setPixel(x, y, sensor.getPixel(x, y));
-
-			if (++x == 13) {
-				x = 0;
-				y++;
-			}
-			if (y == 9)
-				y = 0;
-			Thread.sleep(10);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/Loudness_Example.java b/examples/java/Loudness_Example.java
deleted file mode 100644
index 1d3fee9..0000000
--- a/examples/java/Loudness_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Loudness_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Loudness sensor on analog pin A0, with an analog
-		// reference voltage of 5.0V
-		upm_loudness.Loudness loud = new upm_loudness.Loudness(0, (float) 5.0);
-
-		// Every tenth of a second, sample the loudness and output it's
-		// corresponding analog voltage.
-
-		while (true) {
-			System.out.println("Detected loudness (volts): " + loud.loudness());
-			Thread.sleep(100);
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/M24LR64E_Example.java b/examples/java/M24LR64E_Example.java
deleted file mode 100644
index cdb2196..0000000
--- a/examples/java/M24LR64E_Example.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class M24LR64E_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate an M24LR64E on I2C bus 0
-		upm_m24lr64e.M24LR64E nfcTag = new upm_m24lr64e.M24LR64E(0);
-
-		// This example accesses the device in the 'user' (default) mode,
-		// reads the last byte of data in the EEPROM, inverts it, writes
-		// it back, and then re-reads it.
-
-		// Read the last byte of the EEPROM area
-		int addr = upm_m24lr64e.M24LR64E.EEPROM_I2C_LENGTH - 1;
-		System.out.println("Address: " + addr);
-		short read = nfcTag.readByte(addr);
-		System.out.println("Read: " + read);
-
-		// Now change it to it's opposite and write it
-		read = (short) (~read & 0xff);
-		nfcTag.writeByte(addr, read);
-		System.out.println("Wrote: " + read);
-
-		// Now read it back
-		read = nfcTag.readByte(addr);
-		System.out.println("Read: " + read);
-
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/MAX30100_Example.java b/examples/java/MAX30100_Example.java
deleted file mode 100644
index 5d5319e..0000000
--- a/examples/java/MAX30100_Example.java
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_max30100.*;
-
-public class MAX30100_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-        // ! [Interesting]
-
-        // Instantiate a MAX30100 instance using bus 0
-        MAX30100 sensor = new MAX30100((short)0);
-
-        System.out.println("Oximeter sensor example...");
-
-        // Read the temperature and version
-        System.out.format("Temperature: %f C\n", sensor.temperature());
-        System.out.format("Version: 0x%04x\n", sensor.version());
-
-        // Set high-res (50 Hz, 16-bit)
-        sensor.high_res_enable(true);
-
-        // Set to sample SpO2
-        sensor.mode(MAX30100_MODE.MAX30100_MODE_SPO2_EN);
-
-        Callback cb = new JavaCallback();
-
-        // Read continuously, stepping up the LED current every second,
-        // us GPIO 0 as the interrupt pin
-        sensor.sample_continuous(0, false, cb);
-        for (int i = 0; i <= 15; i++)
-        {
-            // Toggle the LED current
-            System.out.format("Setting LED current = %d\n", i);
-
-            sensor.current(MAX30100_LED_CURRENT.swigToEnum(i),
-                           MAX30100_LED_CURRENT.swigToEnum(i));
-
-            Thread.sleep(1000);
-        }
-
-        sensor.sample_stop();
-
-        // Read individual samples
-        for (int i = 0; i < 10; i++) {
-            max30100_value val = sensor.sample();
-            System.out.format("Single value IR: %d R: %d\n", val.getIR(), val.getR());
-        }
-
-        // ! [Interesting]
-    }
-}
-
-class JavaCallback extends Callback
-{
-    public JavaCallback()
-    {
-        super();
-    }
-
-    public void run(max30100_value val)
-    {
-        System.out.format("My callback sample IR: %d R: %d\n", val.getIR(), val.getR());
-    }
-}
-
diff --git a/examples/java/MAX31855_Example.java b/examples/java/MAX31855_Example.java
deleted file mode 100644
index 124e668..0000000
--- a/examples/java/MAX31855_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_max31855.MAX31855;
-
-public class MAX31855_Example {
-
-	static {
-		try {
-			System.loadLibrary("javaupm_max31855");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		MAX31855 sensor = new MAX31855(0, 8);
-		while(true){
-			System.out.println("Temperature: "+sensor.getTemp());
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/MAX44000_Example.java b/examples/java/MAX44000_Example.java
deleted file mode 100644
index 0824266..0000000
--- a/examples/java/MAX44000_Example.java
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class MAX44000_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_max44000.MAX44000 sensor = new upm_max44000.MAX44000(0);
-
-		while (true) {
-			System.out.println("proximity value = " + sensor.getAmbient());
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/MAX5487_Example.java b/examples/java/MAX5487_Example.java
deleted file mode 100644
index cf06aa0..0000000
--- a/examples/java/MAX5487_Example.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_max5487.MAX5487;
-
-public class MAX5487_Example {
-
-	static {
-		try {
-			System.loadLibrary("javaupm_max5487");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		MAX5487 sensor = new MAX5487(7);
-
-		// Power LED UP
-		for(int i=0; i<255; i++){
-			sensor.setWiperA((short)i);
-			try {
-				Thread.sleep(5);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following Exception occurred: "+e.getMessage());
-			}
-		}
-
-		// Power LED DOWN
-		for(int i=0; i<255; i++){
-			sensor.setWiperA((short)(255 - i));
-			try {
-				Thread.sleep(5);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-
-		System.out.println("Exiting...");
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/MAXds3231m_Example.java b/examples/java/MAXds3231m_Example.java
deleted file mode 100644
index 9be92a5..0000000
--- a/examples/java/MAXds3231m_Example.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_maxds3231m.MAXDS3231M;
-import upm_maxds3231m.Time3231;
-
-public class MAXds3231m_Example {
-
-	static {
-		try {
-			System.loadLibrary("javaupm_maxds3231m");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		MAXDS3231M sensor = new MAXDS3231M(upm_maxds3231m.javaupm_maxds3231mConstants.ADDR);
-		Time3231 t = new Time3231();
-
-		t.setSecond((short)1);
-		t.setMinute((short)3);
-		t.setHour((short)3);
-		t.setDay((short)3);
-		t.setMonth((short)3);
-		t.setYear((short)3);
-		t.setWeekDay((short)3);
-
-		sensor.setDate(t);
-
-		try {
-			Thread.sleep(500);
-		} catch (InterruptedException e) {
-			// TODO Auto-generated catch block
-			System.out.println("The following exception occurred: "+e.getMessage());
-		}
-
-		while(true){
-			if(sensor.getDate(t)){
-				System.out.println(t.getHour()+":"+t.getMinute()+":"+t.getSecond());
-			}
-			System.out.println("Temperature: "+sensor.getTemperature());
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occcured: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/MB704X_Example.java b/examples/java/MB704X_Example.java
deleted file mode 100644
index c3262d4..0000000
--- a/examples/java/MB704X_Example.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_mb704x.MB704X;
-
-public class MB704X_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a MB704X sensor using default parameters (bus 0,
-        // address 112)
-        MB704X sensor = new MB704X();
-
-        while (true)
-            {
-                System.out.println("Range: "
-                                   + sensor.getRange()
-                                   + " cm");
-
-                Thread.sleep(500);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/MCP2515_Example.java b/examples/java/MCP2515_Example.java
deleted file mode 100644
index 50062ec..0000000
--- a/examples/java/MCP2515_Example.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_mcp2515.MCP2515;
-
-public class MCP2515_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-        MCP2515 sensor = new MCP2515(0, -1);
-
-        // set the mode to loopback mode.  In loopback mode, transmitted
-        // packets are sent directly to an appropriate receive buffer
-        // without actually going out onto the CAN bus.
-        sensor.setOpmode(upm_mcp2515.MCP2515_OPMODE_T.MCP2515_OPMODE_LOOPBACK);
-
-        // lets build up a packet and try loading it (8 bytes max).
-        String myPayload = "01234567";
-        System.out.println("Loading a packet of 8 numbers (0-7) into a TX buffer...");
-        sensor.loadTXBuffer(upm_mcp2515.MCP2515_TX_BUFFER_T.MCP2515_TX_BUFFER0,
-                            0, false, false, myPayload);
-
-        // now lets try to transmit it
-        System.out.println("Transmitting packet...");
-        sensor.transmitBuffer(upm_mcp2515.MCP2515_TX_BUFFER_T.MCP2515_TX_BUFFER0,
-                              true);
-
-        System.out.println("Transmit successful");
-
-        // There should now be a packet waiting for us in RXB0
-        if (sensor.rxStatusMsgs() == upm_mcp2515.MCP2515_RXMSG_T.MCP2515_RXMSG_RXB0)
-        {
-            System.out.println("Packet received in RXB0, decoding...");
-
-            // now lets retrieve and print it
-            sensor.getRXMsg(upm_mcp2515.MCP2515_RX_BUFFER_T.MCP2515_RX_BUFFER0);
-
-            sensor.printMsg();
-        }
-        else
-        {
-            System.out.println("No packet found, how strange.");
-        }
-
-        System.out.println("Exiting...");
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/MCP2515_TXRX_Example.java b/examples/java/MCP2515_TXRX_Example.java
deleted file mode 100644
index 81e4e7a..0000000
--- a/examples/java/MCP2515_TXRX_Example.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_mcp2515.MCP2515;
-
-public class MCP2515_TXRX_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // by default we just receive packets
-        Boolean do_tx = false;
-        if (args.length > 0)
-            do_tx = true;
-
-        // Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-        MCP2515 sensor = new MCP2515(0, -1);
-
-        // NOTE: This example assumes that only two devices are connected
-        // to the CAN bus, and that both devices are running this example;
-        // one in TX (transmit) mode, and one in RX (receive) mode.
-
-        // If this is not the case, then in rx mode you may see other
-        // packets from other devices, or not, depending on whether the
-        // speed is correct for the network.  In tx mode, errors may be
-        // generated on the bus, especially if the CAN bus speed does not
-        // match the rest of the network.
-
-        // You should start the receiver example first.  The transmitter
-        // example will fail after about 5 seconds (timeout) of not being
-        // able to transmit a message.
-
-        while (true)
-        {
-            if (do_tx)
-            {
-                // lets build up a packet and try loading it (8 bytes max).
-                String myPayload = "01234567";
-                System.out.println("Loading a packet of 8 numbers (0-7) into a TX buffer...");
-                sensor.loadTXBuffer(upm_mcp2515.MCP2515_TX_BUFFER_T.MCP2515_TX_BUFFER0,
-                                    0, false, false, myPayload);
-
-                // now lets try to transmit it
-                System.out.println("Transmitting packet...");
-                sensor.transmitBuffer(upm_mcp2515.MCP2515_TX_BUFFER_T.MCP2515_TX_BUFFER0,
-                                      true);
-
-                System.out.println("Transmit successful");
-                System.out.println();
-                Thread.sleep(500);
-            }
-            else
-            {
-                // There should now be a packet waiting for us in RXB0
-                if (sensor.rxStatusMsgs() == upm_mcp2515.MCP2515_RXMSG_T.MCP2515_RXMSG_RXB0)
-                {
-                    System.out.println("Packet received in RXB0, decoding...");
-
-                    // now lets retrieve and print it
-                    sensor.getRXMsg(upm_mcp2515.MCP2515_RX_BUFFER_T.MCP2515_RX_BUFFER0);
-
-                    sensor.printMsg();
-                    System.out.println();
-                }
-
-                Thread.sleep(100);
-            }
-        }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/MCP9808_Example.java b/examples/java/MCP9808_Example.java
deleted file mode 100644
index 2d8b8c3..0000000
--- a/examples/java/MCP9808_Example.java
+++ /dev/null
@@ -1,216 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import java.io.*;
-import upm_mcp9808.MCP9808;
-
-public class MCP9808_Example {
-
-	public static void main(String[] args) throws InterruptedException, IOException {
-		// ! [Interesting]
-
-		int command;
-		upm_mcp9808.MCP9808 temp = new upm_mcp9808.MCP9808(6);
-		BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
-
-		do {
-			System.out.println("1 - read temp");
-			System.out.println("2 - sleep mode");
-			System.out.println("3 - wake up");
-			System.out.println("4 - set mode to " + (temp.isCelsius() == true ? "Fahrenheit" : "Celsius"));
-			System.out.println("5 - show status bits");
-			System.out.println("6 - Set Tcrit");
-			System.out.println("7 - Set Tupper");
-			System.out.println("8 - Set Tlower");
-			System.out.println("9 - Display monitor temps");
-			System.out.println("10 - Enable alert default");
-			System.out.println("11 - Enable alert interrupt");
-			System.out.println("12 - Clear interrupt");
-			System.out.println("13 - Clear alert mode");
-			System.out.println("14 - Get Hysteresis");
-			System.out.println("15 - Set Hysteresis");
-			System.out.println("16 - Get Resolution");
-			System.out.println("17 - Set Resolution");
-			System.out.println("18 - Get Manufacturer ID");
-			System.out.println("19 - Get Device ID");
-			System.out.println("-1 - exit");
-			System.out.print("Enter a command:");
-
-			try {
-				command = Integer.parseInt(read.readLine());
-			} catch (Exception e) {
-				System.err.println("Not valid command");
-				command = -1;
-			}
-
-			float t;
-			switch (command) {
-			case 1:
-				System.out.println("Temp: " + temp.getTemp() + " degrees " + (temp.isCelsius() ? "Celsius" : "Fahrenheit"));
-				break;
-			case 2:
-				System.out.println("shutdown sensor (sleep mode)");
-				temp.shutDown();
-				break;
-			case 3:
-				System.out.println("wake up sensor");
-				temp.shutDown(false);
-				break;
-			case 4:
-				System.out.println("set mode to " + (temp.isCelsius() ? "Fahrenheit" : "Celsius"));
-				temp.setMode(!temp.isCelsius());
-				break;
-			case 5:
-				System.out.println("Tcrit = " + temp.isTcrit());
-				System.out.println("Tupper = " + temp.isTupper());
-				System.out.println("Tlower = " + temp.isTlower());
-				break;
-			case 6:
-				System.out.print("Enter a value: ");
-				try {
-					t = Float.valueOf(read.readLine()).floatValue();
-				} catch (Exception e) {
-					System.err.println("\nNot a valid value\n");
-					break;
-				}
-				temp.setMonitorReg(MCP9808.MCP9808_REG.CRIT_TEMP, t);
-				break;
-			case 7:
-				System.out.print("Enter a value: ");
-				try {
-					t = Float.valueOf(read.readLine()).floatValue();
-				} catch (Exception e) {
-					System.err.println("\nNot a valid value\n");
-					break;
-				}
-				temp.setMonitorReg(MCP9808.MCP9808_REG.UPPER_TEMP, t);
-				break;
-			case 8:
-				System.out.print("Enter a value: ");
-				try {
-					t = Float.valueOf(read.readLine()).floatValue();
-				} catch (Exception e) {
-					System.err.println("\nNot a valid value\n");
-					break;
-				}
-				temp.setMonitorReg(MCP9808.MCP9808_REG.LOWER_TEMP, t);
-				break;
-			case 9:
-				System.out.println("Tcrit = " + temp.getMonitorReg(MCP9808.MCP9808_REG.CRIT_TEMP));
-				System.out.println("Tupper = " + temp.getMonitorReg(MCP9808.MCP9808_REG.UPPER_TEMP));
-				System.out.println("Tlower = " + temp.getMonitorReg(MCP9808.MCP9808_REG.LOWER_TEMP));
-				break;
-			case 10:
-				System.out.println("Set alert mode default");
-				temp.setAlertMode(MCP9808.MCP9808_CONFIG.ALERTCTRL.swigValue());
-				break;
-			case 11:
-				System.out.println("Set alert mode interrupt");
-				temp.setAlertMode(
-						MCP9808.MCP9808_CONFIG.ALERTMODE.swigValue() | MCP9808.MCP9808_CONFIG.ALERTCTRL.swigValue());
-				break;
-			case 12:
-				temp.clearInterrupt();
-				break;
-			case 13:
-				System.out.println("Clear alerts");
-				temp.clearAlertMode();
-				break;
-			case 14:
-				System.out.println("Hysteresis: " + temp.getHysteresis());
-				break;
-			case 15:
-				int u;
-				System.out.print("Enter 1 to 4: ");
-				try {
-					u = Integer.parseInt(read.readLine());
-				} catch (Exception e) {
-					System.err.println("\nNot a valid command\n");
-					break;
-				}
-				switch (u) {
-				case 1:
-					temp.setHysteresis(MCP9808.MCP9808_CONFIG.HYST_0);
-					break;
-				case 2:
-					temp.setHysteresis(MCP9808.MCP9808_CONFIG.HYST_1_5);
-					break;
-				case 3:
-					temp.setHysteresis(MCP9808.MCP9808_CONFIG.HYST_3_0);
-					break;
-				case 4:
-					temp.setHysteresis(MCP9808.MCP9808_CONFIG.HYST_6_0);
-					break;
-				default:
-					System.out.println("\nNot a valid option\n");
-					break;
-				}
-				break;
-			case 16:
-				System.out.println("Resolution: " + temp.getResolution());
-				break;
-			case 17:
-				int v;
-				System.out.print("Enter 1 to 4: ");
-				try {
-					v = Integer.parseInt(read.readLine());
-				} catch (Exception e) {
-					System.err.println("\nNot a valid command\n");
-					break;
-				}
-				switch (v) {
-				case 1:
-					temp.setResolution(MCP9808.MCP9808_RESOLUTION.RES_LOW);
-					break;
-				case 2:
-					temp.setResolution(MCP9808.MCP9808_RESOLUTION.RES_MEDIUM);
-					break;
-				case 3:
-					temp.setResolution(MCP9808.MCP9808_RESOLUTION.RES_HIGH);
-					break;
-				case 4:
-					temp.setResolution(MCP9808.MCP9808_RESOLUTION.RES_PRECISION);
-					break;
-				default:
-					System.out.println("\nNot a valid option\n");
-					break;
-				}
-				break;
-			case 18:
-				System.out.println("Manufacturer ID: " + temp.getManufacturer());
-				break;
-			case 19:
-				System.out.println("Get device ID: " + temp.getDevicedId());
-				break;
-			case -1:
-				break;
-			default:
-				System.out.println("That option is not available. Try again");
-				break;
-			}
-		} while (command != -1);
-
-		// ! [Interesting]
-	}
-}
-
diff --git a/examples/java/MD_Example.java b/examples/java/MD_Example.java
deleted file mode 100644
index d9e7d75..0000000
--- a/examples/java/MD_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MD_Example {
-	private static final short speed50 = 127;
-	private static final short speed0 = 0;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate an I2C Motor Driver on I2C bus 0
-		upm_md.MD motors = new upm_md.MD();
-
-		// set direction to clockwise (CW) and set speed to 50%
-		System.out.println("Spin M1 and M2 at half speed for 3 seconds");
-		motors.setMotorDirections(upm_md.MD_DC_DIRECTION_T.MD_DIR_CW,
-                                          upm_md.MD_DC_DIRECTION_T.MD_DIR_CW);
-		motors.setMotorSpeeds(speed50, speed50);
-		Thread.sleep(3000);
-
-		// counter clockwise (CCW)
-		System.out.println("Reversing M1 and M2 for 3 seconds");
-		motors.setMotorDirections(upm_md.MD_DC_DIRECTION_T.MD_DIR_CCW,
-                                          upm_md.MD_DC_DIRECTION_T.MD_DIR_CCW);
-		Thread.sleep(3000);
-
-		// stop motors
-		System.out.println("Stopping motors");
-		motors.setMotorSpeeds(speed0, speed0);
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/MG811_Example.java b/examples/java/MG811_Example.java
deleted file mode 100644
index 97cdec4..0000000
--- a/examples/java/MG811_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MG811_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Instantiate an MG811 on analog pin A0, and digital pin D2 with an
-		// analog reference voltage of 5.0V
-		upm_mg811.MG811 sensor = new upm_mg811.MG811(0, 2, (float) 5.0);
-
-		// Every tenth of a second, sample the sensor and output it's
-		// detected CO2 concentration in parts per million (ppm)
-
-		while (true) {
-			System.out.println("CO2 concentration in PPM: " + sensor.ppm());
-			Thread.sleep(100);
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/MHZ16_Example.java b/examples/java/MHZ16_Example.java
deleted file mode 100644
index 48da542..0000000
--- a/examples/java/MHZ16_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class MHZ16_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a MHZ16 serial CO2 sensor on uart 0.
-		upm_mhz16.MHZ16 co2 = new upm_mhz16.MHZ16(0);
-
-		System.out.println("Make sure that the sensor has had at least 3 minutes to warm up");
-		System.out.println("or you will not get valid results.");
-		System.out.println("The temperature reported is not the ambient temperature,");
-		System.out.println("but rather the temperature of the sensor elements.");
-
-		while (true) {
-			if (!co2.getData()) {
-				System.out.println("Failed to retrieve data");
-				continue;
-			}
-			System.out.println("CO2 concentration: " + co2.getGas() + "PPM, Temperature (in C): "
-					+ co2.getTemperature());
-
-			Thread.sleep(2000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/MMA7361_Example.java b/examples/java/MMA7361_Example.java
deleted file mode 100644
index 0293895..0000000
--- a/examples/java/MMA7361_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_mma7361.MMA7361;
-
-public class MMA7361_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a MMA7361 sensor on analog pins A0 (X), A1 (Y)
-        // A2 (Z), selftest pin on D2, sleep pin on D3 nd an analog
-        // reference value of 5.0.  The freefall pin and the range pin
-        // are unused (-1).
-        MMA7361 sensor = new MMA7361(0, 1, 2, 2, 3, -1, -1, 5.0f);
-
-        // 1.5g (true = 6g)
-        sensor.setRange(false);
-
-        // Every 10th of a second, update and print values
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                float dataA[] = sensor.getAcceleration();
-
-                System.out.println("Accelerometer x: " + dataA[0]
-                                   + " y: " + dataA[1]
-                                   + " z: " + dataA[2]);
-
-                float dataV[] = sensor.getVolts();
-
-                System.out.println("Volts x: " + dataV[0]
-                                   + " y: " + dataV[1]
-                                   + " z: " + dataV[2]);
-
-                System.out.println();
-                Thread.sleep(100);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/MMA7455_Example.java b/examples/java/MMA7455_Example.java
deleted file mode 100644
index b2e9234..0000000
--- a/examples/java/MMA7455_Example.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class MMA7455_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_mma7455.MMA7455 sensor = new upm_mma7455.MMA7455(0);
-
-		while (true) {
-			upm_mma7455.ShortVector val = sensor.readData();
-			System.out.println("Accelerometer X: " + val.get(0) + ", Y: " + val.get(1) + ", Z: " + val.get(2));
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/MMA7660_Example.java b/examples/java/MMA7660_Example.java
deleted file mode 100644
index 5484412..0000000
--- a/examples/java/MMA7660_Example.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- *         Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_mma7660.MMA7660;
-
-public class MMA7660_Example
-{
-    public static void main(String[] args) throws InterruptedException
-        {
-            // ! [Interesting]
-            // Instantiate an MMA7660 on I2C bus 0
-            MMA7660 accel = new MMA7660(0);
-
-            // place device in standby mode so we can write registers
-            accel.setModeStandby();
-
-            // enable 64 samples per second
-            accel.setSampleRate(upm_mma7660.MMA7660_AUTOSLEEP_T.MMA7660_AUTOSLEEP_64);
-
-            // place device into active mode
-            accel.setModeActive();
-
-            while (true)
-            {
-                upm_mma7660.FloatVector acceleration = accel.getAcceleration();
-                System.out.println("Acceleration: x = "
-                                   + acceleration.get(0)
-                                   + " y = "
-                                   + acceleration.get(1)
-                                   + " x = "
-                                   + acceleration.get(2));
-
-                System.out.println();
-
-                Thread.sleep(500);
-            }
-            // ! [Interesting]
-	}
-}
diff --git a/examples/java/MPL3115A2_Example.java b/examples/java/MPL3115A2_Example.java
deleted file mode 100644
index f64298a..0000000
--- a/examples/java/MPL3115A2_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class MPL3115A2_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a MPL3115A2 sensor on I2C
-		upm_mpl3115a2.MPL3115A2 sensor = new upm_mpl3115a2.MPL3115A2(0);
-
-		while (true) {
-			System.out.println("Pressure: " + sensor.getPressure());
-			System.out.println("Altitude: " + sensor.getAltitude());
-			System.out.println("Sealevel pressure: " + sensor.getSealevelPressure());
-			System.out.println("Temperature: " + sensor.getTemperature());
-			System.out.println();
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/MPR121_Example.java b/examples/java/MPR121_Example.java
deleted file mode 100644
index d332970..0000000
--- a/examples/java/MPR121_Example.java
+++ /dev/null
@@ -1,34 +0,0 @@
-public class MPR121_Example {
-
-	private static void printButtons(upm_mpr121.MPR121 touch) {
-		boolean buttonPresed = false;
-
-		System.out.print("Buttons pressed: ");
-		for (int i = 0; i < 12; i++) {
-			if ((touch.getM_buttonStates() & (1 << i)) != 0) {
-				System.out.print(i + " ");
-				buttonPresed = true;
-			}
-		}
-
-		if (!buttonPresed)
-			System.out.print("None ");
-
-		System.out.println();
-	}
-
-	public static void main(String[] args) throws InterruptedException {
-		// Instantiate an MPR121 on I2C bus 0
-		upm_mpr121.MPR121 touch = new upm_mpr121.MPR121(0);
-
-		// init according to AN3944 defaults
-		touch.configAN3944();
-
-		while (true) {
-			touch.readButtons();
-			printButtons(touch);
-			Thread.sleep(1000);
-		}
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/MPU9150_Example.java b/examples/java/MPU9150_Example.java
deleted file mode 100644
index 4e5aa7c..0000000
--- a/examples/java/MPU9150_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class MPU9150_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_mpu9150.MPU9150 sensor = new upm_mpu9150.MPU9150();
-
-		sensor.init();
-
-		while (true) {
-			sensor.update();
-
-// These don't exist
-//			float[] accel = sensor.getAccelerometer();
-//			System.out.println("Accelerometer: " + "AX: " + accel[0] + " AY: " + accel[1] + " AZ: "
-//					+ accel[2]);
-//
-//			float[] gyro = sensor.getGyroscope();
-//			System.out.println("Gryoscope: " + "GX: " + gyro[0] + " GY: " + gyro[1] + " GZ: "
-//					+ gyro[2]);
-
-			upm_mpu9150.FloatVector magn = sensor.getMagnetometer();
-			System.out.println("Magnetometer: " + "MX: " + magn.get(0) + " MY: " + magn.get(1) + " MZ: " + magn.get(2));
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/MQ2_Example.java b/examples/java/MQ2_Example.java
deleted file mode 100644
index d84c689..0000000
--- a/examples/java/MQ2_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class MQ2_Example {
-	private static final short resolution = 5;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] buffer = new short[128];
-
-		// Attach gas sensor to A0
-		upm_gas.MQ2 sensor = new upm_gas.MQ2(0);
-
-		upm_gas.thresholdContext ctx = new upm_gas.thresholdContext();
-		ctx.setAverageReading(0);
-		ctx.setRunningAverage(0);
-		ctx.setAveragedOver(2);
-
-		while (true) {
-			int len = sensor.getSampledWindow(2, buffer);
-
-			if (len != 0) {
-				int thresh = sensor.findThreshold(ctx, 30, buffer);
-				sensor.printGraph(ctx, resolution);
-				if (thresh != 0) {
-					System.out.println("---Threshold reached---");
-				}
-			}
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/MQ303A_Example.java b/examples/java/MQ303A_Example.java
deleted file mode 100644
index 9801e20..0000000
--- a/examples/java/MQ303A_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MQ303A_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// Instantiate an mq303a sensor on analog pin A0
-
-		// This device uses a heater powered from an analog I/O pin.
-		// If using A0 as the data pin, then you need to use A1, as the heater
-		// pin (if using a grove mq303a). For A1, we can use the D15 gpio,
-		// setup as an output, and drive it low to power the heater.
-		upm_mq303a.MQ303A mq303a = new upm_mq303a.MQ303A(1, 15);
-
-		System.out.println("Enabling heater and waiting 2 minutes for warmup.");
-		mq303a.heaterEnable(true);
-		Thread.sleep(120000);
-
-		System.out.println("This sensor may need to warm until the value drops below about 450.");
-
-		for (int i = 1; i < 10; i++) {
-			int val = mq303a.value();
-			System.out.println("Alcohol detected (higher means stronger alcohol): " + val);
-
-			Thread.sleep(1000);
-		}
-
-		mq303a.heaterEnable(false);
-		System.out.println("Exiting");
-	}
-
-}
diff --git a/examples/java/MQ4_Example.java b/examples/java/MQ4_Example.java
deleted file mode 100644
index 8d3c39d..0000000
--- a/examples/java/MQ4_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MQ4_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] buffer = new short[128];
-
-		// Attach gas sensor to A0
-		upm_gas.MQ4 sensor = new upm_gas.MQ4(0);
-
-		upm_gas.thresholdContext ctx = new upm_gas.thresholdContext();
-		ctx.setAverageReading(0);
-		ctx.setRunningAverage(0);
-		ctx.setAveragedOver(2);
-
-		// Infinite loop, ends when script is cancelled
-		// Repeatedly, take a sample every 2 microseconds;
-		// find the average of 128 samples; and
-		// print a running graph of asterisks as averages
-		while (true) {
-			int len = sensor.getSampledWindow(2, buffer);
-
-			if (len != 0) {
-				int thresh = sensor.findThreshold(ctx, 30, buffer);
-				sensor.printGraph(ctx, (short) 5);
-				if (thresh != 0) {
-					// do something...
-				}
-			}
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/MQ5_Example.java b/examples/java/MQ5_Example.java
deleted file mode 100644
index d7669e3..0000000
--- a/examples/java/MQ5_Example.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MQ5_Example {
-	private static final short resolution = 7;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] buffer = new short[128];
-
-		// Attach gas sensor to A0
-		upm_gas.MQ5 sensor = new upm_gas.MQ5(0);
-
-		upm_gas.thresholdContext ctx = new upm_gas.thresholdContext();
-		ctx.setAverageReading(0);
-		ctx.setRunningAverage(0);
-		ctx.setAveragedOver(2);
-
-		while (true) {
-			int len = sensor.getSampledWindow(2, buffer);
-
-			if (len != 0) {
-				int thresh = sensor.findThreshold(ctx, 30, buffer);
-				sensor.printGraph(ctx, resolution);
-				if (thresh != 0) {
-					System.out.println("---Threshold reached---");
-				}
-			}
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/MQ6_Example.java b/examples/java/MQ6_Example.java
deleted file mode 100644
index 9c99fa2..0000000
--- a/examples/java/MQ6_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MQ6_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] buffer = new short[128];
-
-		// Attach gas sensor to A0
-		upm_gas.MQ6 sensor = new upm_gas.MQ6(0);
-
-		upm_gas.thresholdContext ctx = new upm_gas.thresholdContext();
-		ctx.setAverageReading(0);
-		ctx.setRunningAverage(0);
-		ctx.setAveragedOver(2);
-
-		// Infinite loop, ends when script is cancelled
-		// Repeatedly, take a sample every 2 microseconds;
-		// find the average of 128 samples; and
-		// print a running graph of asterisks as averages
-		while (true) {
-			int len = sensor.getSampledWindow(2, buffer);
-
-			if (len != 0) {
-				int thresh = sensor.findThreshold(ctx, 30, buffer);
-				sensor.printGraph(ctx, (short) 5);
-				if (thresh != 0) {
-					// do something ....
-				}
-			}
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/MQ7_Example.java b/examples/java/MQ7_Example.java
deleted file mode 100644
index 30bdd32..0000000
--- a/examples/java/MQ7_Example.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MQ7_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] buffer = new short[128];
-
-		// Attach gas sensor to A0
-		upm_gas.MQ7 sensor = new upm_gas.MQ7(0);
-
-		upm_gas.thresholdContext ctx = new upm_gas.thresholdContext();
-		ctx.setAverageReading(0);
-		ctx.setRunningAverage(0);
-		ctx.setAveragedOver(2);
-
-		// Infinite loop, ends when script is cancelled
-		// Repeatedly, take a sample every 2 microseconds;
-		// find the average of 128 samples; and
-		// print a running graph of asterisks as averages
-
-		while (true) {
-			int len = sensor.getSampledWindow(2, buffer);
-
-			if (len != 0) {
-				int thresh = sensor.findThreshold(ctx, 30, buffer);
-				sensor.printGraph(ctx, (short) 5);
-				if (thresh != 0) {
-					// do something...
-				}
-			}
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/MQ8_Example.java b/examples/java/MQ8_Example.java
deleted file mode 100644
index b24d533..0000000
--- a/examples/java/MQ8_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class MQ8_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] buffer = new short[128];
-
-		// Attach gas sensor to A0
-		upm_gas.MQ8 sensor = new upm_gas.MQ8(0);
-
-		upm_gas.thresholdContext ctx = new upm_gas.thresholdContext();
-		ctx.setAverageReading(0);
-		ctx.setRunningAverage(0);
-		ctx.setAveragedOver(2);
-
-		// Infinite loop, ends when script is cancelled
-		// Repeatedly, take a sample every 2 microseconds;
-		// find the average of 128 samples; and
-		// print a running graph of asterisks as averages
-		while (true) {
-			int len = sensor.getSampledWindow(2, buffer);
-
-			if (len != 0) {
-				int thresh = sensor.findThreshold(ctx, 30, buffer);
-				sensor.printGraph(ctx, (short) 5);
-				if (thresh != 0) {
-					// do something...
-				}
-			}
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/MS5803_Example.java b/examples/java/MS5803_Example.java
deleted file mode 100644
index ef0afca..0000000
--- a/examples/java/MS5803_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ms5803.MS5803;
-
-public class MS5803_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a MS5803 instance using bus 0 and default i2c address
-        MS5803 sensor = new MS5803(0);
-
-        // For SPI, bus 0, you would pass -1 as the address, and a
-        // valid pin for CS:
-        // MS5803(0, -1, 10);
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                System.out.println("Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C, Pressure: "
-                                   + sensor.getPressure()
-                                   + " mbar");
-
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/Microphone_Example.java b/examples/java/Microphone_Example.java
deleted file mode 100644
index 47a1c0f..0000000
--- a/examples/java/Microphone_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Microphone_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		short[] buffer = new short[128];
-
-		// Attach microphone to analog port A0
-		upm_mic.Microphone sensor = new upm_mic.Microphone(0);
-
-		upm_mic.thresholdContext ctx = new upm_mic.thresholdContext();
-		ctx.setAverageReading(0);
-		ctx.setRunningAverage(0);
-		ctx.setAveragedOver(2);
-
-		// Repeatedly, take a sample every 2 microseconds;
-		// find the average of 128 samples; and
-		// print a running graph of the averages
-		while (true) {
-			int len = sensor.getSampledWindow(2, buffer);
-
-			if (len != 0) {
-				int thresh = sensor.findThreshold(ctx, 30, buffer);
-				sensor.printGraph(ctx);
-				if (thresh != 0) {
-					System.out.println("---Threshold reached---  " + ctx.getRunningAverage() + "  "
-							+ ctx.getAverageReading());
-				}
-			}
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/Moisture_Example.java b/examples/java/Moisture_Example.java
deleted file mode 100644
index 0437ab3..0000000
--- a/examples/java/Moisture_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Moisture_Example {
-	public static void main(String args[]) throws InterruptedException {
-		// ! [Interesting]
-		upm_moisture.Moisture gm = new upm_moisture.Moisture(1);
-
-		while (true) {
-			int moisture_val = gm.value();
-			String result;
-
-			if (moisture_val >= 0 && moisture_val < 300)
-				result = "Dry";
-			else if ((moisture_val >= 0 && moisture_val < 300))
-				result = "Moist";
-			else
-				result = "Wet";
-
-			System.out.println("Moisture Value: " + moisture_val + ", " + result);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/NLGPIO16_Example.java b/examples/java/NLGPIO16_Example.java
deleted file mode 100644
index 83b2fde..0000000
--- a/examples/java/NLGPIO16_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class NLGPIO16_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		// Instantiate a NLGPIO16 Module on the default UART (/dev/ttyACM0)
-		upm_nlgpio16.NLGPIO16 sensor = new upm_nlgpio16.NLGPIO16();
-
-		// get the Version
-		System.out.println("Device Version: " + sensor.getVersion());
-		// read the gpio at pin 3
-		System.out.println("GPIO 3 Value: " + sensor.gpioRead(3));
-		// read the analog voltage at pin 5
-		System.out.println("Analog 5 Voltage: " + sensor.analogReadVolts(5));
-		// set the gpio at pin 14 to HIGH
-		sensor.gpioSet(14);
-
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/NMEAGPS_Example.java b/examples/java/NMEAGPS_Example.java
deleted file mode 100644
index 78247cb..0000000
--- a/examples/java/NMEAGPS_Example.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_nmea_gps.NMEAGPS;
-
-public class NMEAGPS_Example 
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate a NMEAGPS sensor on uart 0 at 9600 baud with
-        // enable pin on D3
-        NMEAGPS sensor = new NMEAGPS(0, 9600, 3);
-
-        // loop, dumping NMEA data out as fast as it comes in
-        while (sensor.dataAvailable(5000))
-            {
-                System.out.print(sensor.readStr(256));
-            }
-        System.out.println("Timed out");
-
-        
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/NMEAGPS_I2C_Example.java b/examples/java/NMEAGPS_I2C_Example.java
deleted file mode 100644
index 7ceb8e3..0000000
--- a/examples/java/NMEAGPS_I2C_Example.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_nmea_gps.NMEAGPS;
-
-public class NMEAGPS_I2C_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate a NMEA_GPS UBLOX based i2c sensor on i2c bus 0 at
-        // address 0x42
-        NMEAGPS sensor = new NMEAGPS(0, (byte)0x42);
-
-        // loop, dumping NMEA data out as fast as it comes in
-        while (true)
-            {
-                if (sensor.dataAvailable(0))
-                    System.out.print(sensor.readStr(256));
-                else
-                    Thread.sleep(100);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/NRF24L01_receiver_Example.java b/examples/java/NRF24L01_receiver_Example.java
deleted file mode 100644
index 9882d96..0000000
--- a/examples/java/NRF24L01_receiver_Example.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_nrf24l01.Callback;
-
-//NOT TESTED!!!
-public class NRF24L01_receiver_Example {
-
-	static private final byte[] local_address = {0x01, 0x01, 0x01, 0x01, 0x01};
-	static private final byte[] broadcast_address = {(byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
-			(byte) 0xFF, (byte) 0xFF};
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_nrf24l01.NRF24L01 comm = new upm_nrf24l01.NRF24L01((short) 7, (short) 8);
-
-		Callback callback = new ReceiverCallback(comm);
-
-		comm.setSourceAddress(local_address);
-		comm.setDestinationAddress(broadcast_address);
-		comm.setPayload((short) upm_nrf24l01.javaupm_nrf24l01Constants.MAX_BUFFER);
-		comm.configure();
-		comm.setSpeedRate(upm_nrf24l01.speed_rate_t.NRF_250KBPS);
-		comm.setChannel((short) 99);
-		comm.setDataReceivedHandler(callback);
-
-		while (true) {
-			comm.pollListener();
-		}
-
-		// ! [Interesting]
-	}
-}
-
-class ReceiverCallback extends Callback {
-
-	private upm_nrf24l01.NRF24L01 comm = null;
-
-	public ReceiverCallback(upm_nrf24l01.NRF24L01 comm) {
-		super();
-		this.comm = comm;
-	}
-	public void run() {
-		if (comm != null) {
-			short[] rx_buffer = comm.getM_rxBuffer();
-			System.out.print("Received: ");
-			for (int i = 0; i < rx_buffer.length; i++)
-				System.out.print(rx_buffer[i]);
-			System.out.println();
-		} else {
-			System.out.println("No NRF24L01 instance given to callback");
-		}
-	}
-}
\ No newline at end of file
diff --git a/examples/java/NRF24L01_transmitter_Example.java b/examples/java/NRF24L01_transmitter_Example.java
deleted file mode 100644
index ecd4c11..0000000
--- a/examples/java/NRF24L01_transmitter_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_nrf24l01.Callback;
-
-//NOT TESTED!!!
-public class NRF24L01_transmitter_Example {
-
-	static private final byte[] destAddress = {0x01, 0x01, 0x01, 0x01, 0x01};
-	static private final byte[] srcAddress = {0x01, 0x01, 0x01, 0x01, 0x01};
-	static private byte[] tx_buffer = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A,
-			0x00};
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_nrf24l01.NRF24L01 comm = new upm_nrf24l01.NRF24L01((short) 7, (short) 8);
-
-		Callback callback = new TransmitterCallback();
-
-		comm.setSourceAddress(srcAddress);
-		comm.setDestinationAddress(destAddress);
-		comm.setPayload((short) upm_nrf24l01.javaupm_nrf24l01Constants.MAX_BUFFER);
-		comm.setChannel((short) 99);
-		comm.configure();
-		comm.setDataReceivedHandler(callback);
-
-		while (true) {
-			comm.send(tx_buffer);
-			System.out.println("devi2 :: sending data ....");
-			for (int i = 0; i < tx_buffer.length; i++)
-				System.out.print(tx_buffer[i]);
-			System.out.println();
-			Thread.sleep(3000);
-		}
-		// ! [Interesting]
-	}
-}
-
-class TransmitterCallback extends Callback {
-	public TransmitterCallback() {
-		super();
-	}
-	public void run() {
-	}
-}
\ No newline at end of file
diff --git a/examples/java/NUNCHUCK_Example.java b/examples/java/NUNCHUCK_Example.java
deleted file mode 100644
index b65fc3b..0000000
--- a/examples/java/NUNCHUCK_Example.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class NUNCHUCK_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        // ! [Interesting]
-        // Instantiate a nunchuck controller bus 0
-        upm_nunchuck.NUNCHUCK nunchuck = new upm_nunchuck.NUNCHUCK(3);
-
-        while (true)
-        {
-            nunchuck.update();
-            System.out.println("stickX: "
-                               + nunchuck.getStickX()
-                               + ", stickY: "
-                               + nunchuck.getStickY());
-            System.out.println("accelX: "
-                               + nunchuck.getAccelX()
-                               + ", accelY: "
-                               + nunchuck.getAccelY()
-                               + ", accelZ: "
-                               + nunchuck.getAccelZ());
-
-            if (nunchuck.getButtonC())
-                System.out.println("Button C pressed");
-            else
-                System.out.println("Button C not pressed");
-
-            if (nunchuck.getButtonZ())
-                System.out.println("Button Z pressed");
-            else
-                System.out.println("Button Z not pressed");
-
-            Thread.sleep(100);
-        }
-        // ! [Interesting]
-    }
-
-}
diff --git a/examples/java/O2_Example.java b/examples/java/O2_Example.java
deleted file mode 100644
index 6572b68..0000000
--- a/examples/java/O2_Example.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_o2.O2;
-
-public class O2_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Initializing the Grove O2 sensor on the A) analog pin
-		O2 o2 = new O2(0);
-
-		while(true){
-			System.out.println("The output voltage is: "+o2.voltageValue());
-			try {
-				Thread.sleep(100);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception has occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-}
diff --git a/examples/java/OTP538U_Example.java b/examples/java/OTP538U_Example.java
deleted file mode 100644
index bd06bc8..0000000
--- a/examples/java/OTP538U_Example.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class OTP538U_Example {
-	private static final float OTP538U_AREF = 5;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a OTP538U on analog pins A0 and A1
-		// A0 is used for the Ambient Temperature and A1 is used for the Object
-		// temperature.
-		upm_otp538u.OTP538U temps = new upm_otp538u.OTP538U(0, 1, OTP538U_AREF);
-
-		while (true) {
-			System.out.println("Ambient temp: " + temps.ambientTemperature() + " C");
-			System.out.println("Object temp: " + temps.objectTemperature() + " C");
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/P9813_Example.java b/examples/java/P9813_Example.java
deleted file mode 100644
index e958960..0000000
--- a/examples/java/P9813_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Sergey Kiselev <sergey.kiselev@intel.com>
- * Copyright (c) 2017 Sergey Kiselev
- * Based on the apa102 driver writen by Yannick Adam <yannick.adam@gmail.com>
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class P9813_Example {
-
-  public static void main(String[] args) throws InterruptedException {
-    // ! [Interesting]
-    // Instantiate a chain of 2 LEDs using pin 2 for clock and pin 3 for data
-    upm_p9813.P9813 ledChain =
-        new upm_p9813.P9813(2, (short)2, (short)3, false);
-
-    System.out.println("Set all LEDs to blue");
-    ledChain.setAllLeds((short)0, (short)0, (short)255);
-
-    System.out.println("Set a single LED to red at index 1");
-    ledChain.setLed(1, (short)255, (short)0, (short)0);
-
-    // ! [Interesting]
-  }
-}
diff --git a/examples/java/PN532_Example.java b/examples/java/PN532_Example.java
deleted file mode 100644
index 6d4dd4f..0000000
--- a/examples/java/PN532_Example.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class PN532_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate an PN532 on I2C bus 0 (default) using gpio 3 for the
-		// IRQ, and gpio 2 for the reset pin.
-
-		upm_pn532.PN532 nfc = new upm_pn532.PN532(3, 2);
-
-		if (!nfc.init())
-			System.out.println("init() failed");
-
-		long vers = nfc.getFirmwareVersion();
-
-		if (vers != 0)
-			System.out.println("Got firmware version: " + String.format("0x%08x", vers));
-		else {
-			System.out.println("Could not identify PN532\n");
-			return;
-		}
-
-		// Now scan and identify any cards that come in range (1 for now)
-
-		// Retry forever
-		nfc.setPassiveActivationRetries((short) 0xff);
-
-		nfc.SAMConfig();
-
-		short[] uidSize = new short[1];
-		byte[] uid = new byte[7];
-
-		while (true) {
-			if (nfc.readPassiveTargetID(PN532.BAUD_T.BAUD_MIFARE_ISO14443A, uid, uidSize, 2000)) {
-				// found a card
-				System.out.println("Found a card: UID len " + uidSize[0]);
-				System.out.print("UID: ");
-
-				for (int i = 0; i < uidSize[0]; i++)
-					System.out.print(String.format("%02x", uid[i]) + " ");
-
-				System.out.println("\nSAK: " + String.format("0x%02x", nfc.getSAK()));
-				System.out.println("ATQA: " + String.format("0x%04x\n\n", nfc.getATQA()));
-
-				Thread.sleep(1000);
-			} else {
-				System.out.println("Waiting for a card...");
-			}
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/PN532_writeurl_Example.java b/examples/java/PN532_writeurl_Example.java
deleted file mode 100644
index a63f16b..0000000
--- a/examples/java/PN532_writeurl_Example.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// NOT TESTED!!!
-public class PN532_writeurl_Example {
-
-	static private final String url = "iotdk.intel.com";
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate an PN532 on I2C bus 0 (default) using gpio 3 for the
-		// IRQ, and gpio 2 for the reset pin.
-
-		upm_pn532.PN532 nfc = new upm_pn532.PN532(3, 2);
-
-		if (!nfc.init())
-			System.out.println("init() failed");
-
-		long vers = nfc.getFirmwareVersion();
-
-		if (vers != 0)
-			System.out.println("Got firmware version: " + String.format("0x%08x", vers));
-		else {
-			System.out.println("Could not identify PN532\n");
-			return;
-		}
-
-		// Now scan and identify any cards that come in range (1 for now)
-
-		// Retry forever
-		nfc.setPassiveActivationRetries((short) 0xff);
-
-		nfc.SAMConfig();
-
-		short[] uidSize = new short[1];
-		byte[] uid = new byte[7];
-
-		boolean foundCard = false;
-		while (!foundCard) {
-			if (nfc.readPassiveTargetID(PN532.BAUD_T.BAUD_MIFARE_ISO14443A, uid, uidSize, 2000)) {
-				// found a card
-				System.out.println("Found a card: UID len " + uidSize[0]);
-				System.out.print("UID: ");
-
-				for (int i = 0; i < uidSize[0]; i++)
-					System.out.print(String.format("%02x", uid[i]) + " ");
-
-				System.out.println("\nSAK: " + String.format("0x%02x", nfc.getSAK()));
-				System.out.println("ATQA: " + String.format("0x%04x\n\n", nfc.getATQA()));
-
-				foundCard = true;
-			} else {
-				System.out.println("Waiting for a card...");
-			}
-		}
-
-		if (uidSize[0] != 7) {
-			System.out.println("This example will only write an NDEF URI to preformatted");
-			System.out.println("Mifare Ultralight or NTAG2XX tags\n");
-			return;
-		}
-
-		// 48 bytes is maximum data area on ultralight cards, so we use that
-		// as the maximum datasize here. Obviously if you have a bigger
-		// card, you can write more data.
-		if (!nfc.ntag2xx_WriteNDEFURI(PN532.NDEF_URI_T.NDEF_URIPREFIX_HTTP, url, (short) 48)) {
-			// failure
-			System.out.println("Failed to write NDEF record tag.\n");
-			return;
-		}
-
-		System.out.println("Success, URL record written to tag.\n");
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/PPD42NS_Example.java b/examples/java/PPD42NS_Example.java
deleted file mode 100644
index 39dde8a..0000000
--- a/examples/java/PPD42NS_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class PPD42NS_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        // ! [Interesting]
-        // Instantiate a dust sensor on GPIO pin D8
-        upm_ppd42ns.PPD42NS dust = new upm_ppd42ns.PPD42NS(8);
-        upm_ppd42ns.ppd42ns_dust_data data;
-
-        System.out.println("This program will give readings every 30 seconds until you stop it");
-
-        while (true) {
-            data = dust.getData();
-
-            System.out.println("Low pulse occupancy: " + data.getLowPulseOccupancy());
-            System.out.println("Ratio: " + data.getRatio());
-            System.out.println("Concentration: " + data.getConcentration());
-        }
-        // ! [Interesting]
-    }
-
-}
diff --git a/examples/java/Pulsensor_Example.java b/examples/java/Pulsensor_Example.java
deleted file mode 100644
index dce1ba3..0000000
--- a/examples/java/Pulsensor_Example.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_pulsensor.*;
-
-public class Pulsensor_Example {
-	static class PulsensorCallback extends Callback {
-		public PulsensorCallback() {
-			super();
-		}
-		public void run (clbk_data arg) {
-			System.out.println();
-		}
-	}
-
-	public static void main (String[] args) throws InterruptedException {
-		// ! [Interesting]
-		Callback obj_call = new PulsensorCallback();
-		Pulsensor p = new Pulsensor(obj_call);
-		p.start_sampler();
-		Thread.sleep(1000);
-		p.stop_sampler();
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/RFR359F_Example.java b/examples/java/RFR359F_Example.java
deleted file mode 100644
index ecc3984..0000000
--- a/examples/java/RFR359F_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class RFR359F_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate an RFR359F digital pin D2
-		upm_rfr359f.RFR359F dInterruptor = new upm_rfr359f.RFR359F(2);
-
-		while (true) {
-			if (dInterruptor.objectDetected()) {
-				System.out.println("Object detected");
-			} else {
-				System.out.println("Area is clear!");
-			}
-
-			Thread.sleep(100);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/RHUSB_Example.java b/examples/java/RHUSB_Example.java
deleted file mode 100644
index 2d7add0..0000000
--- a/examples/java/RHUSB_Example.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class RHUSB_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-
-		String defaultDev = "/dev/ttyUSB0";
-
-		// if an argument was specified, use it as the device instead
-		if (args.length > 0)
-			defaultDev = args[0];
-
-		System.out.println("Using device " + defaultDev);
-		System.out.println("Initializing...");
-
-		// Instantiate an RHUSB instance on defaultDev
-		upm_rhusb.RHUSB sensor = new upm_rhusb.RHUSB(defaultDev);
-
-		// output the firmware ID
-		System.out.println("Firmware ID: " + sensor.getFirmwareID());
-
-		// update and print available values every second
-		while (true) {
-			// update our values from the sensor
-			sensor.update();
-
-			// we show both C and F for temperature
-			System.out.println("Temperature: " + sensor.getTemperature() + " C / " + sensor.getTemperature(true) + " F");
-
-			System.out.println("Humidity: " + sensor.getHumidity() + " %");
-
-			Thread.sleep(1000);
-		}
-
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/RN2903_Example.java b/examples/java/RN2903_Example.java
deleted file mode 100644
index 2d3cb7a..0000000
--- a/examples/java/RN2903_Example.java
+++ /dev/null
@@ -1,138 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_rn2903.*;
-
-public class RN2903_Example
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-        RN2903 sensor = new RN2903(defaultDev,
-                                   javaupm_rn2903.RN2903_DEFAULT_BAUDRATE);
-
-        // To use an internal UART understood by MRAA, use the following
-        // to inititialize rather than the above, which by default uses a
-        // tty path.
-        //
-        // RN2903 sensor = new RN2903(defaultDev,
-        //     upm_rn2903.javaupm_rn2903.RN2903_DEFAULT_BAUDRATE);
-
-        // enable debugging
-        // sensor.setDebug(true);
-
-        // get version
-        if (sensor.command("sys get ver")
-            != RN2903_RESPONSE_T.RN2903_RESPONSE_OK)
-        {
-            System.out.println("Failed to retrieve device version string");
-            System.exit(1);
-        }
-        System.out.println("Firmware version: " + sensor.getResponse());
-
-        System.out.println("Hardware EUI: " + sensor.getHardwareEUI());
-
-        // we can support two types of join, OTAA and ABP. Each requires
-        // that certain parameters be set first.  We will only attempt ABP
-        // joining with this example since it's the only one that can
-        // succeed without actual configuration.  In both cases, if you
-        // are actually attempting to join a real LoRaWAN network, you
-        // must change the parameters below to match the network you are
-        // attempting to join.
-
-        // For OTAA, you need to supply valid Device EUI, Application EUI,
-        // and Application key:
-        //
-        // sensor.setDeviceEUI("0011223344556677");
-        // sensor.setApplicationEUI("0011223344556677");
-        // sensor.setApplicationKey("01234567012345670123456701234567");
-        //
-        // RN2903_JOIN_STATUS_T rv = sensor.join(RN2903_JOIN_TYPE_OTAA);
-        // A successful join will return RN2903_JOIN_STATUS_ACCEPTED (0).
-        // cout << "JOIN: got rv " << int(rv) << endl;
-
-        // Try an ABP join.  Note, these parameters are made up.  For a
-        // real network, you will want to use the correct values
-        // obviously.  For an ABP join, you need to supply the Device
-        // Address, Network Session Key, and the Application Session Key.
-
-        sensor.setDeviceAddr("00112233");
-        sensor.setNetworkSessionKey("00112233001122330011223300112233");
-        sensor.setApplicationSessionKey("00112233001122330011223300112233");
-
-        RN2903_JOIN_STATUS_T rv =
-            sensor.join(RN2903_JOIN_TYPE_T.RN2903_JOIN_TYPE_ABP);
-
-        if (rv == RN2903_JOIN_STATUS_T.RN2903_JOIN_STATUS_ACCEPTED)
-        {
-            System.out.println("Join successful.");
-
-            // All transmit payloads must be hex encoded strings, so
-            // pretend we have a temperature sensor that gave us a value
-            // of 25.6 C, and we want to transmit it.
-            String faketemp = "25.6";
-            System.out.println("Transmitting a packet...");
-
-            RN2903_MAC_TX_STATUS_T trv =
-                sensor.macTx(RN2903_MAC_MSG_TYPE_T.RN2903_MAC_MSG_TYPE_UNCONFIRMED,
-                             1, // port number
-                             sensor.toHex(faketemp));
-
-            if (trv == RN2903_MAC_TX_STATUS_T.RN2903_MAC_TX_STATUS_TX_OK)
-                System.out.println("Transmit successful.");
-            else
-            {
-                // check to see if we got a downlink packet
-                if (trv == RN2903_MAC_TX_STATUS_T.RN2903_MAC_TX_STATUS_RX_RECEIVED)
-                {
-                    System.out.println("Transmit successful, downlink packet received: "
-                                + sensor.getResponse());
-                }
-                else
-                {
-                    System.out.println("Transmit failed with code " + trv);
-                }
-            }
-        }
-        else
-        {
-            System.out.println("Join failed with code " + rv);
-        }
-
-
-        System.out.println("Exiting...");
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/RN2903_P2P_RX_Example.java b/examples/java/RN2903_P2P_RX_Example.java
deleted file mode 100644
index 3c22f66..0000000
--- a/examples/java/RN2903_P2P_RX_Example.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_rn2903.*;
-
-public class RN2903_P2P_RX_Example
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-        RN2903 sensor = new RN2903(defaultDev,
-                                   javaupm_rn2903.RN2903_DEFAULT_BAUDRATE);
-
-        // To use an internal UART understood by MRAA, use the following
-        // to inititialize rather than the above, which by default uses a
-        // tty path.
-        //
-        // RN2903 sensor = new RN2903(defaultDev,
-        //     upm_rn2903.javaupm_rn2903.RN2903_DEFAULT_BAUDRATE);
-
-        // enable debugging
-        // sensor.setDebug(true);
-
-        // get version
-        if (sensor.command("sys get ver")
-            != RN2903_RESPONSE_T.RN2903_RESPONSE_OK)
-        {
-            System.out.println("Failed to retrieve device version string");
-            System.exit(1);
-        }
-        System.out.println("Firmware version: " + sensor.getResponse());
-
-        System.out.println("Hardware EUI: " + sensor.getHardwareEUI());
-
-        // For this example, we will just try to receive a packet
-        // transmitted by the p2p-tx rn2903 example.  We reset the
-        // device to defaults, and we do not make any adjustments to the
-        // radio configuration.  You will probably want to do so for a
-        // real life application.
-
-        // The first thing to do is to suspend the LoRaWAN stack on the device.
-        sensor.macPause();
-
-        // We will use continuous mode (window_size 0), though the default
-        // radio watch dog timer will expire every 15 seconds.  We will
-        // just loop here.
-
-        while (true)
-        {
-            System.out.println("Waiting for packet...");
-            RN2903_RESPONSE_T rv = sensor.radioRx(0);
-            if (rv != RN2903_RESPONSE_T.RN2903_RESPONSE_OK)
-            {
-                System.out.println("radioRx() failed with code "
-                                    + rv.toString());
-            }
-            else
-            {
-                String resp = sensor.getResponse();
-                String payload = sensor.getRadioRxPayload();
-                if (payload.length() == 0)
-                    System.out.println("Got response: '" + resp + "'");
-                else
-                    System.out.println("Got payload: '"
-                                + sensor.fromHex(payload)
-                                + "'");
-            }
-
-            System.out.println();
-        }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/RN2903_P2P_TX_Example.java b/examples/java/RN2903_P2P_TX_Example.java
deleted file mode 100644
index 6edb658..0000000
--- a/examples/java/RN2903_P2P_TX_Example.java
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_rn2903.*;
-
-public class RN2903_P2P_TX_Example
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-        RN2903 sensor = new RN2903(defaultDev,
-                                   javaupm_rn2903.RN2903_DEFAULT_BAUDRATE);
-
-        // To use an internal UART understood by MRAA, use the following
-        // to inititialize rather than the above, which by default uses a
-        // tty path.
-        //
-        // RN2903 sensor = new RN2903(defaultDev,
-        //     upm_rn2903.javaupm_rn2903.RN2903_DEFAULT_BAUDRATE);
-
-        // enable debugging
-        // sensor.setDebug(true);
-
-        // get version
-        if (sensor.command("sys get ver")
-            != RN2903_RESPONSE_T.RN2903_RESPONSE_OK)
-        {
-            System.out.println("Failed to retrieve device version string");
-            System.exit(1);
-        }
-        System.out.println("Firmware version: " + sensor.getResponse());
-
-        System.out.println("Hardware EUI: " + sensor.getHardwareEUI());
-
-        // For this example, we will just try transmitting a packet over
-        // LoRa.  We reset the device to defaults, and we do not make any
-        // adjustments to the radio configuration.  You will probably want
-        // to do so for a real life application.
-
-        // The first thing to do is to suspend the LoRaWAN stack on the device.
-        sensor.macPause();
-
-        // the default radio watchdog timer is set for 15 seconds, so we
-        // will send a packet every 10 seconds.  In reality, local
-        // restrictions limit the amount of time on the air, so in a real
-        // implementation, you would not want to send packets that
-        // frequently.
-
-        Integer count = 0;
-        while (true)
-        {
-            String output = "Ping " + count.toString();
-            count++;
-
-            // All payloads must be hex encoded
-            String payload = sensor.toHex(output);
-
-            System.out.println("Transmitting a packet, data: '"
-                + output
-                + "' -> hex: '"
-                + payload
-                + "'");
-
-            RN2903_RESPONSE_T rv = sensor.radioTx(payload);
-
-            if (rv == RN2903_RESPONSE_T.RN2903_RESPONSE_OK)
-                System.out.println("Transmit successful.");
-            else
-                System.out.println("Transmit failed with code "
-                                   + rv.toString());
-
-            System.out.println();
-
-            Thread.sleep(10000);
-        }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/RPR220_Example.java b/examples/java/RPR220_Example.java
deleted file mode 100644
index 5eaf67a..0000000
--- a/examples/java/RPR220_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class RPR220_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// This example uses a simple method to determine current status
-
-		// Instantiate an RPR220 digital pin D2
-		upm_rpr220.RPR220 sensor = new upm_rpr220.RPR220(2);
-
-		while (true) {
-			if (sensor.blackDetected())
-				System.out.println("Black detected");
-			else
-				System.out.println("Black NOT detected");
-
-			Thread.sleep(100);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/RPR220_intr_Example.java b/examples/java/RPR220_intr_Example.java
deleted file mode 100644
index be9e0ab..0000000
--- a/examples/java/RPR220_intr_Example.java
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class RPR220_intr_Example {
-
-	public static int counter = 0;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// This example uses an interrupt handler to increment a counter
-
-		// Instantiate an RPR220 digital pin D2
-		upm_rpr220.RPR220 sensor = new upm_rpr220.RPR220(2);
-
-		RPRISR callback = new RPRISR();
-		sensor.installISR(callback);
-
-		while (true) {
-			System.out.println("Counter: " + counter);
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
-
-class RPRISR implements Runnable {
-	public RPRISR() {
-		super();
-	}
-	public void run() {
-		RPR220_intr_Example.counter++;
-	}
-}
\ No newline at end of file
diff --git a/examples/java/Relay_Example.java b/examples/java/Relay_Example.java
deleted file mode 100644
index 9413d1c..0000000
--- a/examples/java/Relay_Example.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Relay_Example {
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Create the button object using UART
-		upm_relay.Relay relay = new upm_relay.Relay(5);
-
-		for (int i = 0; i < 3; i++) {
-			relay.on();
-			if (relay.isOn())
-				System.out.println("Relay is on");
-			Thread.sleep(1000);
-
-			relay.off();
-			if (relay.isOff())
-				System.out.println("Relay is off");
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
diff --git a/examples/java/RotaryEncoder_Example.java b/examples/java/RotaryEncoder_Example.java
deleted file mode 100644
index 1b56c00..0000000
--- a/examples/java/RotaryEncoder_Example.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class RotaryEncoder_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Rotary Encoder, using signal pins D2 and D3
-		upm_rotaryencoder.RotaryEncoder rotaryencoder = new upm_rotaryencoder.RotaryEncoder(2, 3);
-
-		while (true) {
-			System.out.println("Position: " + rotaryencoder.position());
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/Rotary_Example.java b/examples/java/Rotary_Example.java
deleted file mode 100644
index 848d2fa..0000000
--- a/examples/java/Rotary_Example.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Rotary_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_rotary.Rotary knob = new upm_rotary.Rotary(0);
-
-		while (true) {
-			float abs_value = knob.abs_value(); // Absolute raw value
-			float abs_deg = knob.abs_deg(); // Absolute degrees
-			float abs_rad = knob.abs_rad(); // Absolute radians
-			float rel_value = knob.rel_value(); // Relative raw value
-			float rel_deg = knob.rel_deg(); // Relative degrees
-			float rel_rad = knob.rel_rad(); // Relative radians
-
-			System.out.println("Absolute: " + abs_value + " raw, " + abs_deg + " deg, " + abs_rad
-					+ " rad");
-			System.out.println("Relative: " + rel_value + " raw, " + rel_deg + " deg, " + rel_rad
-					+ " rad");
-
-			Thread.sleep(3000);
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/SCAM_Example.java b/examples/java/SCAM_Example.java
deleted file mode 100644
index 8b31f02..0000000
--- a/examples/java/SCAM_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class SCAM_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Serial Camera on UART 0
-		upm_scam.SCAM camera = new upm_scam.SCAM(0);
-
-		// make sure port is initialized properly. 115200 baud is the default.
-		if (!camera.setupTty()) {
-			System.err.println("Failed to setup tty port parameters");
-			System.exit(-1);
-		}
-
-		if (camera.init())
-			System.out.println("Initialized...");
-		else
-			System.out.println("Initialization failed");
-
-		if (camera.preCapture())
-			System.out.println("preCapture succeeded...");
-		else
-			System.out.println("preCapture failed.");
-
-		if (camera.doCapture())
-			System.out.println("doCapture succeeded...");
-		else
-			System.out.println("doCapture failed.");
-
-		if (camera.getImageSize() > 0) {
-			System.out.println("Storing image.jpg...");
-
-			if (camera.storeImage("image.jpg"))
-				System.out.println("storeImage succeeded...");
-			else
-				System.out.println("storeImage failed.");
-
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/SHT1X_Example.java b/examples/java/SHT1X_Example.java
deleted file mode 100644
index 068d535..0000000
--- a/examples/java/SHT1X_Example.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_sht1x.SHT1X;
-
-public class SHT1X_Example
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // Instantiate a SHT1X sensor using D2 as the clock, and D3 as the
-        // data pin.
-        SHT1X sensor = new SHT1X(2, 3);
-
-        // Every 2 seconds, update and print values
-        while (true)
-            {
-                sensor.update();
-
-                System.out.println("Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C");
-                System.out.println("Humidity:    "
-                                   + sensor.getHumidity()
-                                   + " RH");
-
-                System.out.println();
-                Thread.sleep(2000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/SM130_Example.java b/examples/java/SM130_Example.java
deleted file mode 100644
index 7baffe7..0000000
--- a/examples/java/SM130_Example.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-import upm_sm130.SM130;
-
-public class SM130_Example {
-
-	static {
-		try {
-			System.loadLibrary("javaupm_sm130");
-			System.loadLibrary("mraajava");
-		} catch (UnsatisfiedLinkError e) {
-			System.err.println(
-					"Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" +
-							e);
-			System.exit(1);
-		}
-	}
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Instantiate a UART based SM130 RFID Module using defaults
-		SM130 sensor = new SM130();
-		
-		// set the baud rate.  19200 baud is the default.
-		if(sensor.setBaudRate(19200) == 1){
-			System.out.println("Failed to set baud rate");
-			return;
-		}
-		
-		System.out.println("Resetting...");
-		sensor.reset();
-		
-		System.out.println("Firmware revision: "+sensor.getFirmwareVersion());
-		System.out.println("Waiting up to 5 seconds for a tag...");
-		
-		if(sensor.waitForTag(5000)){
-			System.out.println("Found tag, UID: "+sensor.string2HexString(sensor.getUID()));
-			System.out.println("Tag Type: "+sensor.tag2String(sensor.getTagType()));
-		}
-		else{
-			// error
-			System.out.println("waitForTag failed: "+sensor.getLastErrorString());
-		}
-		//! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/SSD1308_oled_Example.java b/examples/java/SSD1308_oled_Example.java
deleted file mode 100644
index c84e857..0000000
--- a/examples/java/SSD1308_oled_Example.java
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class SSD1308_oled_Example {
-
-	static private final int[] IntelLogo = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 192,
-			192, 192, 224, 224, 224, 224, 240, 240, 248, 248, 120, 120, 120, 120, 60, 60, 60, 60,
-			60, 62, 30, 30, 30, 30, 30, 30, 30, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
-			15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 31, 31, 31, 31, 31, 30, 62, 62, 62, 62,
-			126, 126, 124, 124, 252, 252, 248, 248, 240, 240, 240, 224, 224, 224, 192, 128, 128,
-			128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
-			128, 128, 128, 128, 128, 128, 128, 0, 56, 56, 28, 30, 14, 15, 15, 7, 7, 7, 7, 3, 3, 1,
-			1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 192,
-			192, 192, 192, 192, 192, 192, 0, 0, 0, 0, 192, 193, 195, 195, 195, 7, 15, 15, 63, 127,
-			255, 255, 255, 254, 252, 252, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 192, 240,
-			248, 124, 124, 60, 0, 0, 0, 0, 159, 159, 159, 159, 159, 159, 159, 159, 0, 0, 0, 0, 128,
-			128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
-			128, 128, 0, 0, 0, 0, 0, 0, 254, 254, 254, 254, 254, 254, 254, 254, 128, 128, 128, 128,
-			128, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 192, 192, 192, 192, 192, 192, 128, 128, 128,
-			0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 3, 7, 3, 3,
-			3, 0, 0, 0, 0, 0, 1, 1, 255, 255, 255, 255, 255, 255, 255, 0, 0, 224, 248, 252, 252,
-			255, 127, 15, 15, 3, 1, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0,
-			0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 15, 15, 15, 15, 15, 15, 255, 255, 255,
-			255, 255, 255, 255, 252, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 15, 15,
-			15, 15, 15, 224, 224, 252, 254, 255, 255, 255, 255, 159, 159, 143, 143, 135, 135, 143,
-			159, 255, 255, 255, 255, 255, 255, 252, 248, 0, 0, 0, 255, 255, 255, 255, 255, 255,
-			255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 224, 248, 248, 255, 255, 255, 255,
-			255, 127, 15, 255, 255, 255, 255, 255, 255, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
-			255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255,
-			0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255,
-			255, 255, 255, 255, 255, 192, 192, 192, 192, 192, 31, 31, 255, 255, 255, 255, 255, 255,
-			231, 231, 199, 199, 199, 199, 199, 199, 199, 199, 231, 231, 231, 231, 199, 135, 0, 0,
-			0, 63, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 224, 240, 248, 248, 252, 254,
-			255, 255, 255, 127, 63, 63, 31, 15, 7, 7, 1, 0, 0, 63, 63, 255, 255, 255, 255, 255,
-			240, 192, 192, 128, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 7, 7, 7, 7, 7, 0, 0, 0, 0, 7, 7,
-			7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 3, 3, 7,
-			7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 1, 3, 3, 3, 7, 7, 7, 7, 15, 15, 15, 15, 7, 7, 7, 7, 7,
-			3, 3, 3, 1, 0, 0, 0, 0, 1, 3, 3, 7, 135, 135, 135, 192, 192, 0, 0, 7, 7, 3, 3, 3, 1, 1,
-			1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 15, 15, 31, 127, 127, 127, 255, 255,
-			252, 252, 252, 248, 240, 240, 240, 224, 224, 224, 192, 192, 192, 192, 128, 128, 128,
-			128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128, 192, 192,
-			192, 192, 192, 224, 224, 224, 224, 240, 240, 240, 240, 248, 248, 248, 248, 252, 252,
-			252, 254, 254, 255, 255, 255, 255, 255, 255, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 7, 7, 7, 15,
-			15, 31, 31, 31, 63, 63, 63, 63, 63, 127, 127, 127, 127, 127, 255, 255, 255, 255, 254,
-			254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-			254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 127, 127, 127, 127,
-			127, 127, 127, 127, 63, 63, 63, 63, 63, 31, 31, 31, 31, 31, 15, 15, 15, 15, 7, 7, 7, 7,
-			3, 3, 3, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-			0, 0, 0, 0, 0};
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_lcd.SSD1308 lcd = new upm_lcd.SSD1308(0);
-
-		byte[] image = new byte[IntelLogo.length];
-		for (int i = 0; i < IntelLogo.length; i++)
-			image[i] = (byte) IntelLogo[i];
-
-		lcd.clear();
-		lcd.draw(image);
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/SSD1327_oled_Example.java b/examples/java/SSD1327_oled_Example.java
deleted file mode 100644
index e6c0e74..0000000
--- a/examples/java/SSD1327_oled_Example.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class SSD1327_oled_Example {
-
-	static private final int[] SeeedLogo = new int[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x01, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
-			0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x03,
-			0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x01, 0xC0, 0x08,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x07, 0x80, 0x01, 0xE0, 0x08, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x20, 0x0F, 0x80, 0x01, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x30, 0x0F, 0x00, 0x01, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x30, 0x0F, 0x00, 0x01, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0F,
-			0x00, 0x01, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0F, 0x00, 0x01,
-			0xE0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0F, 0x00, 0x01, 0xE0, 0x18,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0F, 0x00, 0x01, 0xE0, 0x38, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x38, 0x0F, 0x80, 0x01, 0xE0, 0x38, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x3C, 0x0F, 0x80, 0x01, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x3E, 0x0F, 0x80, 0x03, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x07,
-			0x80, 0x03, 0xE0, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x07, 0x80, 0x03,
-			0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x07, 0x80, 0x03, 0xC1, 0xF0,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x87, 0xC0, 0x07, 0xC1, 0xF0, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x0F, 0x83, 0xC0, 0x07, 0x83, 0xE0, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x0F, 0xC3, 0xC0, 0x07, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x07, 0xE1, 0xE0, 0x07, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0,
-			0xE0, 0x0F, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0xF0, 0x0E,
-			0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x70, 0x1C, 0x3F, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x30, 0x18, 0x7E, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x18, 0x30, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x1F, 0x88, 0x21, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x0F, 0xC4, 0x47, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
-			0xE0, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x3E,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x02, 0x00, 0x06, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
-			0x06, 0x00, 0x00, 0x60, 0x00, 0x7E, 0x3F, 0x0F, 0xC3, 0xF0, 0xFA, 0x0F, 0xDF, 0xE1,
-			0x9F, 0xEC, 0x7E, 0xE6, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x1C, 0xDF, 0xE1, 0xB9, 0xEC,
-			0xE7, 0xE0, 0x61, 0xD8, 0x66, 0x1B, 0x86, 0x1C, 0x06, 0x61, 0xB0, 0x6D, 0xC3, 0x7C,
-			0x7F, 0xFF, 0xFF, 0xFF, 0x06, 0x0F, 0x86, 0x61, 0xB0, 0x6D, 0x83, 0x3E, 0x7F, 0xFF,
-			0xFF, 0xFF, 0x06, 0x07, 0xC6, 0x61, 0xB0, 0x6D, 0x83, 0xC3, 0x61, 0x18, 0x46, 0x03,
-			0x86, 0x18, 0x66, 0x61, 0xB0, 0x6D, 0xC3, 0xFE, 0x7F, 0x9F, 0xE7, 0xF9, 0xFE, 0x1F,
-			0xE6, 0x3F, 0x9F, 0xEC, 0xFE, 0x7E, 0x3F, 0x0F, 0xC3, 0xF0, 0xFA, 0x0F, 0xC6, 0x3F,
-			0x9F, 0xEC, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x44, 0x00, 0x00, 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C,
-			0xF3, 0xCF, 0x70, 0x9E, 0x79, 0xE7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7D, 0x9E, 0x68,
-			0x20, 0xB2, 0xC8, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x9E, 0x6F, 0x20, 0xB2,
-			0xF9, 0xE7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x46, 0x9A, 0x61, 0x20, 0xB2, 0xCB, 0x60,
-			0x80, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xF3, 0xCF, 0x30, 0x9E, 0x79, 0xE7, 0x90, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x7C, 0x02, 0x00, 0x00, 0x82, 0x60, 0x00, 0x00, 0xF8, 0x00, 0x00,
-			0x40, 0x40, 0x02, 0x00, 0x00, 0x83, 0x60, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x40, 0x60,
-			0xB7, 0x79, 0xE7, 0x81, 0xC7, 0x92, 0x70, 0x89, 0xE7, 0x9E, 0x78, 0x7C, 0xE2, 0xC9,
-			0x2C, 0x81, 0xCC, 0xD2, 0x40, 0xFB, 0x21, 0xB2, 0x48, 0x40, 0x62, 0xF9, 0x2C, 0x80,
-			0x8C, 0xD2, 0x40, 0x8B, 0xE7, 0xB0, 0x48, 0x40, 0xE2, 0xC9, 0x2C, 0x80, 0x84, 0xD2,
-			0x40, 0x8B, 0x2D, 0x92, 0x48, 0x7D, 0xB3, 0x79, 0x27, 0x80, 0x87, 0x9E, 0x40, 0x8D,
-			0xE7, 0x9E, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_lcd.SSD1327 lcd = new upm_lcd.SSD1327(0);
-
-		// If you don't set the display to be white, the seeed logo will appear
-		// jagged
-		lcd.setGrayLevel((short) 12);
-
-		byte[] image = new byte[SeeedLogo.length];
-		for (int i = 0; i < SeeedLogo.length; i++)
-			image[i] = (byte) SeeedLogo[i];
-
-		lcd.draw(image);
-
-		// Simple print hello world
-		for (short i = 0; i < 12; i++) {
-			lcd.setCursor(i, 0);
-			lcd.setGrayLevel(i);
-			lcd.write("Hello World");
-		}
-
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/ST7735_Example.java b/examples/java/ST7735_Example.java
deleted file mode 100644
index 930aa4c..0000000
--- a/examples/java/ST7735_Example.java
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class ST7735_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_st7735.ST7735 lcd = new upm_st7735.ST7735((short) 7, (short) 4, (short) 9, (short) 8);
-
-		lcd.fillScreen(upm_st7735.javaupm_st7735Constants.ST7735_RED);
-		lcd.refresh();
-
-		lcd.fillScreen(upm_st7735.javaupm_st7735Constants.ST7735_CYAN);
-		lcd.refresh();
-
-		lcd.fillScreen(upm_st7735.javaupm_st7735Constants.ST7735_BLACK);
-		lcd.refresh();
-
-		lcd.drawLine((short) 10, (short) 10, (short) 10, (short) 100,
-				upm_st7735.javaupm_st7735Constants.ST7735_MAGENTA);
-		lcd.drawLine((short) 20, (short) 20, (short) 10, (short) 100,
-				upm_st7735.javaupm_st7735Constants.ST7735_YELLOW);
-		lcd.drawLine((short) 30, (short) 30, (short) 50, (short) 100,
-				upm_st7735.javaupm_st7735Constants.ST7735_WHITE);
-		lcd.refresh();
-
-		lcd.drawPixel((short) 20, (short) 20, upm_st7735.javaupm_st7735Constants.ST7735_GREEN);
-		lcd.refresh();
-
-		lcd.drawTriangle((short) 50, (short) 50, (short) 80, (short) 80, (short) 60, (short) 90,
-				upm_st7735.javaupm_st7735Constants.ST7735_GREEN);
-		lcd.refresh();
-
-		lcd.drawCircle((short) 100, (short) 110, (short) 10,
-				upm_st7735.javaupm_st7735Constants.ST7735_BLUE);
-		lcd.refresh();
-
-		lcd.setTextWrap((short) 0);
-
-		lcd.setCursor((short) 0, (short) 30);
-		lcd.setTextColor(upm_st7735.javaupm_st7735Constants.ST7735_RED,
-				upm_st7735.javaupm_st7735Constants.ST7735_RED);
-		lcd.setTextSize((short) 1);
-		lcd.print("Hello World!");
-
-		lcd.setCursor((short) 10, (short) 50);
-		lcd.setTextColor(upm_st7735.javaupm_st7735Constants.ST7735_RED,
-				upm_st7735.javaupm_st7735Constants.ST7735_YELLOW);
-		lcd.setTextSize((short) 2);
-		lcd.print("BIG");
-
-		lcd.refresh();
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/SensorTemplate_Example.java b/examples/java/SensorTemplate_Example.java
deleted file mode 100644
index 17529cc..0000000
--- a/examples/java/SensorTemplate_Example.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * The MIT License (MIT)
- *
- * Author: Your Full Name <your@email.address>
- * Copyright (c) <year> <copyright holder>
- *
- * Permission is hereby granted, free of charge, to any person obtaining a copy of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
- * the Software, and to permit persons to whom the Software is furnished to do so,
- * subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in all
- * copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-public class SensorTemplate_Example {
-    public static void main (String args[]) throws InterruptedException {
-        //! [Interesting]
-        // Instantiate new sensor instance
-        upm_sensortemplate.SensorTemplate sensor = new upm_sensortemplate.SensorTemplate(0);
-
-        while (true) {
-
-            System.out.println("SensorTemplate says: " + sensor.helloWorld());
-
-            // Repeate every 2 seconds
-            Thread.sleep(2000);
-        }
-        //! [Interesting]
-    }
-}
diff --git a/examples/java/Slide_Example.java b/examples/java/Slide_Example.java
deleted file mode 100644
index 245e8fa..0000000
--- a/examples/java/Slide_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Slide_Example {
-    public static void main (String args[]) throws InterruptedException {
-        //! [Interesting]
-        // Instantiate new grove slide potentiometer on  analog pin A0
-        upm_slide.Slide slide = new upm_slide.Slide(0);
-
-        while (true) {
-            float raw_value = slide.raw_value();
-            float value = slide.voltage_value();
-
-            System.out.println("raw value: " + raw_value);
-            System.out.println("value: " + value);
-
-            Thread.sleep(2500);
-        }
-        //! [Interesting]
-    }
-}
diff --git a/examples/java/SpeakerPWM_Example.java b/examples/java/SpeakerPWM_Example.java
deleted file mode 100644
index b32212f..0000000
--- a/examples/java/SpeakerPWM_Example.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class SpeakerPWM_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-// ! [Interesting]
-        // Instantiate a Speaker (PWM) pin D3 in PWM mode
-        upm_speaker.Speaker speaker = new upm_speaker.Speaker(3, true);
-
-        // emit a series of frequencies for 500ms each
-        speaker.emit(50, 500);
-        speaker.emit(75, 500);
-        speaker.emit(125, 500);
-        speaker.emit(250, 500);
-        speaker.emit(500, 500);
-        speaker.emit(1000, 500);
-        speaker.emit(2000, 500);
-        speaker.emit(3000, 500);
-        speaker.emit(5000, 500);
-        speaker.emit(10000, 500);
-// ! [Interesting]
-    }
-
-}
diff --git a/examples/java/Speaker_Example.java b/examples/java/Speaker_Example.java
deleted file mode 100644
index 0c03d9c..0000000
--- a/examples/java/Speaker_Example.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Speaker_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Speaker on digital pin D2
-		upm_speaker.Speaker speaker = new upm_speaker.Speaker(2);
-
-		// Play all 7 of the lowest notes
-		speaker.playAll();
-
-		// Play a medium C-sharp
-		speaker.playSound('c', true, "med");
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/StepMotor_Example.java b/examples/java/StepMotor_Example.java
deleted file mode 100644
index b90946b..0000000
--- a/examples/java/StepMotor_Example.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class StepMotor_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-        // ! [Interesting]
-        upm_stepmotor.StepMotor sensor = new upm_stepmotor.StepMotor(2, 3);
-
-        while (true) {
-            System.out.println("One complete rotation forward and back at 60 rpm.");
-            sensor.setSpeed(60);
-            sensor.stepForward(200);
-            Thread.sleep(1000);
-            sensor.stepBackward(200);
-            Thread.sleep(1000);
-
-            System.out.println("One complete rotation forward and back at 150 rpm.");
-            sensor.setSpeed(150);
-            sensor.stepForward(200);
-            Thread.sleep(1000);
-            sensor.stepBackward(200);
-            Thread.sleep(1000);
-
-            System.out.println("One complete rotation forward and back at 300 rpm.");
-            sensor.setSpeed(300);
-            sensor.stepForward(200);
-            Thread.sleep(1000);
-            sensor.stepBackward(200);
-            Thread.sleep(1000);
-        }
-        // ! [Interesting]
-    }
-}
diff --git a/examples/java/T8100_Example.java b/examples/java/T8100_Example.java
deleted file mode 100644
index 162c23f..0000000
--- a/examples/java/T8100_Example.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_t8100.T8100;
-
-public class T8100_Example
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // You will need to edit this example to conform to your site
-        // and your devices, specifically the Device Object Instance
-        // ID passed to the constructor, and the arguments to
-        // initMaster() that are appropriate for your BACnet network.
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-        System.out.println("Initializing...");
-
-        // Instantiate an T8100 object for an T8100 device that has
-        // 568000 as it's unique Device Object Instance ID.  NOTE: You
-        // will certainly want to change this to the correct value for
-        // your device(s).
-        T8100 sensor = new T8100(568000);
-
-        // Initialize our BACnet master, if it has not already been
-        // initialized, with the device and baudrate, choosing 1000001
-        // as our unique Device Object Instance ID, 2 as our MAC
-        // address and using default values for maxMaster and
-        // maxInfoFrames
-        sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-        // Uncomment to enable debugging output
-        // sensor.setDebug(true);
-
-        System.out.println();
-        System.out.println("Device Description: "
-                           + sensor.getDeviceDescription());
-        System.out.println("Device Location: " + sensor.getDeviceLocation());
-        System.out.println();
-
-        // update and print a few values every 5 seconds
-        while (true)
-            {
-                // update our values
-                sensor.update();
-
-                System.out.println("CO2 Concentration: "
-                                   + sensor.getCO2()
-                                   + " ppm");
-
-                // we show both C and F for temperature
-                System.out.println("Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println("Humidity: "
-                                   + sensor.getHumidity()
-                                   + " %RH");
-
-                System.out.println("Relay State: "
-                                   + sensor.getRelayState());
-
-                System.out.println();
-                Thread.sleep(5000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/TB7300_Example.java b/examples/java/TB7300_Example.java
deleted file mode 100644
index 250dcdf..0000000
--- a/examples/java/TB7300_Example.java
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_tb7300.TB7300;
-
-public class TB7300_Example
-{
-    private static String defaultDev = "/dev/ttyUSB0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        // You will need to edit this example to conform to your site
-        // and your devices, specifically the Device Object Instance
-        // ID passed to the constructor, and the arguments to
-        // initMaster() that are appropriate for your BACnet network.
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-        System.out.println("Initializing...");
-
-        // Instantiate an TB7300 object for an TB7300 device that has
-        // 73001 as it's unique Device Object Instance ID.  NOTE: You
-        // will certainly want to change this to the correct value for
-        // your device(s).
-        TB7300 sensor = new TB7300(73001);
-
-        // Initialize our BACnet master, if it has not already been
-        // initialized, with the device and baudrate, choosing 1000001
-        // as our unique Device Object Instance ID, 2 as our MAC
-        // address and using default values for maxMaster and
-        // maxInfoFrames
-        sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-        // Uncomment to enable debugging output
-        // sensor.setDebug(true);
-
-        System.out.println();
-        System.out.println("Device Name: "
-                           + sensor.getDeviceName());
-        System.out.println("Device Description: "
-                           + sensor.getDeviceDescription());
-        System.out.println("Device Location: " + sensor.getDeviceLocation());
-        System.out.println();
-
-        System.out.println("Fan Mode: "
-                           + sensor.getMultiStateValueText(TB7300.MULTISTATE_VALUES_T.MV_Fan_Mode));
-        System.out.println("Fan Status: "
-                           + sensor.getMultiStateValueText(TB7300.MULTISTATE_VALUES_T.MV_Fan_Status));
-        System.out.println("System Mode: "
-                           + sensor.getMultiStateValueText(TB7300.MULTISTATE_VALUES_T.MV_System_Mode));
-        System.out.println("Service Alarm:"
-                           + sensor.getBinaryInputText(TB7300.BINARY_INPUTS_T.BI_Service_Alarm));
-
-        System.out.println();
-
-        // update and print the room temperature every 5 seconds
-        while (true)
-            {
-                // update our values
-                sensor.update();
-
-                // we show both C and F for temperature
-                System.out.println("Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(5000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/TEAMS_Example.java b/examples/java/TEAMS_Example.java
deleted file mode 100644
index caeda6f..0000000
--- a/examples/java/TEAMS_Example.java
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_teams.TEAMS;
-
-public class TEAMS_Example 
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate an TEAMS instance, using A0 for temperature, and
-        // 165.0 ohms for the rResistor value (for the libelium 4-20ma
-        // interface)
-        TEAMS sensor = new TEAMS(0, 165.0f);
-        
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                // is the sensor connected? (current >= 4ma)
-                System.out.println("Is Connected: " + sensor.isConnected());
-    
-                // print computed current on the loop.  This includes
-                // the offset, if one was set by setOffsetMilliamps().
-                System.out.println("Milliamps: " + sensor.getRawMilliamps());
-
-                // we show both C and F for temperature
-                System.out.println("Temperature: " 
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println();
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/TEX00_Example.java b/examples/java/TEX00_Example.java
deleted file mode 100644
index b2e307b..0000000
--- a/examples/java/TEX00_Example.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_tex00.TEX00;
-
-public class TEX00_Example 
-{
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        System.out.println("Initializing...");
-
-        // Instantiate an TEX00 instance, using A0 for the analog input.  In
-        // this example, we are using a 10K Ohm balance resistor and a TED
-        // (10k type 2) thermistor.
-        TEX00 sensor = new TEX00(0, 10000.0f, 
-                                 TEX00.SENSOR_TYPES_T.STYPE_THERMISTOR_TED);
-
-        System.out.println("Minimum temperature: " 
-                           + sensor.getTemperatureRangeMin());
-        System.out.println("Maximum temperature: " 
-                           + sensor.getTemperatureRangeMax());
-        System.out.println();
-
-        while (true)
-            {
-                // update our values from the sensor
-                sensor.update();
-
-                if (sensor.isOutOfRange())
-                    {
-                        System.out.println("Temperature out of range");
-                    }
-                else
-                    {
-                        // we show both C and F for temperature
-                        System.out.println("Temperature: " 
-                                           + sensor.getTemperature()
-                                           + " C / "
-                                           + sensor.getTemperature(true)
-                                           + " F");
-                    }
-
-                System.out.println();
-                Thread.sleep(1000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/TM1637_Example.java b/examples/java/TM1637_Example.java
deleted file mode 100644
index 6fc7bc1..0000000
--- a/examples/java/TM1637_Example.java
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import java.time.LocalDateTime;
-
-//NOT TESTED!!!
-public class TM1637_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// TM1637 on pins 0 (clk) and 1 (dio)
-		upm_tm1637.TM1637 myDisplay = new upm_tm1637.TM1637(0, 1);
-
-		// Start a box using 7-segment encoding
-		myDisplay.write(0x39, 0x09, 0x09);
-
-		// Finish box using writeAt function
-		myDisplay.writeAt(3, ']');
-
-		// Wait 3 seconds
-		Thread.sleep(3000);
-
-		LocalDateTime now;
-		while (true) {
-			now = LocalDateTime.now();
-			int hour = now.getHour();
-			int min = now.getMinute();
-			int sec = now.getSecond();
-
-			System.out.println(hour + ":" + min + ":" + sec);
-			myDisplay.writeString(hour + ":" + min);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/java/TP401_Example.java b/examples/java/TP401_Example.java
deleted file mode 100644
index c3b6287..0000000
--- a/examples/java/TP401_Example.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class TP401_Example {
-	private static String airQuality(int value) {
-		if (value < 50)
-			return "Fresh Air";
-		if (value < 200)
-			return "Normal Indoor Air";
-		if (value < 400)
-			return "Low Pollution";
-		if (value < 600)
-			return "High Pollution - Action Recommended";
-		return "Very High Pollution - Take Action Immediately";
-	}
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate new grove air quality sensor on analog pin A0
-		upm_gas.TP401 airSensor = new upm_gas.TP401(0);
-
-		System.out.println(airSensor.name());
-
-		System.out.println("Heating sensor for 3 minutes...");
-		// wait 3 minutes for sensor to warm up
-		for (int i = 0; i < 3; i++) {
-			if (i != 0)
-				System.out.println("Please wait, " + i + " minute(s) passed..");
-			Thread.sleep(60000);
-		}
-		System.out.println("Sensor ready!");
-
-		while (true) {
-			int value = airSensor.getSample(); // Read raw value
-			float ppm = airSensor.getPPM(); // Read CO ppm (can vary slightly
-											// from previous read)
-
-			System.out.println("raw: " + value + " ppm: " + ppm + "  " + airQuality(value));
-
-			Thread.sleep(100);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/TSL2561_Example.java b/examples/java/TSL2561_Example.java
deleted file mode 100644
index 0f49c87..0000000
--- a/examples/java/TSL2561_Example.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class TSL2561_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a TSL2561 Digital Light Sensor on I2C
-		upm_tsl2561.TSL2561 sensor = new upm_tsl2561.TSL2561();
-
-		while (true) {
-			System.out.println("Lux = " + sensor.getLux());
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/TTP223_Example.java b/examples/java/TTP223_Example.java
deleted file mode 100644
index 5aa0016..0000000
--- a/examples/java/TTP223_Example.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class TTP223_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		upm_ttp223.TTP223 touch = new upm_ttp223.TTP223(7);
-
-		while (true) {
-			if (touch.isPressed())
-				System.out.println(touch.name() + " is pressed");
-			else
-				System.out.println(touch.name() + " is not pressed");
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/TZEMT400_Example.java b/examples/java/TZEMT400_Example.java
deleted file mode 100644
index 2e683b0..0000000
--- a/examples/java/TZEMT400_Example.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_ozw.TZEMT400;
-
-public class TZEMT400_Example
-{
-    private static String defaultDev = "/dev/ttyACM0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-
-        if (args.length > 0)
-            defaultDev = args[0];
-        System.out.println("Using device " + defaultDev);
-
-        // Instantiate a TZEMT400 instance, on device node 13.  You
-        // will almost certainly need to change this to reflect your
-        // own network.  Use the ozwdump example to see what nodes are
-        // available.
-        TZEMT400 sensor = new TZEMT400(13);
-
-        // The first thing to do is create options, then lock them when done.
-        sensor.optionsCreate();
-        sensor.optionsLock();
-
-        System.out.println("Initializing, this may take awhile depending "
-                           + "on your ZWave network");
-
-        sensor.init(defaultDev);
-        System.out.println("Initialization complete");
-
-        System.out.println("Querying data...");
-
-        while (true)
-            {
-                sensor.update();
-
-                System.out.println("Temperature: "
-                                   + sensor.getTemperature()
-                                   + " C / "
-                                   + sensor.getTemperature(true)
-                                   + " F");
-
-                System.out.println("Mode: "
-                                   + sensor.getMode());
-
-                System.out.println("Operating State: "
-                                   + sensor.getOperatingState());
-
-                System.out.println("Heating Point: "
-                                   + sensor.getHeatingPointTemperature()
-                                   + " C / "
-                                   + sensor.getHeatingPointTemperature(true)
-                                   + " F");
-
-                System.out.println("Cooling Point: "
-                                   + sensor.getCoolingPointTemperature()
-                                   + " C / "
-                                   + sensor.getCoolingPointTemperature(true)
-                                   + " F");
-
-                System.out.println("Fan Mode: "
-                                   + sensor.getFanMode());
-
-                System.out.println("Fan State: "
-                                   + sensor.getFanState());
-
-                System.out.println();
-
-                Thread.sleep(5000);
-            }
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/Temperature_Example.java b/examples/java/Temperature_Example.java
deleted file mode 100644
index 9354f2a..0000000
--- a/examples/java/Temperature_Example.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Author: Andrei Vasiliu <andrei.vasiliu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Temperature_Example {
-	public static void main (String args[]) throws InterruptedException {
-		//! [Interesting]
-        upm_temperature.Temperature temp = new upm_temperature.Temperature(3);
-		
-		for (int i = 0; i < 10; ++i) {
-			
-			int celsius = temp.value();
-			int fahrneheit = celsius * 2 + 32;
-
-			System.out.println("Celsius: " + celsius);
-			System.out.println("Fahrneheit: " + fahrneheit);
-			
-			Thread.sleep(1000);
-		}
-		temp.delete();
-        //! [Interesting]
-	}
-}
diff --git a/examples/java/Th02_Example.java b/examples/java/Th02_Example.java
deleted file mode 100644
index 0b039de..0000000
--- a/examples/java/Th02_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
-* Author: Abhishek Malik <abhishek.malik@intel.com>
-* Copyright (c) 2016 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-import upm_th02.TH02;
-
-public class Th02_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		float temperature = 0;
-		float humidity = 0;
-		
-		TH02 sensor = new TH02();
-		while(true){
-			temperature = sensor.getTemperature();
-			humidity = sensor.getHumidity();
-			System.out.println("Temperature = "+temperature+", Humidity = "+humidity);
-			try {
-				Thread.sleep(500);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception has occurred: "+e.getMessage());
-			}
-		}
-	}
-
-}
diff --git a/examples/java/ULN200XA_Example.java b/examples/java/ULN200XA_Example.java
deleted file mode 100644
index 0c5472c..0000000
--- a/examples/java/ULN200XA_Example.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class ULN200XA_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Stepper motor on a ULN200XA Dual H-Bridge.
-		// Wire the pins so that I1 is pin D8, I2 is pin D9, I3 is pin D10 and
-		// I4 is pin D11
-		upm_uln200xa.ULN200XA uln200xa = new upm_uln200xa.ULN200XA(4096, 8, 9, 10, 11);
-
-		uln200xa.setSpeed(5);
-		System.out.println("Rotating 1 revolution clockwise.");
-		uln200xa.setDirection(upm_uln200xa.ULN200XA_DIRECTION_T.ULN200XA_DIR_CW);
-		uln200xa.stepperSteps(4096);
-
-		System.out.println("Sleeping for 2 seconds...");
-		Thread.sleep(2000);
-
-		System.out.println("Rotating 1/2 revolution counter clockwise.");
-		uln200xa.setDirection(upm_uln200xa.ULN200XA_DIRECTION_T.ULN200XA_DIR_CCW);
-		uln200xa.stepperSteps(2048);
-
-		// turn off the power
-		uln200xa.release();
-		// ! [Interesting]
-
-		System.out.println("Exiting...");
-	}
-
-}
diff --git a/examples/java/VCAP_Example.java b/examples/java/VCAP_Example.java
deleted file mode 100644
index 73d06ad..0000000
--- a/examples/java/VCAP_Example.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_vcap.VCAP;
-
-public class VCAP_Example 
-{
-    private static String defaultDev = "/dev/video0";
-
-    public static void main(String[] args) throws InterruptedException
-    {
-// ! [Interesting]
-        if (args.length > 0)
-            defaultDev = args[0];
-
-        System.out.println("Using device " + defaultDev);
-        System.out.println("Initializing...");
-
-        // Instantiate an VCAP instance, using the specified video device
-        VCAP sensor = new VCAP(defaultDev);
-        
-        // enable some debug/verbose output
-        sensor.setDebug(true);
-
-        // This is just a hint.  The kernel can change this to a lower
-        // resolution that the hardware supports.  Use getWidth() and
-        // getHeight() methods to see what the kernel actually chose if you
-        // care.
-        sensor.setResolution(1920, 1080);
-
-        // capture an image
-        sensor.captureImage();
-        
-        // convert and save it as a jpeg
-        sensor.saveImage("video-img1.jpg");
-
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/VDiv_Example.java b/examples/java/VDiv_Example.java
deleted file mode 100644
index 732b1f5..0000000
--- a/examples/java/VDiv_Example.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class VDiv_Example {
-	private static final short gain3 = 3;
-	private static final short gain10 = 10;
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Grove Voltage Divider sensor on analog pin A0
-		upm_vdiv.VDiv vDiv = new upm_vdiv.VDiv(0);
-
-		// collect data and output measured voltage according to the setting
-		// of the scaling switch (3 or 10)
-		while (true) {
-			long val = vDiv.value(100);
-			float gain3val = vDiv.computedValue(gain3, val);
-			float gain10val = vDiv.computedValue(gain10, val);
-
-			System.out.println("ADC value: " + val + ", Gain 3: " + gain3val + "v, Gain 10: "
-					+ gain10val);
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/VEML6070_Example.java b/examples/java/VEML6070_Example.java
deleted file mode 100644
index 19bfdb7..0000000
--- a/examples/java/VEML6070_Example.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_veml6070.VEML6070;
-
-public class VEML6070_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-
-		//! [Interesting]
-		// Instantiate a VEML6070 UV sensor
-		VEML6070 veml = new VEML6070(0);
-		
-		while(true){
-			System.out.println("UV Value: "+veml.getUVIntensity());
-			try {
-				Thread.sleep(500);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/WFS_Example.java b/examples/java/WFS_Example.java
deleted file mode 100644
index 826e3ce..0000000
--- a/examples/java/WFS_Example.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class WFS_Example {
-
-    public static void main(String[] args) throws InterruptedException {
-// ! [Interesting]
-
-        // Instantiate a Water Flow Sensor on
-        // digital pin D2.  This must be an
-        // interrupt capable pin.
-        upm_wfs.WFS flow = new upm_wfs.WFS(2);
-
-        flow.clearFlowCounter();
-        flow.startFlowCounter();
-
-        while (true) {
-            System.out.print("Millis: " + flow.getMillis() + " FlowCount: " + flow.flowCounter());
-            System.out.println(" Flow Rate: " + flow.flowRate() + " LPM");
-
-            Thread.sleep(2000);
-        }
-// ! [Interesting]
-    }
-}
diff --git a/examples/java/WT5001_Example.java b/examples/java/WT5001_Example.java
deleted file mode 100644
index 8968903..0000000
--- a/examples/java/WT5001_Example.java
+++ /dev/null
@@ -1,130 +0,0 @@
-import java.io.IOException;
-
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class WT5001_Example {
-
-	static private void printUsage() {
-		System.out.println("Usage: java WT5001_Example <command>");
-		System.out.println("Commands:");
-		System.out.println("0  - stop playing");
-		System.out.println("1  - start playing track 1");
-		System.out.println("2  - pause/un-pause playback");
-		System.out.println("3  - next track");
-		System.out.println("4  - previous track");
-	}
-
-	public static void main(String[] args) {
-		// ! [Interesting]
-		// Instantiate a WT5001 serial MP3 player on uart 0
-		upm_wt5001.WT5001 mp3 = new upm_wt5001.WT5001(0);
-
-		int cmd = -1;
-		if (args.length > 0)
-			cmd = Integer.parseInt(args[0]);
-
-		// make sure port is initialized properly. 9600 baud is the default
-		if (!mp3.setupTty()) {
-			System.err.println("error in loading native library");
-			System.exit(-1);
-		}
-
-		switch (cmd) {
-			case 0 :
-				mp3.stop();
-				break;
-
-			case 1 :
-				mp3.play(upm_wt5001.WT5001.WT5001_PLAYSOURCE_T.SD, 1);
-				break;
-
-			case 2 :
-				mp3.pause();
-				break;
-
-			case 3 :
-				mp3.next();
-				break;
-
-			case 4 :
-				mp3.previous();
-				break;
-
-			default :
-				// nothing, just output usage, and info below
-				printUsage();
-				break;
-		}
-
-		// print out some information
-		try {
-			short vol;
-			vol = mp3.getVolume();
-			System.out.println("The current volume is: " + vol);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			short ps;
-			ps = mp3.getPlayState();
-			System.out.println("The current play state is: " + ps);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			int numf;
-			numf = mp3.getNumFiles(upm_wt5001.WT5001.WT5001_PLAYSOURCE_T.SD);
-			System.out.println("The number of files on the SD card is: " + numf);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		try {
-			int curf;
-			curf = mp3.getCurrentFile();
-			System.out.println("The current file is: " + curf);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-
-		int year[] = new int[1];
-		short month[] = new short[1];
-		short day[] = new short[1];
-		if (mp3.getDate(year, month, day))
-			System.out.println("The device date is: " + year[0] + "/" + month[0] + "/" + day[0]);
-
-		short hour[] = new short[1];
-		short minute[] = new short[1];
-		short second[] = new short[1];
-		if (mp3.getTime(hour, minute, second))
-			System.out
-					.println("The device time is: " + hour[0] + ":" + minute[0] + ":" + second[0]);
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/WaterLevelSensor_Example.java b/examples/java/WaterLevelSensor_Example.java
deleted file mode 100644
index 537d85b..0000000
--- a/examples/java/WaterLevelSensor_Example.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Abhishek Malik <abhishek.malik@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-import upm_waterlevel.WaterLevel;
-
-public class WaterLevelSensor_Example {
-
-	public static void main(String[] args) {
-		// TODO Auto-generated method stub
-		//! [Interesting]
-		// Instantiating the sensor on Digital Pin 2
-		WaterLevel level = new WaterLevel(2);
-
-		while(true){
-			if(level.isSubmerged()){
-				System.out.println("The sensor is submerged");
-			}
-			else{
-				System.out.println("The sensor is above water level");
-			}
-			try {
-				Thread.sleep(1000);
-			} catch (InterruptedException e) {
-				// TODO Auto-generated catch block
-				System.out.println("The following exception occurred: "+e.getMessage());
-			}
-		}
-		//! [Interesting]
-	}
-
-}
diff --git a/examples/java/Water_Example.java b/examples/java/Water_Example.java
deleted file mode 100644
index b807c03..0000000
--- a/examples/java/Water_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class Water_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a Water sensor on digital pin D2
-		upm_water.Water water = new upm_water.Water(2);
-
-		while (true) {
-			boolean val = water.isWet();
-			if (val) {
-				System.out.println("Sensor is wet");
-			} else {
-				System.out.println("Sensor is dry");
-			}
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
diff --git a/examples/java/WheelEncoder_Example.java b/examples/java/WheelEncoder_Example.java
deleted file mode 100644
index 6ff46a3..0000000
--- a/examples/java/WheelEncoder_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@gmail.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class WheelEncoder_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a DFRobot Wheel Encoder on digital pin D2
-		upm_wheelencoder.WheelEncoder sensor = new upm_wheelencoder.WheelEncoder(2);
-
-		// set the counter to 0 and start counting
-		sensor.clearCounter();
-		sensor.startCounter();
-
-		while (true) {
-			// output milliseconds passed and current sensor count
-			System.out.println("Millis: " + sensor.getMillis() + "; Count: " + sensor.counter());
-			Thread.sleep(1000);
-		}
-
-		// ! [Interesting]
-	}
-}
-
diff --git a/examples/java/YG1006_Example.java b/examples/java/YG1006_Example.java
deleted file mode 100644
index e5dce83..0000000
--- a/examples/java/YG1006_Example.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-public class YG1006_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a yg1006 flame sensor on digital pin D2
-		upm_yg1006.YG1006 flame = new upm_yg1006.YG1006(2);
-
-		while (true) {
-			boolean val = flame.flameDetected();
-			if (val) {
-				System.out.println("Flame detected");
-			} else {
-				System.out.println("No flame detected");
-			}
-
-			Thread.sleep(1000);
-		}
-		// ! [Interesting]
-	}
-
-}
\ No newline at end of file
diff --git a/examples/java/ZFM20_Example.java b/examples/java/ZFM20_Example.java
deleted file mode 100644
index cbfa4f2..0000000
--- a/examples/java/ZFM20_Example.java
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
- * Author: Stefan Andritoiu <stefan.andritoiu@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//NOT TESTED!!!
-public class ZFM20_Example {
-
-	public static void main(String[] args) throws InterruptedException {
-		// ! [Interesting]
-		// Instantiate a ZFM20 Fingerprint reader on UART 0
-		upm_zfm20.ZFM20 fp = new upm_zfm20.ZFM20(0);
-
-		// make sure port is initialized properly. 57600 baud is the default
-		if (!fp.setupTty()) {
-			System.err.println("Failed to setup tty port parameters");
-			System.exit(-1);
-		}
-
-		// first, set the default password and address
-		fp.setPassword(upm_zfm20.javaupm_zfm20.ZFM20_DEFAULT_PASSWORD);
-		fp.setAddress(upm_zfm20.javaupm_zfm20.ZFM20_DEFAULT_ADDRESS);
-
-		// now verify the password. If this fails, any other commands
-		// will be ignored, so we just bail.
-		if (fp.verifyPassword()) {
-			System.out.println("Password verified.");
-		} else {
-			System.err.println("Password verification failed.");
-			System.exit(-1);
-		}
-
-		// how many valid stored templates (fingerprints) do we have?
-		System.out.println("Total stored templates: " + fp.getNumTemplates());
-
-		// now spin waiting for a fingerprint to successfully image
-		System.out.println("Waiting for finger print...");
-		while (fp.generateImage() == upm_zfm20.ZFM20.ZFM20_ERRORS_T.ERR_NO_FINGER.swigValue());
-
-		// in theory, we have an image
-		System.out.println("Image captured, converting...");
-		short rv = fp.image2Tz(1);
-		if (rv != upm_zfm20.ZFM20.ZFM20_ERRORS_T.ERR_OK.swigValue()) {
-			System.err.println("Image conversion failed with error code " + rv);
-			System.exit(-1);
-		}
-		System.out.println("Image conversion succeeded");
-
-		// we search for a print matching slot 1, where we shored our last
-		// converted fingerprint
-		int[] id = new int[1];
-		int[] score = new int[1];
-		rv = fp.search(1, id, score);
-		if (rv != upm_zfm20.ZFM20.ZFM20_ERRORS_T.ERR_OK.swigValue()) {
-			if (rv == upm_zfm20.ZFM20.ZFM20_ERRORS_T.ERR_FP_NOTFOUND.swigValue()) {
-				System.out.println("Fingerprint not found");
-				System.exit(0);
-			} else {
-				System.err.println("Search failed with error code " + rv);
-				System.exit(-1);
-			}
-		}
-
-		System.out.println("Fingerprint found!");
-		System.out.println("ID: " + id[0] + ", Score: " + score[0]);
-
-		// ! [Interesting]
-	}
-}
\ No newline at end of file
diff --git a/examples/javascript/a110x.js b/examples/javascript/a110x.js
deleted file mode 100644
index 461c141..0000000
--- a/examples/javascript/a110x.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var hallEffectSensor = require('jsupm_a110x');
-
-// Instantiate a Hall Effect magnet sensor on digital pin D2
-var myHallEffectSensor = new hallEffectSensor.A110X(2);
-
-// Check every second for the presence of a magnetic field (south polarity)
-setInterval(function()
-{
-	if (myHallEffectSensor.magnetDetected())
-		console.log("Magnet (south polarity) detected.");
-	else
-		console.log("No magnet detected.");
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/abp.js b/examples/javascript/abp.js
deleted file mode 100644
index 8917fc5..0000000
--- a/examples/javascript/abp.js
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
-* Author: Abhishek Malik <abhishek.malik@intel.com>
-* Copyright (c) 2017 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var abp = require("jsupm_abp");
-
-// Instantiate a Honeywell ABP Pressure Sensor at bus 0
-var abp_sensor = new abp.ABP(0, 0x28);
-
-var myInterval = setInterval(function()
-{
-	abp_sensor.update();
-	console.log("Pressure: " + abp_sensor.getPressure());
-	console.log("Temperature: " + abp_sensor.getTemperature());
-}, 100);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/ad8232.js b/examples/javascript/ad8232.js
deleted file mode 100644
index 24e6b3a..0000000
--- a/examples/javascript/ad8232.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* Author: Jon Trulson <jtrulson@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var ad8232Sensor_lib = require('jsupm_ad8232');
-
-// Instantiate a AD8232 sensor on digital pins 10 (LO+), 11 (LO-)
-// and an analog pin, 0 (OUTPUT)
-var myAd8232Sensor_obj = new ad8232Sensor_lib.AD8232(10, 11, 0);
-
-// Output the raw numbers from the ADC, for plotting elsewhere.
-// A return of 0 indicates a Lead Off (LO) condition.
-// In theory, this data could be fed to software like Processing 
-// (https://www.processing.org/) to plot the data just like an 
-// EKG you would see in a hospital.
-var myInterval = setInterval(function()
-{
-	console.log(myAd8232Sensor_obj.value());
-}, 1);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myAd8232Sensor_obj = null;
-	ad8232Sensor_lib.cleanUp();
-	ad8232Sensor_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/adafruitms1438-stepper.js b/examples/javascript/adafruitms1438-stepper.js
deleted file mode 100644
index 6a1c976..0000000
--- a/examples/javascript/adafruitms1438-stepper.js
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-function exit()
-{
-	console.log("Exiting");
-
-	myMotorShield_obj = null;
-	if (MotorShield_lib)
-	{
-		MotorShield_lib.cleanUp();
-		MotorShield_lib = null;
-	}
-	process.exit(0);
-}
-
-var MotorShield_lib = require('jsupm_adafruitms1438');
-
-/* Import header values */
-var I2CBus = MotorShield_lib.ADAFRUITMS1438_I2C_BUS;
-var I2CAddr = MotorShield_lib.ADAFRUITMS1438_DEFAULT_I2C_ADDR;
-
-var M12motor = MotorShield_lib.AdafruitMS1438.STEPMOTOR_M12;
-var MotorDirCW = MotorShield_lib.AdafruitMS1438.DIR_CW;
-var MotorDirCCW = MotorShield_lib.AdafruitMS1438.DIR_CCW;
-
-
-// Instantiate an Adafruit MS 1438 on I2C bus 0
-var myMotorShield_obj = new MotorShield_lib.AdafruitMS1438(I2CBus, I2CAddr);
-
-
-// Setup for use with a stepper motor connected to the M1 & M2 ports
-
-// disable first, to be safe
-myMotorShield_obj.disableStepper(M12motor);
-
-// configure for a NEMA-17, 200 steps per revolution
-myMotorShield_obj.stepConfig(M12motor, 200);
-
-// set speed at 10 RPM's
-myMotorShield_obj.setStepperSpeed(M12motor, 10);
-myMotorShield_obj.setStepperDirection(M12motor, MotorDirCW);
-
-console.log("Enabling...");
-myMotorShield_obj.enableStepper(M12motor);
-
-console.log("Rotating 1 full revolution at 10 RPM speed.");
-myMotorShield_obj.stepperSteps(M12motor, 200);
-
-console.log("Sleeping for 2 seconds...");
-
-
-setTimeout(function()
-{
-	console.log("Rotating 1/2 revolution in opposite direction at 10 RPM speed.");
-
-	myMotorShield_obj.setStepperDirection(M12motor, MotorDirCCW);
-	myMotorShield_obj.stepperSteps(M12motor, 100);
-
-	console.log("Disabling...");
-	myMotorShield_obj.disableStepper(M12motor);
-	exit();
-}, 2000);
-
-
-process.on('SIGINT', function()
-{
-	exit();
-});
diff --git a/examples/javascript/adafruitms1438.js b/examples/javascript/adafruitms1438.js
deleted file mode 100644
index 01ab2b8..0000000
--- a/examples/javascript/adafruitms1438.js
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-function exit()
-{
-	console.log("Exiting");
-
-	myMotorShield_obj = null;
-	if (MotorShield_lib)
-	{
-		MotorShield_lib.cleanUp();
-		MotorShield_lib = null;
-	}
-	process.exit(0);
-}
-
-var MotorShield_lib = require('jsupm_adafruitms1438');
-
-
-/* Import header values */
-var I2CBus = MotorShield_lib.ADAFRUITMS1438_I2C_BUS;
-var I2CAddr = MotorShield_lib.ADAFRUITMS1438_DEFAULT_I2C_ADDR;
-
-var M3motor = MotorShield_lib.AdafruitMS1438.MOTOR_M3;
-var MotorDirCW = MotorShield_lib.AdafruitMS1438.DIR_CW;
-var MotorDirCCW = MotorShield_lib.AdafruitMS1438.DIR_CCW;
-
-
-// Instantiate an Adafruit MS 1438 on I2C bus 0
-var myMotorShield_obj = new MotorShield_lib.AdafruitMS1438(I2CBus, I2CAddr);
-
-
-// Setup for use with a DC motor connected to the M3 port
-
-// set a PWM period of 50Hz
-myMotorShield_obj.setPWMPeriod(50);
-
-// disable first, to be safe
-myMotorShield_obj.disableMotor(M3motor);
-
-// set speed at 50%
-myMotorShield_obj.setMotorSpeed(M3motor, 50);
-myMotorShield_obj.setMotorDirection(M3motor, MotorDirCW);
-
-process.stdout.write("Spin M3 at half speed for 3 seconds, ");
-console.log("then reverse for 3 seconds.");
-myMotorShield_obj.enableMotor(M3motor);
-
-setTimeout(function()
-{
-	console.log("Reversing M3");
-	myMotorShield_obj.setMotorDirection(M3motor, MotorDirCCW);
-}, 3000);
-
-
-setTimeout(function()
-{
-	console.log("Stopping M3");
-	myMotorShield_obj.disableMotor(M3motor);
-	exit();
-}, 6000);
-
-process.on('SIGINT', function()
-{
-	exit();
-});
diff --git a/examples/javascript/adc121c021.js b/examples/javascript/adc121c021.js
deleted file mode 100644
index acf2f70..0000000
--- a/examples/javascript/adc121c021.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load ADC121C021 module
-var I2C_ADC = require('jsupm_adc121c021');
-// Instantiate an ADC121C021 on I2C bus 0
-var busID = I2C_ADC.ADC121C021_I2C_BUS;
-var I2CAddr = I2C_ADC.ADC121C021_DEFAULT_I2C_ADDR;
-var myI2C_ADC = new I2C_ADC.ADC121C021(busID, I2CAddr);
-
-// get the data every 50 milliseconds
-var myInterval = setInterval(function()
-{
-	var val = myI2C_ADC.value();
-	var voltsVal = myI2C_ADC.valueToVolts(val);
-	console.log("ADC value: " + val + " Volts = " + voltsVal);
-}, 50);
-
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myI2C_ADC = null;
-	I2C_ADC.cleanUp();
-	I2C_ADC = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/adis16448.js b/examples/javascript/adis16448.js
deleted file mode 100644
index 1e83f82..0000000
--- a/examples/javascript/adis16448.js
+++ /dev/null
@@ -1,67 +0,0 @@
-//////////////////////////////////////////////////////////////////////////////////////
-// The MIT License (MIT)
-//
-// Submit Date: 03/09/2015
-// Author: Juan Jose Chong <juanjchong@gmail.com>
-// Copyright (c) 2015 Juan Jose Chong
-//
-//////////////////////////////////////////////////////////////////////////////////////
-// adis16448.js
-//////////////////////////////////////////////////////////////////////////////////////
-//
-// This example code runs on an Intel Edison and uses mraa to acquire data
-// from an ADIS16448. This data is then scaled and printed onto the terminal.
-// 
-// This software has been tested to connect to an ADIS16448 through a level shifter
-// such as the TI TXB0104. The SPI lines (DIN, DOUT, SCLK, /CS) are all wired through
-// the level shifter and the ADIS16448 is also being powered by the Intel Edison.
-//
-// Permission is hereby granted, free of charge, to any person obtaining
-// a copy of this software and associated documentation files (the
-// "Software"), to deal in the Software without restriction, including
-// without limitation the rights to use, copy, modify, merge, publish,
-// distribute, sublicense, and/or sell copies of the Software, and to
-// permit persons to whom the Software is furnished to do so, subject to
-// the following conditions:
-//
-// The above copyright notice and this permission notice shall be
-// included in all copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-//
-//////////////////////////////////////////////////////////////////////////////////////
-
-//Call the ADIS16448 library
-var adis16448 = require('jsupm_adis16448');
-
-//Instantiate SPI and Reset
-var imu = new adis16448.ADIS16448(0,3);
-
-periodicActivity(); //Call the periodicActivity function
-
-function periodicActivity()
-{   
-    //Read & Scale Gyro/Accel Data
-    var xgyro = imu.gyroScale(imu.regRead(0x04));
-    var ygyro = imu.gyroScale(imu.regRead(0x06));
-    var zgyro = imu.gyroScale(imu.regRead(0x08));
-    var xaccl = imu.accelScale(imu.regRead(0x0A)); 
-    var yaccl = imu.accelScale(imu.regRead(0x0C));
-    var zaccl = imu.accelScale(imu.regRead(0x0E));
-    
-    //Display Scaled Data on the Console Log
-    console.log('XGYRO: ' + xgyro);
-    console.log('YGYRO: ' + ygyro);
-    console.log('ZGYRO: ' + zgyro);
-    console.log('XACCL: ' + xaccl);
-    console.log('YACCL: ' + yaccl);
-    console.log('ZACCL: ' + zaccl);
-    console.log(' ');
-    setTimeout(periodicActivity,200); //call the indicated function after 0.2 seconds (200 milliseconds)
-}
\ No newline at end of file
diff --git a/examples/javascript/ads1015.js b/examples/javascript/ads1015.js
deleted file mode 100644
index 9b07fbb..0000000
--- a/examples/javascript/ads1015.js
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-/* This example demonstrates how to use one the ADS1015 ADC on the Grove Joule
- * Shield or the Sparkfun ADC Block for Edison with devices that output a small
- * differential voltage (e.g. geophones, piezoelectric bands or pads,
- * thermocouples).
- */
-var mraa = require('mraa'); // Not used directly but required if jsupm_ads1x15 was installed from NPM
-var upm = require('jsupm_ads1x15');
-var fs = require('fs'); // Values will be written to a file
-var file = "./ads1015.data" // Output filename
-var id = 0; // Sample number
-var ival; // Interval function for sampling
-
-// Initialize and configure the ADS1015
-var ads1015 = new upm.ADS1015(0, 0x48);
-
-// Put the ADC into differential mode for pins A0 and A1
-ads1015.getSample(upm.ADS1X15_MUX_DIFF_0_1);
-
-// Set the gain based on expected VIN range to -/+ 2.048 V
-// Can be adjusted based on application to as low as -/+ 0.256 V, see API
-// documentation for details
-ads1015.setGain(upm.ADS1X15.GAIN_TWO);
-
-// Set the sample rate to 3300 samples per second (max) and turn on continuous
-// sampling
-ads1015.setSPS(upm.ADS1015.SPS_3300);
-ads1015.setContinuous(true);
-
-// Open the output file and start reading data once open
-// Will overwrite file if it already exists
-var stream = fs.createWriteStream(file);
-stream.once('open', function() {
-    ival = setInterval(function() {
-        // Write data pairs of ID + Value for easy plotting
-        stream.write(id + " " + ads1015.getLastSample().toFixed(7) + "\n");
-        id++;
-    }, 1); // Wait 1 ms between reads, (actuall call adds another ~1 ms overhead)
-});
-
-// Stop after 10 seconds and close the file
-setTimeout(function() {
-    clearInterval(ival);
-    stream.end();
-    console.log("Wrote " + id + " samples to file: " + file);
-}, 10000);
-
diff --git a/examples/javascript/ads1115.js b/examples/javascript/ads1115.js
deleted file mode 100644
index 54f5827..0000000
--- a/examples/javascript/ads1115.js
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-/* This example demonstrates how to use one of the ADS1115 ADCs on the
- * DFRobot Joule Shield with devices that output a small differential
- * voltage (e.g. geophones, piezoelectric bands or pads, thermocouples).
- */
-var mraa = require('mraa'); // Not used directly but required if jsupm_ads1x15 was installed from NPM
-var upm = require('jsupm_ads1x15');
-var fs = require('fs'); // Values will be written to a file
-var file = "./ads1115.data" // Output filename
-var id = 0; // Sample number
-var ival; // Interval function for sampling
-
-// There are two ADS1115 chips on the DFRobot Joule Shield on the same I2C bus
-//     - 0x48 gives access to pins A0 - A3
-//     - 0x49 gives access to pins A4 - A7
-var ads1115 = new upm.ADS1115(0, 0x48);
-
-// Configure the ADS1115 for the SM-24 Geophone
-
-// Put the ADC into differential mode for pins A0 and A1,
-// the SM-24 Geophone is connected to these pins
-ads1115.getSample(upm.ADS1X15_MUX_DIFF_0_1);
-
-// Set the gain based on expected VIN range to -/+ 2.048 V
-// Can be adjusted based on application to as low as -/+ 0.256 V, see API
-// documentation for details
-ads1115.setGain(upm.ADS1X15.GAIN_TWO);
-
-// Set the sample rate to 860 samples per second (max) and turn on continuous
-// sampling
-ads1115.setSPS(upm.ADS1115.SPS_860);
-ads1115.setContinuous(true);
-
-// Open the output file and start reading data once open
-// Will overwrite file if it already exists
-var stream = fs.createWriteStream(file);
-stream.once('open', function() {
-    ival = setInterval(function() {
-        // Write data pairs of ID + Value for easy plotting
-        stream.write(id + " " + ads1115.getLastSample().toFixed(7) + "\n");
-        id++;
-    }, 1); // Wait 1 ms between reads, (actuall call adds another ~1 ms overhead)
-});
-
-// Stop after 10 seconds and close the file
-setTimeout(function() {
-    clearInterval(ival);
-    stream.end();
-    console.log("Wrote " + id + " samples to file: " + file);
-}, 10000);
-
diff --git a/examples/javascript/ads1x15.js b/examples/javascript/ads1x15.js
deleted file mode 100644
index c1a2621..0000000
--- a/examples/javascript/ads1x15.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Marc Graham <marc@m2ag.net>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-var mraa = require('mraa');
-var version = mraa.getVersion();
-
-if (version >= 'v0.6.1') {
-    console.log('mraa version (' + version + ') ok');
-}
-else {
-    console.log('mraa version(' + version + ') is old - this code may not work');
-}
-
-var ADS1X15 = require('jsupm_ads1x15');
-var ads1115 = new ADS1X15.ADS1115(1, 0x49); 
-var ads1015 = new ADS1X15.ADS1015(1, 0x48); 
-
-setInterval(function(){
-    console.log(ads1115.getSample()); 
-    console.log(ads1015.getSample()); 
-    console.log("*********************"); 
-}, 1000); 
-
-
diff --git a/examples/javascript/adxl335.js b/examples/javascript/adxl335.js
deleted file mode 100644
index 946f451..0000000
--- a/examples/javascript/adxl335.js
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var analogGyro3Axis = require("jsupm_adxl335");
-
-var g_addnumBool = true;
-var g_cycleNum = 0.0;
-var g_cycleCount = 0;
-
-// Instantiate an ADXL335 accelerometer on analog pins A0, A1, and A2
-var myAnalogGyro3Axis = new analogGyro3Axis.ADXL335(0, 1, 2);
-
-console.log("Please make sure the sensor is completely still.");
-console.log("Sleeping for 2 seconds");
-
-var g_myInterval;
-
-setTimeout(function()
-{
-	console.log("Calibrating...");
-	myAnalogGyro3Axis.calibrate();
-	// Get values from accelerometer every 0.2 seconds
-	g_myInterval = setInterval(runAccelerometer, 200);
-}, 2000);
-
-
-var x = new analogGyro3Axis.new_intPointer();
-var y = new analogGyro3Axis.new_intPointer();
-var z = new analogGyro3Axis.new_intPointer();
-
-var aX = new analogGyro3Axis.new_floatPointer();
-var aY = new analogGyro3Axis.new_floatPointer();
-var aZ = new analogGyro3Axis.new_floatPointer();
-
-var outputStr;
-
-function runAccelerometer()
-{
-	myAnalogGyro3Axis.values(x, y, z);
-	outputStr = "Raw Values: X: " +
-		analogGyro3Axis.intPointer_value(x) +
-		" Y: " + analogGyro3Axis.intPointer_value(y) + 
-		" Z: " + analogGyro3Axis.intPointer_value(z);
-	console.log(outputStr);
-
-	myAnalogGyro3Axis.acceleration(aX, aY, aZ);
-	outputStr = "Acceleration: X: " +
-	analogGyro3Axis.floatPointer_value(aX) + "g\n" +
-	"Acceleration: Y: " +
-	analogGyro3Axis.floatPointer_value(aY) + "g\n" +
-	"Acceleration: Z: " +
-	analogGyro3Axis.floatPointer_value(aZ) + "g";
-	console.log(outputStr);
-
-	console.log(" ");
-}
-
-
-// When exiting: clear interval and print exit message
-process.on('SIGINT', function()
-{
-	clearInterval(g_myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/adxl345.js b/examples/javascript/adxl345.js
deleted file mode 100644
index d03d1f4..0000000
--- a/examples/javascript/adxl345.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load accelerometer
-var adxl345 = require('jsupm_adxl345');
-
-// Instantiate on I2C bus
-var adxl = new adxl345.Adxl345(0);
-
-setInterval(function()
-{
-    adxl.update(); // Update the data
-    var raw = adxl.getRawValues(); // Read raw sensor data
-    var force = adxl.getAcceleration(); // Read acceleration force (g)
-    var rawvalues = raw.getitem(0) + " " + raw.getitem(1) + " " + raw.getitem(2);
-    console.log("Raw Values: " + rawvalues);
-    console.log("ForceX: " + force.getitem(0).toFixed(2) + " g");
-    console.log("ForceY: " + force.getitem(1).toFixed(2) + " g");
-    console.log("ForceZ: " + force.getitem(2).toFixed(2) + " g");
-}, 1000);
diff --git a/examples/javascript/adxrs610.js b/examples/javascript/adxrs610.js
deleted file mode 100644
index 1a8947a..0000000
--- a/examples/javascript/adxrs610.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_adxrs610');
-
-// Instantiate a ADXRS610 sensor on analog pin A0 (dataout), and
-// analog A1 (temp out) with an analog reference voltage of
-// 5.0
-var sensor = new sensorObj.ADXRS610(0, 1, 5.0);
-
-// set a deadband region around the zero point to report 0.0 (optional)
-sensor.setDeadband(0.015);
-
-// Every tenth of a second, sample the ADXRS610 and output it's
-// corresponding temperature and angular velocity 
-
-setInterval(function()
-{
-    console.log("Vel (deg/s): " + sensor.getAngularVelocity());
-    console.log("Temp (C): " + sensor.getTemperature());
-}, 100);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/aeotecdsb09104.js b/examples/javascript/aeotecdsb09104.js
deleted file mode 100644
index 8c84892..0000000
--- a/examples/javascript/aeotecdsb09104.js
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ozw');
-
-/************** Main code **************/
-var defaultDev = "/dev/ttyACM0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-console.log("Using device " + defaultDev);
-
-// Instantiate an Aeotec DSB09104 instance, on device node 12.  You
-// will almost certainly need to change this to reflect your own
-// network.  Use the ozwdump example to see what nodes are
-// available.
-var sensor = new sensorObj.AeotecDSB09104(12);
-
-// The first thing to do is create options, then lock them when done.
-sensor.optionsCreate();
-sensor.optionsLock();
-
-// Next, initialize it.
-console.log("Initializing, this may take awhile depending on your ZWave network");
-
-sensor.init(defaultDev);
-console.log("Initialization complete");
-
-console.log("Querying data...");
-
-setInterval(function()
-{
-    sensor.update();
-
-    console.log("Watts, Channel 1: "
-                + sensor.getWattsC1()
-                + " W");
-
-    console.log("Watts, Channel 2: "
-                + sensor.getWattsC2()
-                + " W");
-
-    console.log("Watts, Channel 3: "
-                + sensor.getWattsC3()
-                + " W");
-
-    console.log("Energy, Channel 1: "
-                + sensor.getEnergyC1()
-                + " kWh");
-
-    console.log("Energy, Channel 2: "
-                + sensor.getEnergyC2()
-                + " kWh");
-
-    console.log("Energy, Channel 3: "
-                + sensor.getEnergyC3()
-                + " kWh");
-
-    console.log("Battery Level: "
-                + sensor.getBatteryLevel()
-                + "%");
-
-    console.log();
-}, 3000);
-
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/aeotecdw2e.js b/examples/javascript/aeotecdw2e.js
deleted file mode 100644
index ce92ad1..0000000
--- a/examples/javascript/aeotecdw2e.js
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ozw');
-
-/************** Main code **************/
-var defaultDev = "/dev/ttyACM0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-console.log("Using device " + defaultDev);
-
-// Instantiate an Aeotec Door/Window 2nd Edition sensor instance, on
-// device node 10.  You will almost certainly need to change this to
-// reflect your own network.  Use the ozwdump example to see what
-// nodes are available.
-var sensor = new sensorObj.AeotecDW2E(10);
-
-// The first thing to do is create options, then lock them when done.
-sensor.optionsCreate();
-sensor.optionsLock();
-
-// Next, initialize it.
-console.log("Initializing, this may take awhile depending on your ZWave network");
-
-sensor.init(defaultDev);
-console.log("Initialization complete");
-
-console.log("Querying data...");
-
-setInterval(function()
-{
-    if (sensor.isDeviceAvailable())
-    {
-        console.log("Alarm status: "
-                    + sensor.isAlarmTripped());
-
-        console.log("Tamper Switch status: "
-                    + sensor.isTamperTripped());
-
-        console.log("Battery Level: "
-                    + sensor.getBatteryLevel()
-                    + "%");
-
-        console.log();
-    }
-    else
-    {
-        console.log("Device has not yet responded to probe.");
-        console.log("Try waking it, or wait until it wakes itself if "
-                    + "configured to do so.");
-
-        console.log();
-    }
-
-}, 1000);
-
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/aeotecsdg2.js b/examples/javascript/aeotecsdg2.js
deleted file mode 100644
index e364544..0000000
--- a/examples/javascript/aeotecsdg2.js
+++ /dev/null
@@ -1,116 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ozw');
-
-function sleepFor(millis)
-{
-    var now = new Date().getTime();
-    while(new Date().getTime() < now + millis)
-    {
-        /* do nothing */
-    }
-}
-
-/************** Main code **************/
-var defaultDev = "/dev/ttyACM0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-console.log("Using device " + defaultDev);
-
-// Instantiate an Aeotec Smart Dimmer Gen2 instance, on device node
-// 9.  You will almost certainly need to change this to reflect your
-// own network.  Use the ozwdump example to see what nodes are
-// available.
-var sensor = new sensorObj.AeotecSDG2(9);
-
-// The first thing to do is create options, then lock them when done.
-sensor.optionsCreate();
-sensor.optionsLock();
-
-// Next, initialize it.
-console.log("Initializing, this may take awhile depending on your ZWave network");
-
-sensor.init(defaultDev);
-console.log("Initialization complete");
-
-// turn light on
-console.log("Turning switch on, then sleeping for 5 secs");
-sensor.on();
-sleepFor(5000);
-
-console.log("Querying data...");
-var dim = false;
-setInterval(function()
-{
-    // put on a light show...
-    if (dim)
-        sensor.setLevel(25);
-    else
-        sensor.on();
-
-    dim = !dim;
-
-    sensor.update();
-
-    console.log("Current Level: "
-                + sensor.getLevel());
-
-    console.log("Volts: "
-                + sensor.getVolts()
-                + " volts");
-
-    console.log("Energy Consumption: "
-                + sensor.getEnergy()
-                + " kWh");
-
-    console.log("Watts: "
-                + sensor.getWatts());
-
-    console.log("Current: "
-                + sensor.getCurrent()
-                + " amps");
-
-    console.log();
-}, 5000);
-
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    console.log("Turning switch off and sleeping for 5 seconds...");
-    sensor.off();
-    sleepFor(5000);
-
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/aeotecss6.js b/examples/javascript/aeotecss6.js
deleted file mode 100644
index 2463f3f..0000000
--- a/examples/javascript/aeotecss6.js
+++ /dev/null
@@ -1,107 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ozw');
-
-function sleepFor(millis)
-{
-    var now = new Date().getTime();
-    while(new Date().getTime() < now + millis)
-    {
-        /* do nothing */
-    }
-}
-
-/************** Main code **************/
-var defaultDev = "/dev/ttyACM0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-console.log("Using device " + defaultDev);
-
-// Instantiate an Aeotec Smart Switch 6 instance, on device node 11.
-// You will almost certainly need to change this to reflect your own
-// network.  Use the ozwdump example to see what nodes are available.
-var sensor = new sensorObj.AeotecSS6(11);
-
-// The first thing to do is create options, then lock them when done.
-sensor.optionsCreate();
-sensor.optionsLock();
-
-// Next, initialize it.
-console.log("Initializing, this may take awhile depending on your ZWave network");
-
-sensor.init(defaultDev);
-console.log("Initialization complete");
-
-// turn light on
-console.log("Turning switch on, then sleeping for 5 secs");
-sensor.on();
-sleepFor(5000);
-
-console.log("Querying data...");
-
-setInterval(function()
-{
-    sensor.update();
-
-    console.log("Switch status: "
-                + sensor.isOn());
-
-    console.log("Volts: "
-                + sensor.getVolts()
-                + " volts");
-
-    console.log("Energy Consumption: "
-                + sensor.getEnergy()
-                + " kWh");
-
-    console.log("Watts: "
-                + sensor.getWatts());
-
-    console.log("Current: "
-                + sensor.getCurrent()
-                + " amps");
-
-    console.log();
-}, 3000);
-
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    console.log("Turning switch off and sleeping for 5 seconds...");
-    sensor.off();
-    sleepFor(5000);
-
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/ak8975.js b/examples/javascript/ak8975.js
deleted file mode 100644
index b1971ec..0000000
--- a/examples/javascript/ak8975.js
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_mpu9150');
-
-// Instantiate an AK8975 on default I2C bus and address
-var sensor = new sensorObj.AK8975();
-
-// Initialize the device with default values
-sensor.init();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// Output data every half second until interrupted
-setInterval(function()
-{
-    sensor.update();
-    
-    sensor.getMagnetometer(x, y, z);
-    console.log("Magnetometer:  MX: " + sensorObj.floatp_value(x) + 
-                " MY: " + sensorObj.floatp_value(y) + 
-                " MZ: " + sensorObj.floatp_value(z));
-
-    console.log();
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/apa102.js b/examples/javascript/apa102.js
deleted file mode 100644
index 0227b67..0000000
--- a/examples/javascript/apa102.js
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
-* Author:  Yannick Adam <yannick.adam@gmail.com>
-* Copyright (c) 2016 Yannick Adam
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var lib = require('jsupm_apa102');
-
-// Instantiate a strip of 30 LEDs on SPI Bus 0
-var ledStrip = new lib.APA102(30, 0);
-
-// Set all LEDs to blue
-ledStrip.setAllLeds(31, 0, 0, 255);
-
-// Set a mid-section to red
-ledStrip.setLeds(10,20, 31, 255, 0, 0);
-
-// Set a single led to green
-ledStrip.setLed(15, 31, 0, 255, 0);
-
-
-// Exit
-ledStrip = null;
-process.exit(0);
diff --git a/examples/javascript/apds9002.js b/examples/javascript/apds9002.js
deleted file mode 100644
index 4cc4e11..0000000
--- a/examples/javascript/apds9002.js
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load Grove Luminance sensor module
-var luminanceSensor_lib = require('jsupm_apds9002');
-
-// Instantiate a Grove Luminance sensor on analog pin A0
-var myLuminanceSensor_obj = new luminanceSensor_lib.APDS9002(0);
-
-var myInterval = setInterval(function()
-{
-	console.log("Luminance value is " + myLuminanceSensor_obj.value());
-}, 1000);
-
-// On exit: clear interval and memory, print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myLuminanceSensor_obj = null;
-	luminanceSensor_lib.cleanUp();
-	luminanceSensor_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/at42qt1070.js b/examples/javascript/at42qt1070.js
deleted file mode 100644
index ef9d647..0000000
--- a/examples/javascript/at42qt1070.js
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-/* functions */
-function printButtons(touchObj)
-{
-	var buttonPressed = false;
-	var buttons = touchObj.getButtons();
-
-	process.stdout.write("Buttons Pressed: ");
-	for (var i=0; i<7; i++)
-	{
-		if (buttons & (1 << i))
-		{
-			process.stdout.write(i + " ");
-			buttonPressed = true;
-		}
-	}
-
-	if (!buttonPressed)
-		process.stdout.write("None");
-
-	console.log(" ");
-
-	if (touchObj.isCalibrating())
-		console.log("Calibration is occurring.");
-
-	if (touchObj.isOverflowed())
-		console.log("Overflow was detected.");
-}
-
-
-/* Global code that runs on startup */
-
-var touchSensor_lib = require('jsupm_at42qt1070');
-
-var I2C_BUS = touchSensor_lib.AT42QT1070_I2C_BUS;
-var DEFAULT_I2C_ADDR = touchSensor_lib.AT42QT1070_DEFAULT_I2C_ADDR;
-// Instantiate an AT42QT1070 on I2C bus 0
-var mytouchSensor_obj = new touchSensor_lib.AT42QT1070(I2C_BUS,
-                                               DEFAULT_I2C_ADDR);
-
-var myInterval = setInterval(function()
-{
-	mytouchSensor_obj.updateState();
-	printButtons(mytouchSensor_obj);
-}, 100);
-
-// Print message when exiting and clear interval/memory
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	mytouchSensor_obj = null;
-	touchSensor_lib.cleanUp();
-	touchSensor_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/bh1749.js b/examples/javascript/bh1749.js
deleted file mode 100755
index aa0659d..0000000
--- a/examples/javascript/bh1749.js
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var bh1749 = require("jsupm_bh1749");
-
-var bh1749_sensor = new bh1749.BH1749();
-
-bh1749_sensor.SensorInit(
-	bh1749.INT_JUDGE_1,
-	bh1749.MEAS_240MS,
-	bh1749.RGB_GAIN_1X,
-	bh1749.IR_GAIN_1X,
-	bh1749.RED);
-bh1749_sensor.SetThresholdHigh(511);
-bh1749_sensor.Enable();
-
-var waitTime = bh1749_sensor.GetMeasurementTime();
-var counter = 10;
-console.log("Color readings: ");
-var interval = setInterval(function() {
-	data = bh1749_sensor.GetMeasurements();
-	console.log(
-		"R: " + data.get(0) + ", G: " + data.get(1) + ", B: " + data.get(2) +
-		", IR: " + data.get(3) + ", G2: " + data.get(4)
-	);
-	counter--;
-	if (counter == 0) {
-		clearInterval(interval);
-	}
-}, waitTime);
-
-process.on("SIGINT", function() {
-	clearInterval(interval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/bh1750.js b/examples/javascript/bh1750.js
deleted file mode 100644
index 483eee6..0000000
--- a/examples/javascript/bh1750.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/*jslint node:true, vars:true, bitwise:true, unparam:true */
-/*jshint unused:true */
-
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bh1750');
-
-// Instantiate a BH1750 sensor using defaults (I2C bus (0), using
-// the default I2C address (0x23), and setting the mode to highest
-// resolution, lowest power mode).
-var sensor = new sensorObj.BH1750();
-
-// Every second, sample the BH1750 and output the measured lux value
-
-setInterval(function()
-{
-    console.log("Detected Light Level (lux): " + sensor.getLux());
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/bh1792.js b/examples/javascript/bh1792.js
deleted file mode 100755
index 39ad21b..0000000
--- a/examples/javascript/bh1792.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var bh1792 = require("/usr/include/nodejs/lib/node_modules/jsupm_bh1792");
-
-var bh1792_sensor = new bh1792.BH1792();
-
-bh1792_sensor.SoftReset();
-bh1792_sensor.EnableSyncMode(256, 32);
-bh1792_sensor.StartMeasurement();
-
-var waitTime = bh1792_sensor.GetMeasurementTimeMS();
-var counter = 10;
-console.log("Heart beat sensor readings: ");
-var interval = setInterval(function() {
-	data = bh1792_sensor.GetGreenData();
-	console.log("off: " + data.get(0) + ", on: " + data.get(1) +
-				", timestamp: " + Date.now() + " msec");
-	counter--;
-	if (counter == 0) {
-		clearInterval(interval);
-	}
-}, waitTime);
-
-process.on("SIGINT", function() {
-	clearInterval(interval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/biss0001.js b/examples/javascript/biss0001.js
deleted file mode 100644
index 6912fb5..0000000
--- a/examples/javascript/biss0001.js
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-//Load Grove Motion module
-var grove_motion = require('jsupm_biss0001');
-// Instantiate a Grove Motion sensor on GPIO pin D2
-var myMotionObj = new grove_motion.BISS0001(2);
-setInterval(function()
-{
-	if (myMotionObj.value())
-		console.log("Detecting moving object");
-	else
-		console.log("No moving objects detected");
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/bma220.js b/examples/javascript/bma220.js
deleted file mode 100644
index 2102247..0000000
--- a/examples/javascript/bma220.js
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_bma220');
-
-// Instantiate an BMA220 using default parameters (bus 0, addr 0x0a)
-var sensor = new sensorObj.BMA220();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// Output data every half second until interrupted
-setInterval(function()
-{
-    sensor.update();
-    
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer: AX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/bma250e.js b/examples/javascript/bma250e.js
deleted file mode 100644
index f489875..0000000
--- a/examples/javascript/bma250e.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bma250e');
-
-// Instantiate a BMA250E instance using default i2c bus and address
-var sensor = new sensorObj.BMA250E();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// BMA250E(0, -1, 10);
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getAccelerometer();
-    console.log("Accelerometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " g");
-
-    // we show both C and F for temperature
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmc150.js b/examples/javascript/bmc150.js
deleted file mode 100644
index 17ce318..0000000
--- a/examples/javascript/bmc150.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bmx055');
-
-// Instantiate a BMC150 instance using default i2c bus and address
-var sensor = new sensorObj.BMC150();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z)
-                + " g");
-
-    sensor.getMagnetometer(x, y, z);
-    console.log("Magnetometer x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z)
-                + " uT");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bme280.js b/examples/javascript/bme280.js
deleted file mode 100644
index b34c91f..0000000
--- a/examples/javascript/bme280.js
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bmp280');
-
-// Instantiate a BME280 instance using default i2c bus and address
-var sensor = new sensorObj.BME280();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// BME280(0, -1, 10);
-
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log("Pressure: "
-                + sensor.getPressure()
-                + " Pa");
-
-    console.log("Computed Altitude: "
-                + sensor.getAltitude()
-                + " m");
-
-    console.log("Humidity: "
-                + sensor.getHumidity()
-                + " %RH");
-
-    console.log();
-
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmg160.js b/examples/javascript/bmg160.js
deleted file mode 100644
index f31f5f7..0000000
--- a/examples/javascript/bmg160.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bmg160');
-
-// Instantiate a BMG160 instance using default i2c bus and address
-var sensor = new sensorObj.BMG160();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// BMG160(0, -1, 10);
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var gyroData = sensor.getGyroscope();
-    console.log("Gyroscope x: "
-                + gyroData.get(0)
-                + " y: " + gyroData.get(1)
-                + " z: " + gyroData.get(2)
-                + " degrees/s");
-
-    // we show both C and F for temperature
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmi055.js b/examples/javascript/bmi055.js
deleted file mode 100644
index b30ac04..0000000
--- a/examples/javascript/bmi055.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bmx055');
-
-// Instantiate a BMI055 instance using default i2c bus and address
-var sensor = new sensorObj.BMI055();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z)
-                + " g");
-
-    sensor.getGyroscope(x, y, z);
-    console.log("Gyroscope x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z)
-                + " degrees/s");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmi160.js b/examples/javascript/bmi160.js
deleted file mode 100644
index ca70a20..0000000
--- a/examples/javascript/bmi160.js
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_bmi160');
-
-// Instantiate a BMI160 instance using default i2c bus and address
-var sensor = new sensorObj.BMI160();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// Output data every half second until interrupted
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer: AX: " + sensorObj.floatp_value(x) +
-                " AY: " + sensorObj.floatp_value(y) +
-                " AZ: " + sensorObj.floatp_value(z));
-
-    sensor.getGyroscope(x, y, z);
-    console.log("Gyroscope:     GX: " + sensorObj.floatp_value(x) +
-                " AY: " + sensorObj.floatp_value(y) +
-                " AZ: " + sensorObj.floatp_value(z));
-
-    sensor.getMagnetometer(x, y, z);
-    console.log("Magnetometer:  MX: " + sensorObj.floatp_value(x) +
-                " MY: " + sensorObj.floatp_value(y) +
-                " MZ: " + sensorObj.floatp_value(z));
-
-    console.log();
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmm150.js b/examples/javascript/bmm150.js
deleted file mode 100644
index 86f309b..0000000
--- a/examples/javascript/bmm150.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bmm150');
-
-// Instantiate a BMM150 instance using default i2c bus and address
-var sensor = new sensorObj.BMM150();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// BMM150(0, -1, 10);
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getMagnetometer();
-    console.log("Magnetometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " uT");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmp280.js b/examples/javascript/bmp280.js
deleted file mode 100644
index 3feba9c..0000000
--- a/examples/javascript/bmp280.js
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bmp280');
-
-// Instantiate a BMP280 instance using default i2c bus and address
-var sensor = new sensorObj.BMP280();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// BMP280(0, -1, 10);
-
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log("Pressure: "
-                + sensor.getPressure()
-                + " Pa");
-
-    console.log("Computed Altitude: "
-                + sensor.getAltitude()
-                + " m");
-
-    console.log();
-
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmpx8x.js b/examples/javascript/bmpx8x.js
deleted file mode 100644
index d4101b8..0000000
--- a/examples/javascript/bmpx8x.js
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Author: Jon Trulson <jtrulson@ics.com>
-* Copyright (c) 2014-2017 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var sensorObj = require('jsupm_bmpx8x');
-
-// Instantiate a BMPX8X sensor on I2C using defaults.
-var sensor = new sensorObj.BMPX8X();
-
-// Print the pressure, altitude, sea level, and
-// temperature values every 0.5 seconds
-setInterval(function()
-{
-    sensor.update();
-
-    console.log("Pressure: "
-                + sensor.getPressure()
-                + " Pa, Temperature: "
-                + sensor.getTemperature()
-                + " C, Altitude: "
-                + sensor.getAltitude()
-                + " m, Sea level: "
-                + sensor.getSealevelPressure()
-                + " Pa");
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bmx055.js b/examples/javascript/bmx055.js
deleted file mode 100644
index 80a0c96..0000000
--- a/examples/javascript/bmx055.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_bmx055');
-
-// Instantiate a BMX055 instance using default i2c bus and address
-var sensor = new sensorObj.BMX055();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z)
-                + " g");
-
-    sensor.getGyroscope(x, y, z);
-    console.log("Gyroscope x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z)
-                + " degrees/s");
-
-    sensor.getMagnetometer(x, y, z);
-    console.log("Magnetometer x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z)
-                + " uT");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/bno055.js b/examples/javascript/bno055.js
deleted file mode 100644
index 3f868d1..0000000
--- a/examples/javascript/bno055.js
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_bno055');
-
-// Instantiate an BNO055 using default parameters (bus 0, addr
-// 0x28).  The default running mode is NDOF absolute orientation
-// mode.
-var sensor = new sensorObj.BNO055();
-
-console.log("First we need to calibrate.  4 numbers will be output every");
-console.log("second for each sensor.  0 means uncalibrated, and 3 means");
-console.log("fully calibrated.");
-console.log("See the UPM documentation on this sensor for instructions on");
-console.log("what actions are required to calibrate.");
-console.log("");
-
-// do the calibration...
-var calInterval = setInterval(function()
-{
-    if (sensor.isFullyCalibrated())
-    {
-        clearInterval(calInterval);
-        console.log("");
-        console.log("Calibration complete.");
-        console.log("");
-
-        setInterval(outputData, 250)
-    }
-    else
-    {
-        var intData = sensor.getCalibrationStatus();
-        console.log("Magnetometer: " + intData.get(0) +
-                    " Accelerometer: " + intData.get(1) +
-                    " Gyroscope: " + intData.get(2) +
-                    " System: " + intData.get(3));
-    }
-
-}, 1000);
-
-
-// now output various fusion data every 250 milliseconds
-function outputData()
-{
-    sensor.update();
-
-    var floatData = sensor.getEulerAngles();
-    console.log("Euler: Heading: " + floatData.get(0)
-                + " Roll: " + floatData.get(1)
-                + " Pitch: " + floatData.get(2)
-                + " degrees");
-
-    floatData = sensor.getQuaternions();
-    console.log("Quaternion: W: " + floatData.get(0)
-                + " X:" + floatData.get(1)
-                + " Y: " + floatData.get(2)
-                + " Z: " + floatData.get(3));
-
-    floatData = sensor.getLinearAcceleration();
-    console.log("Linear Acceleration: X: " + floatData.get(0)
-                + " Y: " + floatData.get(1)
-                + " Z: " + floatData.get(2)
-                + " m/s^2");
-
-    floatData = sensor.getGravityVectors();
-    console.log("Gravity Vector: X: " + floatData.get(0)
-                + " Y: " + floatData.get(1)
-                + " Z: " + floatData.get(2)
-                + " m/s^2");
-
-    console.log("");
-};
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/button.js b/examples/javascript/button.js
deleted file mode 100644
index f0e8ad6..0000000
--- a/examples/javascript/button.js
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load UPM module
-var upm = require('jsupm_button');
-
-// Create the button object using GPIO pin 0
-var button = new upm.Button(0);
-
-// Read the input and print, waiting one second between readings
-function readButtonValue() {
-    console.log(button.name() + " value is " + button.value());
-}
-setInterval(readButtonValue, 1000);
diff --git a/examples/javascript/buzzer.js b/examples/javascript/buzzer.js
deleted file mode 100644
index 6f20914..0000000
--- a/examples/javascript/buzzer.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upmBuzzer = require("jsupm_buzzer");
-// Initialize on GPIO 5
-var myBuzzer = new upmBuzzer.Buzzer(5);
-var chords = [];
-chords.push(upmBuzzer.BUZZER_DO);
-chords.push(upmBuzzer.BUZZER_RE);
-chords.push(upmBuzzer.BUZZER_MI);
-chords.push(upmBuzzer.BUZZER_FA);
-chords.push(upmBuzzer.BUZZER_SOL);
-chords.push(upmBuzzer.BUZZER_LA);
-chords.push(upmBuzzer.BUZZER_SI);
-var chordIndex = 0;
-
-// Print sensor name
-console.log(myBuzzer.name());
-
-function melody()
-{
-    if (chords.length != 0)
-    {
-        //Play sound for one half second
-        console.log( myBuzzer.playSound(chords[chordIndex], 500000) );
-        chordIndex++;
-        //Reset the sound to start from the beginning. 
-        if (chordIndex > chords.length - 1)
-			chordIndex = 0;
-    }
-}
-setInterval(melody, 100);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/cjq4435.js b/examples/javascript/cjq4435.js
deleted file mode 100644
index 0d92879..0000000
--- a/examples/javascript/cjq4435.js
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var MOSFETsensor = require("jsupm_cjq4435");
-
-var g_addnumBool = true;
-var g_cycleNum = 0.0;
-var g_cycleCount = 0;
-
-// Instantiate a CJQ4435 MOSFET on a PWM capable digital pin D3
-var myMOSFETsensor = new MOSFETsensor.CJQ4435(3);
-
-myMOSFETsensor.setPeriodMS(10);
-myMOSFETsensor.enable(true);
-
-// A note on timing:
-//	In the C++ example, the system sleeps 11 times for 100 milliseconds
-//	between each duty cycle. After reaching the last point of the cycle,
-//	the system sleeps again for 1 second.
-//	The sleeps are cumulative, so the system has slept for 2.1 seconds
-//	sum total for each cycle.
-//	setInterval and setTimeout make asynchronous function calls;
-//	they aren't cumulative.
-//	In order to approximate the behavior of the C++ example, we need
-//	to call each iteration 2.1 seconds apart instead of 1 second apart.
-
-var myInterval = setInterval(function()
-{
-	setDutyCycle();
-}, (1000 + (11*100)) );
-
-
-// We start with a duty cycle of 0.0 (off) and increment to 1.0 (on)
-// Then we take it back down,
-// starting with a duty cycle of 1.0 (on) and decrement to 0.0 (off)
-function setDutyCycle()
-{
-	myMOSFETsensor.setDutyCycle(g_cycleNum);
-	if (g_addnumBool)
-		g_cycleNum += 0.1;
-	else
-		g_cycleNum -= 0.1;
-	g_cycleCount++;
-	if (g_cycleCount > 10)
-	{
-		g_addnumBool = !g_addnumBool;
-		g_cycleCount = 0;
-	}
-	else
-		setTimeout(setDutyCycle, 100);
-}
-
-
-// When exiting: clear interval and print exit message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myMOSFETsensor = null;
-	MOSFETsensor.cleanUp();
-	MOSFETsensor = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/collision.js b/examples/javascript/collision.js
deleted file mode 100644
index 6607bf1..0000000
--- a/examples/javascript/collision.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var collision_lib = require("jsupm_collision");
-
-// The was tested with the Collision Sensor
-// Instantiate a Collision on digital pin D2
-var collision_obj = new collision_lib.Collision(2);
-
-var collisionState = false;
-console.log("No collision");
-
-// Having an infinate loop prevents nodeJS from catching Cntl-C
-// We need to catch Cntl-C to clean up memory
-// Instead, we check the collision sensor every millisecond
-var myInterval = setInterval(function()
-{
-	if (collision_obj.isColliding() && !collisionState)
-	{
-		console.log("Collision!");
-		collisionState = true;
-	}
-	else if (!collision_obj.isColliding() && collisionState)
-	{
-		console.log("No collision");
-		collisionState = false;
-	}
-}, 1);
-
-// When exiting: clear interval, clean up memory, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	collision_obj = null;
-	collision_lib.cleanUp();
-	collision_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/curieimu.js b/examples/javascript/curieimu.js
deleted file mode 100644
index dd4c45b..0000000
--- a/examples/javascript/curieimu.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-* Author: Ron Evans (@deadprogram)
-* Copyright (c) 2016 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var mraa = require('mraa');
-console.log('MRAA Version: ' + mraa.getVersion());
-
-// open connection to Firmata
-mraa.addSubplatform(mraa.GENERIC_FIRMATA, "/dev/ttyACM0");
-
-var curieImu = require('jsupm_curieimu');
-var myCurie = new curieImu.CurieImu();
-
-var outputStr;
-var myInterval = setInterval(function()
-{
-	myCurie.updateAccel();
-	outputStr = "accel: x " + myCurie.getAccelX()
-				+ " - y " + myCurie.getAccelY()
-				+ " - z " + myCurie.getAccelZ();
-	console.log(outputStr);
-}, 500);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/cwlsxxa.js b/examples/javascript/cwlsxxa.js
deleted file mode 100644
index 6e44ee1..0000000
--- a/examples/javascript/cwlsxxa.js
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_cwlsxxa');
-
-
-/************** Main code **************/
-
-console.log("Initializing...");
-
-// Instantiate an CWLSXXA instance, using A0 for CO2, A1 for
-// humidity and A2 for temperature
-var sensor = new sensorObj.CWLSXXA(0, 1, 2);
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-
-    console.log("Humidity:", sensor.getHumidity(), "%");
-
-    console.log("CO2:", sensor.getCO2(), "ppm");
-
-    console.log("");
-
-}, 1000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/dfrec.js b/examples/javascript/dfrec.js
deleted file mode 100644
index cb2993f..0000000
--- a/examples/javascript/dfrec.js
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_dfrec');
-
-// Instantiate a DFRobot EC sensor on analog pin A0, with a ds18b20
-// temperature sensor connected to UART 0, and a device index (for
-// the ds1820b uart bus) of 0, and an analog reference voltage of
-// 5.0.
-var sensor = new sensorObj.DFREC(0, 0, 0, 5.0);
-
-// Every 2 seconds, update and print values
-setInterval(function()
-{
-    sensor.update();
-
-    console.log("EC = "
-                + sensor.getEC()
-                + " ms/cm");
-    console.log("Volts = "
-                + sensor.getVolts()
-                + ", Temperature = "
-                + sensor.getTemperature()
-                + " C");
-
-    console.log();
-
-}, 2000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/dfrorp.js b/examples/javascript/dfrorp.js
deleted file mode 100644
index d24dacf..0000000
--- a/examples/javascript/dfrorp.js
+++ /dev/null
@@ -1,70 +0,0 @@
-/*jslint node:true, vars:true, bitwise:true, unparam:true */
-/*jshint unused:true */
-
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_dfrorp');
-
-// Instantiate a DFRobot ORP sensor on analog pin A0 with an analog
-// reference voltage of 5.0.
-var sensor = new sensorObj.DFRORP(0, 5.0);
-
-// To calibrate:
-//
-// Disconnect the sensor probe (but leave the sensor interface board
-// connected).  Then run one of the examples while holding down the
-// 'calibrate' button on the device.  Read the ORP value reported
-// (it should be fairly small).
-//
-// This value is what you should supply to setCalibrationOffset().
-// Then reconnect the probe to the interface board and you should be
-// ready to go.
-//
-// DO NOT press the calibrate button on the interface board while
-// the probe is attached or you can permanently damage the probe.
-sensor.setCalibrationOffset(0.97);
-
-// Every second, update and print values
-setInterval(function()
-{
-    sensor.update();
-
-    console.log("ORP: "
-                + sensor.getORP()
-                + " mV");
-
-    console.log();
-
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/dfrph.js b/examples/javascript/dfrph.js
deleted file mode 100644
index c1c3de8..0000000
--- a/examples/javascript/dfrph.js
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_dfrph');
-
-// Instantiate a DFRPH sensor on analog pin A0, with an analog
-// reference voltage of 5.0
-var sensor = new sensorObj.DFRPH(0, 5.0);
-
-
-// After calibration, set the offset (based on calibration with a pH
-// 7.0 buffer solution).  See the UPM sensor documentation for
-// calibrations instructions.
-sensor.setOffset(0.065);
-
-// Every second, sample the pH and output it's corresponding
-// analog voltage.
-
-setInterval(function()
-{
-    console.log("Detected volts: " + sensor.volts());
-    console.log("pH value: " + sensor.pH());
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/ds1307.js b/examples/javascript/ds1307.js
deleted file mode 100644
index affa816..0000000
--- a/examples/javascript/ds1307.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load RTC Clock module for Grove - RTC clock
-var ds1307 = require('jsupm_ds1307');
-// load this on i2c bus 0
-var myRTCClockObj = new ds1307.DS1307(0);
-
-// always do this first
-console.log("Loading the current time... ");
-
-var result = myRTCClockObj.loadTime();
-if (!result)
-{
-	console.log("myRTCClockObj.loadTime() failed.");
-	process.exit(1);
-}
-
-printTime(myRTCClockObj);
-
-// set the year as an example
-console.log("setting the year to 50");
-myRTCClockObj.year = 50;
-myRTCClockObj.setTime();
-
-// reload the time and print it
-myRTCClockObj.loadTime();
-printTime(myRTCClockObj);
-
-function printTime(RTCObj)
-{
-	var timeStr = "The time is: " + 
-        RTCObj.month + "/" + RTCObj.dayOfMonth + "/" + RTCObj.year + " " +
-        RTCObj.hours + ":" + RTCObj.minutes + ":" + RTCObj.seconds;
-
-	if (RTCObj.amPmMode)
-		timeStr += (RTCObj.pm ? " PM " : " AM ");
-
-	console.log(timeStr);
-
-	console.log("Clock is in " + 
-                (RTCObj.amPmMode ? "AM/PM mode" : "24hr mode"));
-}
-
diff --git a/examples/javascript/ds18b20.js b/examples/javascript/ds18b20.js
deleted file mode 100644
index 93f510a..0000000
--- a/examples/javascript/ds18b20.js
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ds18b20');
-
-
-/************** Main code **************/
-
-console.log("Initializing...");
-
-// Instantiate an DS18B20 instance using the default values (uart 0)
-var sensor = new sensorObj.DS18B20(0);
-
-console.log("Found", sensor.devicesFound(), "device(s)");
-console.log("");
-
-if (!sensor.devicesFound())
-{
-    process.exit(1);
-}
-
-// update and print available values every 2 seconds
-setInterval(function()
-{
-    // update our values for all of the detected sensors
-    sensor.update(-1);
-
-    // we show both C and F for temperature for the sensors
-    for (var i=0; i<sensor.devicesFound(); i++)
-    {
-        console.log("Device:", i, "Temperature:", sensor.getTemperature(i),
-                    "C /", sensor.getTemperature(i, true), "F");
-    }
-
-    console.log();
-}, 2000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/ds2413.js b/examples/javascript/ds2413.js
deleted file mode 100644
index 48b7902..0000000
--- a/examples/javascript/ds2413.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ds2413');
-
-
-/************** Main code **************/
-// Instantiate a DS2413 Module on a Dallas 1-wire bus connected to UART 0
-var sensor = new sensorObj.DS2413(0);
-
-// find all of the DS2413 devices present on the bus
-sensor.init();
-
-// how many devices were found?
-console.log("Found", sensor.devicesFound(), "device(s)");
-
-// read the gpio and latch values from the first device
-// the lower 4 bits are of the form:
-// <gpioB latch> <gpioB value> <gpioA latch> <gpioA value>
-console.log("GPIO device 0 values:", sensor.readGpios(0));
-
-// set the gpio latch values of the first device
-console.log("Setting GPIO latches to on");;
-sensor.writeGpios(0, 0x03);
-
-sensor = null;
-sensorObj.cleanUp();
-sensorObj = null;
-console.log("Exiting...");
-process.exit(0);
diff --git a/examples/javascript/e50hx.js b/examples/javascript/e50hx.js
deleted file mode 100644
index 68fced0..0000000
--- a/examples/javascript/e50hx.js
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_e50hx');
-
-
-/************** Main code **************/
-
-// You will need to edit this example to conform to your site and your
-// devices, specifically the Device Object Instance ID passed to the
-// constructor, and the arguments to initMaster() that are
-// appropriate for your BACnet network.
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device " + defaultDev);
-console.log("Initializing...");
-
-// Instantiate an E50HX object for an E50HX device that has 1075425
-// as it's unique Device Object Instance ID.  NOTE: You will
-// certainly want to change this to the correct value for your
-// device(s).
-var sensor = new sensorObj.E50HX(1075425);
-
-// Initialize our BACnet master, if it has not already been
-// initialized, with the device and baudrate, choosing 1000001 as
-// our unique Device Object Instance ID, 2 as our MAC address and
-// using default values for maxMaster and maxInfoFrames
-sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-// Uncomment to enable debugging output
-// sensor.setDebug(true);
-
-console.log("");
-console.log("Device Description:", sensor.getDeviceDescription());
-console.log("Device Location:", sensor.getDeviceLocation());
-console.log("");
-
-// update and print a few values every 5 seconds
-setInterval(function()
-{
-    console.log("System Voltage:",
-                sensor.getAnalogValue(sensorObj.E50HX.AV_System_Voltage),
-                " ",
-                sensor.getAnalogValueUnits(sensorObj.E50HX.AV_System_Voltage));
-
-    console.log("System Type:",
-                sensor.getAnalogValue(sensorObj.E50HX.AV_System_Type));
-
-    console.log("Energy Consumption:",
-                sensor.getAnalogInput(sensorObj.E50HX.AI_Energy),
-                " ",
-                sensor.getAnalogInputUnits(sensorObj.E50HX.AI_Energy));
-
-    console.log("Power Up Counter:",
-                sensor.getAnalogInput(sensorObj.E50HX.AI_Power_Up_Count));
-
-    console.log("");
-
-}, 5000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/eboled.js b/examples/javascript/eboled.js
deleted file mode 100644
index 9cd1279..0000000
--- a/examples/javascript/eboled.js
+++ /dev/null
@@ -1,147 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Author: Tyler Gibson <tgibson@microsoft.com>
- * Copyright (c) 2015 Microsoft Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var lcdObj = require('jsupm_lcd');
-var oled = new lcdObj.EBOLED();
-
-var sample = 0;
-var samples = 13;
-
-function exit()
-{
-  oled = null;
-  lcdObj.cleanUp();
-  lcdObj = null;
-  process.exit(0);
-}
-
-setInterval( function()
-{
-  if(sample>samples)
-  {
-    exit();
-  }
-  oled.clearScreenBuffer();
-  runSample(sample++);
-  oled.refresh();
-}, 1500);
-
-function runSample(sample)
-{
-  switch(sample) {
-    case 0:
-      // x/y coords are 0 based, using 1 here for padding.
-      oled.setCursor(1,1);
-      // nowrap = 0, wrapping = 1
-      oled.setTextWrap(1);
-      oled.write("HELLO WORLD! Mixed with #123 and y's, g's and q's.");
-      break;
-    case 1:
-      oled.setCursor(12, 1);
-      //multiply text size, only integers
-      oled.setTextSize(3);
-      oled.write("BOO!");
-      oled.setTextSize(1);
-      break;
-    case 2:
-      oled.drawRectangleFilled(0,0,48,9);
-      oled.setCursor(1,1);
-      // 0=Black, 1=White, 2=Xor (Toggle)
-      oled.setTextColor(2);
-      oled.write("Cutout");
-      break;
-    case 3:
-      var total = Math.random()*100;
-      for(var stars=0; stars<total; stars++ )
-        oled.drawPixel(Math.floor(Math.random()*63), Math.floor(Math.random()*47), 1);
-      break;
-    case 4:
-      for(var burst=0; burst<12; burst++)
-        oled.drawLine(31, 24, Math.floor(Math.random()*63), Math.floor(Math.random()*47), 1);
-      break;
-    case 5:
-      var lastPeak = 24;
-      for(var peak=0; peak < 64; peak++)
-      {
-        var thisPeak = Math.abs(lastPeak + Math.floor(Math.random()*(-6) + Math.random()*6));
-        oled.drawLine(peak, thisPeak, peak, 47, 1);
-        lastPeak = thisPeak;
-      }
-      break;
-    case 6:
-      for(var y=0; y<47; y++)
-      {
-        oled.drawLineHorizontal(0,y+1,63,2);
-        oled.refresh();
-        oled.drawLineHorizontal(0,y,63,2);
-      }
-      break;
-    case 7:
-      var eqbarHeights = [ Math.floor(Math.random()*32),
-                           Math.floor(Math.random()*32),
-                           Math.floor(Math.random()*32),
-                           Math.floor(Math.random()*32),
-                           Math.floor(Math.random()*32),
-                           Math.floor(Math.random()*32),
-                           Math.floor(Math.random()*32) ];
-      var begin = Date.now();
-      while(Date.now()-begin < 2000)
-      {
-        oled.clearScreenBuffer();
-        for(var eqbar=0; eqbar<7; eqbar++)
-        {
-          oled.drawRectangleFilled(eqbar*9, 49 - eqbarHeights[eqbar], 8, eqbarHeights[eqbar], 1);
-          eqbarHeights[eqbar] = eqbarHeights[eqbar] + Math.random()*(-2) + Math.random()*2;
-          if(eqbarHeights[eqbar]<0)
-            eqbarHeights[eqbar] = 1;
-        }
-        oled.refresh();
-      }
-      oled.clear();
-      break;
-    case 8:
-      oled.drawRoundedRectangle(8, 8, 48, 16, 4, 1);
-      oled.setCursor(12, 16);
-      oled.write("Cancel");
-      break;
-    case 9:
-      oled.drawTriangle(2, 2, 52, 7, 17, 37, 1);
-      break;
-    case 10:
-      oled.drawTriangleFilled(2, 2, 52, 7, 17, 37, 1);
-      break;
-    case 11:
-      oled.drawCircle(32, 24, 14, 1);
-      break;
-    case 12:
-      oled.drawCircleFilled(32, 24, 14, 1);
-      break;
-    case 13:
-      oled.fillScreen(1);
-      break;
-  }
-}
diff --git a/examples/javascript/ecezo.js b/examples/javascript/ecezo.js
deleted file mode 100644
index e3d5b22..0000000
--- a/examples/javascript/ecezo.js
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_ecezo');
-
-// Instantiate a ECEZO sensor on uart 0 at 9600 baud.
-var sensor = new sensorObj.ECEZO(0, 9600, false);
-
-// For I2C, assuming the device is configured for address 0x64 on
-// I2C bus 0, you could use something like:
-//
-// var sensor = new sensorObj.ECEZO(0, 0x64, true);
-
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    console.log("EC "
-                + sensor.getEC()
-                + " uS/cm, TDS "
-                + sensor.getTDS()
-                + " mg/L, Salinity "
-                + sensor.getSalinity()
-                + " PSS-78, SG "
-                + sensor.getSG());
-
-}, 5000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/ehr.js b/examples/javascript/ehr.js
deleted file mode 100644
index ab7e8c9..0000000
--- a/examples/javascript/ehr.js
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load heart rate sensor module
-var heartRateSensor = require('jsupm_ehr');
-// Instantiate a  Ear-clip Heart Rate sensor on digital pin D2
-var myHeartRateSensor = new heartRateSensor.EHR(2);
-
-// set the beat counter to 0, init the clock and start counting beats
-myHeartRateSensor.clearBeatCounter();
-myHeartRateSensor.initClock();
-myHeartRateSensor.startBeatCounter();
-
-var millis, beats, hr;
-var myInterval = setInterval(function()
-{
-	// we grab these just for display purposes in this example
-	millis = myHeartRateSensor.getMillis();
-	beats = myHeartRateSensor.beatCounter();
-
-	// heartRate() requires that at least 5 seconds pass before
-	// returning anything other than 0
-	hr = myHeartRateSensor.heartRate();
-
-	// output milliseconds passed, beat count, and computed heart rate
-	console.log("Millis: " + millis + " Beats: " + beats +
-	            " Heart Rate: " + hr);
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myHeartRateSensor.stopBeatCounter();
-	myHeartRateSensor = null
-	heartRateSensor.cleanUp();
-	heartRateSensor = null;
-
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/eldriver.js b/examples/javascript/eldriver.js
deleted file mode 100644
index ddc92d2..0000000
--- a/examples/javascript/eldriver.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var eldriver_lib = require("jsupm_eldriver");
-
-// The was tested with the  El Driver Module
-// Instantiate a  El Driver on digital pin D2
-var eldriver_obj = new eldriver_lib.ElDriver(2);
-
-var lightState = true;
-
-var myInterval = setInterval(function()
-{
-	if (lightState)
-		eldriver_obj.on();
-	else
-		eldriver_obj.off();
-	lightState = !lightState;
-}, 1000);
-
-// When exiting: turn off EL wire, clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	eldriver_obj.off();
-	eldriver_obj = null;
-	eldriver_lib.cleanUp();
-	eldriver_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/electromagnet.js b/examples/javascript/electromagnet.js
deleted file mode 100644
index 90a7d9b..0000000
--- a/examples/javascript/electromagnet.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var electromagnet_lib = require("jsupm_electromagnet");
-// The was tested with the  Electromagnetic Module
-// Instantiate a  Electromagnet on digital pin D2
-var electromagnet_obj = new electromagnet_lib.Electromagnet(2);
-console.log("Starting up magnet....");
-electromagnet_obj.off();
-
-var magnetState = false;
-
-// Turn magnet on and off every 5 seconds
-var myInterval = setInterval(function()
-{
-	magnetState = !magnetState;
-	if (magnetState)
-		electromagnet_obj.on();
-	else
-		electromagnet_obj.off();
-	console.log("Turning magnet " + ((magnetState) ? "on" : "off"));
-}, 5000);
-
-// When exiting: clear interval, turn off magnet, run memory cleanup, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	electromagnet_obj.off();
-	electromagnet_obj = null;
-	electromagnet_lib.cleanUp();
-	electromagnet_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/emg.js b/examples/javascript/emg.js
deleted file mode 100644
index ec4be8e..0000000
--- a/examples/javascript/emg.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var emg_lib = require("jsupm_emg");
-
-// The was tested with the EMG Muscle Signal Reader Sensor Module
-// Instantiate a EMG on analog pin A0
-var emg_obj = new emg_lib.EMG(0);
-console.log("Calibrating....");
-emg_obj.calibrate();
-
-var myInterval = setInterval(function()
-{
-	console.log(emg_obj.value());
-}, 100);
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	emg_obj = null;
-	emg_lib.cleanUp();
-	emg_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/enc03r.js b/examples/javascript/enc03r.js
deleted file mode 100644
index 8713b14..0000000
--- a/examples/javascript/enc03r.js
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load analog gyro module
-var analogGyro = require('jsupm_enc03r');
-// Instantiate a ENC03R on analog pin A0
-var myGyro = new analogGyro.ENC03R(0);
-
-var CALIBRATION_SAMPLES = 1000;
-
-console.log("Please place the sensor in a stable location,\n" +
-	    "and do not move it while calibration takes place.\n" +
-	    "This may take a couple of minutes.");
-
-myGyro.calibrate(CALIBRATION_SAMPLES);
-console.log("Calibration complete.  Reference value: " +
-            myGyro.calibrationValue());
-
-// Read the input and print both the raw value and the angular velocity,
-// waiting 0.1 seconds between readings
-setInterval(function()
-{
-    myGyro.update();
-    var outputStr = "Angular velocity: " +
-	roundNum(myGyro.angularVelocity(), 5) + " deg/s";
-    console.log(outputStr);
-}, 100);
-
-function roundNum(num, decimalPlaces)
-{
-    var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-    return (Math.round((num + extraNum) * (Math.pow(10, decimalPlaces))) /
-            Math.pow(10, decimalPlaces));
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/es08a.js b/examples/javascript/es08a.js
deleted file mode 100644
index 66a79e3..0000000
--- a/examples/javascript/es08a.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//Load servo module.
-var servoModule = require("jsupm_servo");
-
-//Instantiate ES08A Servo module on GPIO 5
-var servo = new servoModule.ES08A(5);
-
-// function to initialize servo
-    // timeOffset: how long after hitting "run"
-    //		should we start this servo instance
-    // timeInterval: how frequently should this instance run after timeOffset
-    // angle: the angle for this instance
-function startServo(timeOffset, timeInterval, angle)
-{
-    // Start running this instance after timeOffset milliseconds
-    setTimeout(function()
-    {
-        // run this instance every timeInterval milliseconds
-        setInterval(function()
-        {
-            servo.setAngle(angle);
-            console.log("Set angle to " + angle);
-        }, timeInterval);
-    }, timeOffset);
-    // timeOffset tells setTimeout when
-    //		to execute the function specified in the first param
-    // angle is passed as a param to the specified function
-}
-// start immediately, run every 3 seconds, go 0 degrees
-startServo(0, 3000, 0);
-
-// start in 1 second, run every 3 seconds, go 90 degrees
-startServo(1000, 3000, 90);
-
-// start in 2 seconds, run every 3 seconds, go 180 degrees
-startServo(2000, 3000, 180);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/flex.js b/examples/javascript/flex.js
deleted file mode 100644
index 467978c..0000000
--- a/examples/javascript/flex.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var flexSensor_lib = require('jsupm_flex');
-
-// The was tested with a Spectra Symbol flex sensor.
-// We attached a 22K resistor to a breadboard,
-// with 1 end attached to GND and the other connected to
-// both the flex sensor and A0.
-// The flex sensor was connected on 1 pin to the 22K resistor and A0
-// and on the other pin to 5V.
-
-// Instantiate a UV sensor on analog pin A0
-var myFlexSensor_obj = new flexSensor_lib.Flex(0);
-
-var myInterval = setInterval(function()
-{
-	var outputStr = "Flex value: " + myFlexSensor_obj.value();
-	console.log(outputStr);
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myFlexSensor_obj = null;
-	flexSensor_lib.cleanUp();
-	flexSensor_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/gp2y0a.js b/examples/javascript/gp2y0a.js
deleted file mode 100644
index 7cb7d10..0000000
--- a/examples/javascript/gp2y0a.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-// JavaScript file for GP2Y0A family of IR Proximity Sensors
-
-// analog voltage, usually 3.3 or 5.0
-var GP2Y0A_AREF = 5.0;
-var SAMPLES_PER_QUERY = 20;
-
-var IRProximity = require('jsupm_gp2y0a');
-
-// Note, for the Grove 80cm version of this sensor, due to the way it is wired,
-// you need to plug this into the A0 port, where it will use the available
-// A1 pin for data.
-// Instantiate a GP2Y0A on analog pin A1
-var myVolts = new IRProximity.GP2Y0A(1);
-
-// The higher the voltage (closer to AREF) the closer the object is.
-// NOTE: The measured voltage will probably not exceed 3.3 volts.
-// Every second, print the averaged voltage value
-// (averaged over 20 samples).
-var myInterval = setInterval(function()
-{
-	console.log("AREF: " + GP2Y0A_AREF + 
-                ", Voltage value (higher means closer): " + 
-                myVolts.value(GP2Y0A_AREF, SAMPLES_PER_QUERY));
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myVolts = null;
-	IRProximity.cleanUp();
-	IRProximity = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/gprs.js b/examples/javascript/gprs.js
deleted file mode 100644
index 30d6121..0000000
--- a/examples/javascript/gprs.js
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_gprs');
-
-
-/************** Functions **************/
-function printUsage(progname)
-{
-    var outputStr = "Usage: " + progname + " [AT command]\n\n" +
-	"If an argument is supplied on the command line, that argument is\n" +
-	"sent to the module and the response is printed out.\n\n" +
-	"If no argument is used, then the manufacturer and the current\n" +
-	"saved profiles are queried and the results printed out.\n\n"
-    console.log(outputStr);
-}
-
-// simple helper function to send a command and wait for a response
-function sendCommand(sensor, cmd, callback)
-{
-    // commands need to be terminated with a carriage return
-    cmd += "\r";
-    sensor.writeDataStr(cmd);
-
-    // wait up to 1 second
-    if (sensor.dataAvailable(1000))
-    {
-	console.log("Returned: " + sensor.readDataStr(1024));
-    }
-    else
-	console.log("Timed out waiting for response");
-
-    if (callback)
-	callback();
-}
-
-/************** Main code **************/
-// Instantiate a GPRS Module on UART 0
-var sensor = new sensorObj.GPRS(0);
-
-// Set the baud rate, 19200 baud is the default.
-if (sensor.setBaudRate(19200))
-{
-    console.log("Failed to set baud rate");
-    process.exit(0);
-}
-
-printUsage(process.argv[1]);
-
-// Note: in nodeJS, command-line argument 0 is "node".
-// Command-line argument 1 is "gprs.js"
-// If you have a third argument, then it's a command
-if (process.argv.length > 2)
-{
-    console.log("Sending command line argument (" + process.argv[2] + ")...");
-    sendCommand(sensor, process.argv[2]);
-}
-else
-{
-    // sending this command as a synchronous callback ensures better timing
-    var callbackFunc = function()
-    {
-	setTimeout(function()
-        {
-            // query the saved profiles
-            console.log("Querying the saved profiles (AT&V)...");
-            sendCommand(sensor, "AT&V");
-            
-            // A comprehensive list is available from the
-            // datasheet at:
-            // http://www.seeedstudio.com/wiki/images/7/72/AT_Commands_v1.11.pdf
-	}, 1000);
-    };
-
-    // query the module manufacturer
-    console.log("Querying module manufacturer (AT+CGMI)...");
-    sendCommand(sensor, "AT+CGMI", callbackFunc);
-}
-
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/grove_mcfled.js b/examples/javascript/grove_mcfled.js
deleted file mode 100644
index eaa6d78..0000000
--- a/examples/javascript/grove_mcfled.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var upmled = require("jsupm_grove");
-// Initialize on GPIO 2
-var myled = new upmled.GroveLed(2);
-myled.on();
-
-// Dummy setInterval, just to keep program from quitting
-// This way, the LED turns off when you quit the program
-var myInterval = setInterval(function()
-{
-	;
-}, 1000);
-
-// When exiting: turn off LED, clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myled.off();
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/grovebutton.js b/examples/javascript/grovebutton.js
deleted file mode 100644
index 428396a..0000000
--- a/examples/javascript/grovebutton.js
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load Grove module
-var groveSensor = require('jsupm_grove');
-
-// Create the button object using GPIO pin 0
-var button = new groveSensor.GroveButton(0);
-
-// Read the input and print, waiting one second between readings
-function readButtonValue() {
-    console.log(button.name() + " value is " + button.value());
-}
-setInterval(readButtonValue, 1000);
diff --git a/examples/javascript/grovecircularled.js b/examples/javascript/grovecircularled.js
deleted file mode 100644
index 0734c3d..0000000
--- a/examples/javascript/grovecircularled.js
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Jun Kato
- * Contributions: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Instantiate a Grove Circular LED on gpio pins 9 and 8
-var GCL = require("jsupm_my9221");
-var circle = new GCL.GroveCircularLED(9, 8);
-var level = 0;
-
-// Show a spinner.
-var myInterval = setInterval(function()
-{
-    circle.setSpinner(level);
-    level = (level + 1) % 24;
-}, 100);
-
-// When exiting, clear interval and print message.
-process.on('SIGINT', function()
-{
-    clearInterval(myInterval);
-    circle.setLevel(0);
-    circle = null;
-    GCL.cleanUp();
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/grovecollision.js b/examples/javascript/grovecollision.js
deleted file mode 100644
index 7fa1c0a..0000000
--- a/examples/javascript/grovecollision.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var collision_lib = require("jsupm_grovecollision");
-
-// The was tested with the Grove Collision Sensor
-// Instantiate a Grove Collision on digital pin D2
-var collision_obj = new collision_lib.GroveCollision(2);
-
-var collisionState = false;
-console.log("No collision");
-
-// Having an infinate loop prevents nodeJS from catching Cntl-C
-// We need to catch Cntl-C to clean up memory
-// Instead, we check the collision sensor every millisecond
-var myInterval = setInterval(function()
-{
-	if (collision_obj.isColliding() && !collisionState)
-	{
-		console.log("Collision!");
-		collisionState = true;
-	}
-	else if (!collision_obj.isColliding() && collisionState)
-	{
-		console.log("No collision");
-		collisionState = false;
-	}
-}, 1);
-
-// When exiting: clear interval, clean up memory, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	collision_obj = null;
-	collision_lib.cleanUp();
-	collision_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/groveehr.js b/examples/javascript/groveehr.js
deleted file mode 100644
index 4068490..0000000
--- a/examples/javascript/groveehr.js
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load heart rate sensor module
-var heartRateSensor = require('jsupm_groveehr');
-// Instantiate a Grove Ear-clip Heart Rate sensor on digital pin D2
-var myHeartRateSensor = new heartRateSensor.GroveEHR(2);
-
-// set the beat counter to 0, init the clock and start counting beats
-myHeartRateSensor.clearBeatCounter();
-myHeartRateSensor.initClock();
-myHeartRateSensor.startBeatCounter();
-
-var millis, beats, hr;
-var myInterval = setInterval(function()
-{
-	// we grab these just for display purposes in this example
-	millis = myHeartRateSensor.getMillis();
-	beats = myHeartRateSensor.beatCounter();
-
-	// heartRate() requires that at least 5 seconds pass before
-	// returning anything other than 0
-	hr = myHeartRateSensor.heartRate();
-
-	// output milliseconds passed, beat count, and computed heart rate
-	console.log("Millis: " + millis + " Beats: " + beats +
-	            " Heart Rate: " + hr);
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myHeartRateSensor.stopBeatCounter();
-	myHeartRateSensor = null
-	heartRateSensor.cleanUp();
-	heartRateSensor = null;
-
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/groveeldriver.js b/examples/javascript/groveeldriver.js
deleted file mode 100644
index 0cf03c9..0000000
--- a/examples/javascript/groveeldriver.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var eldriver_lib = require("jsupm_groveeldriver");
-
-// The was tested with the Grove El Driver Module
-// Instantiate a Grove El Driver on digital pin D2
-var eldriver_obj = new eldriver_lib.GroveElDriver(2);
-
-var lightState = true;
-
-var myInterval = setInterval(function()
-{
-	if (lightState)
-		eldriver_obj.on();
-	else
-		eldriver_obj.off();
-	lightState = !lightState;
-}, 1000);
-
-// When exiting: turn off EL wire, clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	eldriver_obj.off();
-	eldriver_obj = null;
-	eldriver_lib.cleanUp();
-	eldriver_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/groveelectromagnet.js b/examples/javascript/groveelectromagnet.js
deleted file mode 100644
index 8a75b71..0000000
--- a/examples/javascript/groveelectromagnet.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var electromagnet_lib = require("jsupm_groveelectromagnet");
-// The was tested with the Grove Electromagnetic Module
-// Instantiate a Grove Electromagnet on digital pin D2
-var electromagnet_obj = new electromagnet_lib.GroveElectromagnet(2);
-console.log("Starting up magnet....");
-electromagnet_obj.off();
-
-var magnetState = false;
-
-// Turn magnet on and off every 5 seconds
-var myInterval = setInterval(function()
-{
-	magnetState = !magnetState;
-	if (magnetState)
-		electromagnet_obj.on();
-	else
-		electromagnet_obj.off();
-	console.log("Turning magnet " + ((magnetState) ? "on" : "off"));
-}, 5000);
-
-// When exiting: clear interval, turn off magnet, run memory cleanup, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	electromagnet_obj.off();
-	electromagnet_obj = null;
-	electromagnet_lib.cleanUp();
-	electromagnet_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/groveemg.js b/examples/javascript/groveemg.js
deleted file mode 100644
index 4ddcb6e..0000000
--- a/examples/javascript/groveemg.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var groveemg_lib = require("jsupm_groveemg");
-
-// The was tested with the GroveEMG Muscle Signal Reader Sensor Module
-// Instantiate a GroveEMG on analog pin A0
-var groveemg_obj = new groveemg_lib.GroveEMG(0);
-console.log("Calibrating....");
-groveemg_obj.calibrate();
-
-var myInterval = setInterval(function()
-{
-	console.log(groveemg_obj.value());
-}, 100);
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	groveemg_obj = null;
-	groveemg_lib.cleanUp();
-	groveemg_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/grovegprs.js b/examples/javascript/grovegprs.js
deleted file mode 100644
index dda80ac..0000000
--- a/examples/javascript/grovegprs.js
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_grovegprs');
-
-
-/************** Functions **************/
-function printUsage(progname)
-{
-    var outputStr = "Usage: " + progname + " [AT command]\n\n" +
-	"If an argument is supplied on the command line, that argument is\n" +
-	"sent to the module and the response is printed out.\n\n" +
-	"If no argument is used, then the manufacturer and the current\n" +
-	"saved profiles are queried and the results printed out.\n\n"
-    console.log(outputStr);
-}
-
-// simple helper function to send a command and wait for a response
-function sendCommand(sensor, cmd, callback)
-{
-    // commands need to be terminated with a carriage return
-    cmd += "\r";
-    sensor.writeDataStr(cmd);
-
-    // wait up to 1 second
-    if (sensor.dataAvailable(1000))
-    {
-	console.log("Returned: " + sensor.readDataStr(1024));
-    }
-    else
-	console.log("Timed out waiting for response");
-
-    if (callback)
-	callback();
-}
-
-/************** Main code **************/
-// Instantiate a GROVEGPRS Module on UART 0
-var sensor = new sensorObj.GroveGPRS(0);
-
-// Set the baud rate, 19200 baud is the default.
-if (sensor.setBaudRate(19200))
-{
-    console.log("Failed to set baud rate");
-    process.exit(0);
-}
-
-printUsage(process.argv[1]);
-
-// Note: in nodeJS, command-line argument 0 is "node".
-// Command-line argument 1 is "grovegprs.js"
-// If you have a third argument, then it's a command
-if (process.argv.length > 2)
-{
-    console.log("Sending command line argument (" + process.argv[2] + ")...");
-    sendCommand(sensor, process.argv[2]);
-}
-else
-{
-    // sending this command as a synchronous callback ensures better timing
-    var callbackFunc = function()
-    {
-	setTimeout(function()
-        {
-            // query the saved profiles
-            console.log("Querying the saved profiles (AT&V)...");
-            sendCommand(sensor, "AT&V");
-            
-            // A comprehensive list is available from the
-            // datasheet at:
-            // http://www.seeedstudio.com/wiki/images/7/72/AT_Commands_v1.11.pdf
-	}, 1000);
-    };
-
-    // query the module manufacturer
-    console.log("Querying module manufacturer (AT+CGMI)...");
-    sendCommand(sensor, "AT+CGMI", callbackFunc);
-}
-
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/grovegsr.js b/examples/javascript/grovegsr.js
deleted file mode 100644
index 6b98af1..0000000
--- a/examples/javascript/grovegsr.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var grovegsr_lib = require("jsupm_grovegsr");
-
-// The was tested with the GroveGSR Galvanic Skin Response Sensor module.
-
-// Instantiate a GroveGSR on analog pin A0
-var grovegsr_obj = new grovegsr_lib.GroveGSR(0);
-console.log("Calibrating....");
-grovegsr_obj.calibrate();
-
-var myInterval = setInterval(function()
-{
-	console.log(grovegsr_obj.value());
-}, 500);
-
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	grovegsr_obj = null;
-	grovegsr_lib.cleanUp();
-	grovegsr_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/groveled.js b/examples/javascript/groveled.js
deleted file mode 100644
index 7314d39..0000000
--- a/examples/javascript/groveled.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load Grove module
-var groveSensor = require('jsupm_grove');
-
-// Create the Grove LED object using GPIO pin 2
-var led = new groveSensor.GroveLed(2);
-
-// Print the name
-console.log(led.name());
-
-// Turn the LED on and off 10 times, pausing one second
-// between transitions
-var i = 0;
-var waiting = setInterval(function() {
-        if ( i % 2 == 0 ) {
-            led.on();
-        } else {
-            led.off();
-        }
-        i++;
-        if ( i == 20 ) clearInterval(waiting);
-        }, 1000);
-            
diff --git a/examples/javascript/groveledbar.js b/examples/javascript/groveledbar.js
deleted file mode 100644
index 25b2dc0..0000000
--- a/examples/javascript/groveledbar.js
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var LEDBar = require("jsupm_my9221");
-
-// Instantiate a MY9221, we use D8 for the data, and D9 for the
-// data clock.  This was tested with a Grove LED bar.
-var myLEDBar = new LEDBar.GroveLEDBar(8, 9);
-
-var directionBool = true;
-
-// A note on timing:
-//	In the C++ example, the system sleeps 10 times for 50 milliseconds
-//	between each LED lighting. After the LED has reached the last light
-//	of the cycle, the system sleeps again for 1 second.
-//	The sleeps are cumulative, so the system has slept for 1.5 seconds
-//	sum total for each cycle.
-//	setInterval and setTimeout make asynchronous function calls;
-//	they aren't cumulative.
-//	In order to approximate the behavior of the C++ example, we need
-//	to call each iteration 1.5 seconds apart instead of 1 second apart.
-var myInterval = setInterval(function()
-{
-	// start showing LED strip with just the first one lit
-	show_LED(1, directionBool);
-}, (1000 + (10*50)) );
-
-function show_LED(level, direction)
-{
-	// If it's less than 10
-	//	light up the LED now
-	//	call show_LED again in 50 ms
-	if (level <= 10)
-	{
-		myLEDBar.setBarLevel(level, directionBool);
-		setTimeout(show_LED, 50, ++level, directionBool);	
-	}
-	// Switch LED lighting directions between lighting cycles
-	else
-		directionBool = !directionBool;
-}
-
-// When exiting: clear LED strip lights, clear interval, print exit message
-process.on('SIGINT', function()
-{
-	myLEDBar.setBarLevel(0, true);
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/grovelight.js b/examples/javascript/grovelight.js
deleted file mode 100644
index d09b462..0000000
--- a/examples/javascript/grovelight.js
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load Grove module
-var groveSensor = require('jsupm_grove');
-
-// Create the light sensor object using AIO pin 0
-var light = new groveSensor.GroveLight(0);
-
-// Read the input and print both the raw value and a rough lux value,
-// waiting one second between readings
-function readLightSensorValue() {
-    console.log(light.name() + " raw value is " + light.raw_value() +
-            ", which is roughly " + light.value() + " lux");
-}
-setInterval(readLightSensorValue, 1000);
diff --git a/examples/javascript/grovelinefinder.js b/examples/javascript/grovelinefinder.js
deleted file mode 100644
index 99f245c..0000000
--- a/examples/javascript/grovelinefinder.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var lineFinderSensor = require('jsupm_grovelinefinder');
-
-// Instantiate a Grove line finder sensor on digital pin D2
-var myLineFinderSensor = new lineFinderSensor.GroveLineFinder(2);
-
-// Check every second for the presence of white detection
-setInterval(function()
-{
-	if (myLineFinderSensor.whiteDetected())
-		console.log("White detected.");
-	else
-		console.log("Black detected.");
-}, 1000);
-
-// Turn relay off when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/grovemd-stepper.js b/examples/javascript/grovemd-stepper.js
deleted file mode 100644
index 4618f6d..0000000
--- a/examples/javascript/grovemd-stepper.js
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var grovemdObj = require('jsupm_grovemd');
-
-// This example demonstrates using the GroveMD to drive a stepper motor
-
-function start()
-{
-    if (motor)
-    {
-        // configure it, for this example, we'll assume 200 steps per rev
-        motor.configStepper(200);
-        motor.setStepperSteps(100);
-        // start it going at 10 RPM
-        motor.enableStepper(grovemdObj.GroveMD.STEP_DIR_CW, 10);
-    }
-}
-
-function reverse()
-{
-    if (motor)
-    {
-	// now reverse
-        motor.setStepperSteps(100);
-        // start it going at 10 RPM
-        motor.enableStepper(grovemdObj.GroveMD.STEP_DIR_CCW, 10);
-	}
-}
-
-function end()
-{
-    if (motor)
-    {
-	motor.disableStepper();
-    }
-    exit();
-}
-
-// When exiting: clear memory and print exit message
-function exit()
-{
-    if (motor)
-    {
-	motor = null;
-	grovemdObj.cleanUp();
-    }
-    grovemdObj = null;
-    console.log("Exiting");
-    process.exit(0);	
-}
-
-
-// Instantiate an I2C Grove Motor Driver on I2C bus 0
-var motor = new grovemdObj.GroveMD(
-    grovemdObj.GROVEMD_I2C_BUS, 
-    grovemdObj.GROVEMD_DEFAULT_I2C_ADDR);
-
-start();
-
-setTimeout(function()
-{
-    reverse();
-    setTimeout(end, 3000);
-}, 3000);
-
-
-process.on('SIGINT', function()
-{
-    exit();
-});
diff --git a/examples/javascript/grovemd.js b/examples/javascript/grovemd.js
deleted file mode 100644
index 6ae88cf..0000000
--- a/examples/javascript/grovemd.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var groveMotorDriver_lib = require('jsupm_grovemd');
-
-function start()
-{
-	if (my_MotorDriver_obj)
-	{
-		// set direction to CW and set speed to 50%
-		console.log("Spin M1 and M2 at half speed for 3 seconds");
-		my_MotorDriver_obj.setMotorDirections(groveMotorDriver_lib.GroveMD.DIR_CW,
-                                                     groveMotorDriver_lib.GroveMD.DIR_CW);
-		my_MotorDriver_obj.setMotorSpeeds(127, 127);
-	}
-}
-
-function reverse()
-{
-	if (my_MotorDriver_obj)
-	{
-		// counter clockwise
-		console.log("Reversing M1 and M2 for 3 seconds");
-		my_MotorDriver_obj.setMotorDirections(groveMotorDriver_lib.GroveMD.DIR_CCW,
-                                                     groveMotorDriver_lib.GroveMD.DIR_CCW);	
-	}
-}
-
-function end()
-{
-	if (my_MotorDriver_obj)
-	{
-		console.log("Stopping motors");
-		my_MotorDriver_obj.setMotorSpeeds(0, 0);
-	}
-	exit();
-}
-
-// When exiting: clear memory and print exit message
-function exit()
-{
-	if (my_MotorDriver_obj)
-	{
-		my_MotorDriver_obj = null;
-		groveMotorDriver_lib.cleanUp();
-	}
-	groveMotorDriver_lib = null;
-	console.log("Exiting");
-	process.exit(0);	
-}
-
-
-// Instantiate an I2C Grove Motor Driver on I2C bus 0
-var my_MotorDriver_obj = new groveMotorDriver_lib.GroveMD(
-	groveMotorDriver_lib.GROVEMD_I2C_BUS, 
-	groveMotorDriver_lib.GROVEMD_DEFAULT_I2C_ADDR);
-
-start();
-
-setTimeout(function()
-{
-	reverse();
-	setTimeout(end, 3000);
-}, 3000);
-
-
-process.on('SIGINT', function()
-{
-	exit();
-});
diff --git a/examples/javascript/grovemoisture.js b/examples/javascript/grovemoisture.js
deleted file mode 100644
index 76fa9ae..0000000
--- a/examples/javascript/grovemoisture.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-//Load Grove Moisture module
-var grove_moisture = require('jsupm_grovemoisture');
-
-// Instantiate a Grove Moisture sensor on analog pin A0
-var myMoistureObj = new grove_moisture.GroveMoisture(0);
-
-// Values (approximate):
-// 0-300,   sensor in air or dry soil
-// 300-600, sensor in humid soil
-// 600+,    sensor in wet soil or submerged in water
-// Read the value every second and print the corresponding moisture level
-setInterval(function()
-{
-	var result;
-	var moisture_val = parseInt(myMoistureObj.value());
-	if (moisture_val >= 0 && moisture_val < 300)
-		result = "Dry";
-	else if (moisture_val >= 300 && moisture_val < 600)
-		result = "Moist";
-	else
-		result = "Wet";
-	console.log("Moisture value: " + moisture_val + ", " + result);
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/groveo2.js b/examples/javascript/groveo2.js
deleted file mode 100644
index fcf3755..0000000
--- a/examples/javascript/groveo2.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var groveO2_lib = require("jsupm_groveo2");
-
-// The was tested with the O2 Oxygen Concentration Sensor Module
-// Instantiate a GroveO2 on analog pin A0
-var groveO2_obj = new groveO2_lib.GroveO2(0);
-
-var myInterval = setInterval(function()
-{
-	console.log("The output voltage is: " + roundNum(groveO2_obj.voltageValue(), 5) + "mV");
-}, 100);
-
-function roundNum(num, decimalPlaces)
-{
-	var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-	return (Math.round((num + extraNum) * (Math.pow(10, decimalPlaces))) / Math.pow(10, decimalPlaces));
-}
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	groveO2_obj = null;
-	groveO2_lib.cleanUp();
-	groveO2_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/groverelay.js b/examples/javascript/groverelay.js
deleted file mode 100644
index a8fefe7..0000000
--- a/examples/javascript/groverelay.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load Grove module
-var groveSensor = require('jsupm_grove');
-
-// Create the relay switch object using GPIO pin 0
-var relay = new groveSensor.GroveRelay(0);
-
-// Close and then open the relay switch 3 times,
-// waiting one second each time.  The LED on the relay switch
-// will light up when the switch is on (closed).
-// The switch will also make a noise between transitions.
-var i = 0;
-var waiting = setInterval(function() {
-        if ( i % 2 == 0 ) {
-            relay.on();
-            if ( relay.isOn() )
-                console.log(relay.name() + " is on");
-        } else {
-            relay.off();
-            if ( relay.isOff() )
-                console.log(relay.name() + " is off");
-        }
-        i++;
-        if ( i == 6) clearInterval(waiting);
-        }, 1000);
-
diff --git a/examples/javascript/groverotary.js b/examples/javascript/groverotary.js
deleted file mode 100644
index 040f38c..0000000
--- a/examples/javascript/groverotary.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//setup/Initialization
-var upm_grove = require('jsupm_grove');
-
-//setup access analog input Analog pin #0 (A0)
-var groveRotary = new upm_grove.GroveRotary(0);
-
-loop();
-
-function loop()
-{
-    var abs = groveRotary.abs_value();
-    var absdeg = groveRotary.abs_deg();
-    var absrad = groveRotary.abs_rad();
-
-    var rel = groveRotary.rel_value();
-    var reldeg = groveRotary.rel_deg();
-    var relrad = groveRotary.rel_rad();
-
-    //write the knob value to the console in different formats
-    console.log("Abs: " + abs + " " + Math.round(parseInt(absdeg)) + " " + absrad.toFixed(3));
-    console.log("Rel: " + rel + " " + Math.round(parseInt(reldeg)) + " " + relrad.toFixed(3));
-
-    //wait 2 s and call function again
-    setTimeout(loop, 2000);
-}
diff --git a/examples/javascript/grovescam.js b/examples/javascript/grovescam.js
deleted file mode 100644
index c944177..0000000
--- a/examples/javascript/grovescam.js
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var cameraObj = require('jsupm_grovescam');
-
-// Instantiate a Grove Serial Camera on UART 0
-var camera = new cameraObj.GROVESCAM(0);
-
-// make sure port is initialized properly. 115200 baud is the default.
-if (!camera.setupTty())
-{
-    console.log("Failed to setup tty port parameters");
-    process.exit(1);
-}
-
-if (camera.init())
-    console.log("Initialized...");
-else
-    console.log("init() failed");
-
-if (camera.preCapture())
-    console.log("preCapture succeeded...");
-else
-    console.log("preCapture failed.");
-
-if (camera.doCapture())
-    console.log("doCapture succeeded...");
-else
-    console.log("doCapture failed.");
-
-console.log("Image size is " + camera.getImageSize() + " bytes");
-
-if (camera.getImageSize() > 0)
-{
-    console.log("Storing image.jpg...");
-    if (camera.storeImage("image.jpg"))
-        console.log("storeImage succeeded...");
-    else
-        console.log("storeImage failed.");
-}
-
-
-camera = null;
-cameraObj.cleanUp();
-cameraObj = null;
-console.log("Exiting.");
-process.exit(0);
-
diff --git a/examples/javascript/groveslide.js b/examples/javascript/groveslide.js
deleted file mode 100644
index bd16eee..0000000
--- a/examples/javascript/groveslide.js
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upm_grove = require('jsupm_grove');
-
-//setup access analog input Analog pin #0 (A0)
-var groveSlide = new upm_grove.GroveSlide(0);
-
-loop();
-
-function loop()
-{
-    var raw = groveSlide.raw_value();
-    var volts = groveSlide.voltage_value();
-
-    //write the slider values to the console
-    console.log("Slider Value: " + raw + " = " + volts.toFixed(2) + " V");
-
-    //wait 2 s then call function again
-    setTimeout(loop, 2000);
-}
diff --git a/examples/javascript/grovespeaker.js b/examples/javascript/grovespeaker.js
deleted file mode 100644
index de92225..0000000
--- a/examples/javascript/grovespeaker.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-//Load Grove Speaker module
-var groveSpeaker = require('jsupm_grovespeaker');
-// Instantiate a Grove Speaker on digital pin D2
-var mySpeaker = new groveSpeaker.GroveSpeaker(2);
-
-// Play all 7 of the lowest notes
-mySpeaker.playAll();
-
-// Play a medium C-sharp
-mySpeaker.playSound('c', true, "med");
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/grovetemp.js b/examples/javascript/grovetemp.js
deleted file mode 100644
index dba3954..0000000
--- a/examples/javascript/grovetemp.js
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load Grove module
-var groveSensor = require('jsupm_grove');
-
-// Create the temperature sensor object using AIO pin 0
-var temp = new groveSensor.GroveTemp(0);
-console.log(temp.name());
-
-// Read the temperature ten times, printing both the Celsius and
-// equivalent Fahrenheit temperature, waiting one second between readings
-var i = 0;
-var waiting = setInterval(function() {
-        var celsius = temp.value();
-        var fahrenheit = celsius * 9.0/5.0 + 32.0;
-        console.log(celsius + " degrees Celsius, or " +
-            Math.round(fahrenheit) + " degrees Fahrenheit");
-        i++;
-        if (i == 10) clearInterval(waiting);
-        }, 1000);
diff --git a/examples/javascript/groveultrasonic.js b/examples/javascript/groveultrasonic.js
deleted file mode 100644
index e2b5804..0000000
--- a/examples/javascript/groveultrasonic.js
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Jun Kato <i@junkato.jp>
- * Copyright (c) 2015 Jun Kato.
- *
- * Thanks to Seeed Studio for a working arduino sketch
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var ultrasonic = require("jsupm_groveultrasonic");
-var sensor = new ultrasonic.GroveUltraSonic(2);
-
-var myInterval = setInterval(function()
-{
-  var travelTime = sensor.getDistance();
-  if (travelTime > 0) {
-    var distance = (travelTime / 29 / 2).toFixed(3);
-    console.log("distance: " + distance + " [cm]");
-  }
-}, 200);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-  clearInterval(myInterval);
-  console.log("Exiting...");
-  process.exit(0);
-});
diff --git a/examples/javascript/grovevdiv.js b/examples/javascript/grovevdiv.js
deleted file mode 100644
index 5fb393e..0000000
--- a/examples/javascript/grovevdiv.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var voltageDivider = require('jsupm_grovevdiv');
-// Instantiate a Grove Voltage Divider sensor on analog pin A0
-var myVoltageDivider = new voltageDivider.GroveVDiv(0);
-
-// collect data and output measured voltage according to the setting
-// of the scaling switch (3 or 10)
-var val, gain3val, gain10val;
-function getVoltageInfo()
-{
-	val = myVoltageDivider.value(100);
-	gain3val = myVoltageDivider.computedValue(3, val);
-	gain10val = myVoltageDivider.computedValue(10, val);
-	console.log("ADC value: " + val + " Gain 3: " + gain3val 
-				+ "v Gain 10: " + gain10val + "v");
-}
-
-setInterval(getVoltageInfo, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	myVoltageDivider = null;
-	voltageDivider.cleanUp();
-	voltageDivider = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/grovewater.js b/examples/javascript/grovewater.js
deleted file mode 100644
index d953106..0000000
--- a/examples/javascript/grovewater.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load Grove module
-var waterSensor = require('jsupm_grovewater');
-
-// Instantiate a Grove Water sensor on digital pin D2
-var water = new waterSensor.GroveWater(2);
-
-// Read whether the sensor is wet/dry, waiting one second between readings
-function readWaterState()
-{
-	if (water.isWet())
-		console.log("Sensor is wet");
-	else
-		console.log("Sensor is dry");
-}
-setInterval(readWaterState, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/grovewfs.js b/examples/javascript/grovewfs.js
deleted file mode 100644
index 48b9610..0000000
--- a/examples/javascript/grovewfs.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var waterFlow_lib = require('jsupm_grovewfs');
-
-// Instantiate a Grove Water Flow Sensor on digital pin D2
-var myWaterFlow_obj = new waterFlow_lib.GroveWFS(2);
-
-// set the flow counter to 0 and start counting
-myWaterFlow_obj.clearFlowCounter();
-myWaterFlow_obj.startFlowCounter();
-
-
-var millis, flowCount, fr;
-var myInterval = setInterval(function()
-{
-	// we grab these (millis and flowCount) just for display
-	// purposes in this example
-	millis = myWaterFlow_obj.getMillis();
-	flowCount = myWaterFlow_obj.flowCounter();
-
-	fr = myWaterFlow_obj.flowRate();
-
-	// output milliseconds passed, flow count, and computed flow rate
-	outputStr = "Millis: " + millis + " Flow Count: " + flowCount +
-	" Flow Rate: " + fr + " LPM";
-	console.log(outputStr);
-
-	// best to gather data for at least one second for reasonable
-	// results.
-}, 2000);
-
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myWaterFlow_obj.stopFlowCounter();
-	myWaterFlow_obj = null
-	waterFlow_lib.cleanUp();
-	waterFlow_lib = null;
-
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/gsr.js b/examples/javascript/gsr.js
deleted file mode 100644
index c5e06f7..0000000
--- a/examples/javascript/gsr.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var gsr_lib = require("jsupm_gsr");
-
-// The was tested with the GSR Galvanic Skin Response Sensor module.
-
-// Instantiate a GSR on analog pin A0
-var gsr_obj = new gsr_lib.GSR(0);
-console.log("Calibrating....");
-gsr_obj.calibrate();
-
-var myInterval = setInterval(function()
-{
-	console.log(gsr_obj.value());
-}, 500);
-
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	gsr_obj = null;
-	gsr_lib.cleanUp();
-	gsr_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/guvas12d.js b/examples/javascript/guvas12d.js
deleted file mode 100644
index 28105be..0000000
--- a/examples/javascript/guvas12d.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-*         Jon Trulson <jtrulson@ics.com>
-* Copyright (c) 2014-2016 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var UVSensor = require('jsupm_guvas12d');
-
-// analog voltage, usually 3.3 or 5.0
-var g_GUVAS12D_AREF = 5.0;
-
-// Instantiate a UV sensor on analog pin A0
-var myUVSensor = new UVSensor.GUVAS12D(0, g_GUVAS12D_AREF);
-
-setInterval(function()
-{
-    var outputStr = "Volts: "
-        + myUVSensor.volts()
-	+ ", Intensity: "
-        + myUVSensor.intensity()
-        + " mW/m^2";
-
-    console.log(outputStr);
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/h3lis331dl.js b/examples/javascript/h3lis331dl.js
deleted file mode 100644
index 277ab8c..0000000
--- a/examples/javascript/h3lis331dl.js
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
-* Author: Jon Trulson <jtrulson@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var digitalAccelerometer = require('jsupm_h3lis331dl');
-
-// Instantiate an H3LIS331DL on I2C bus 0
-var myDigitalAccelerometer = new digitalAccelerometer.H3LIS331DL(
-    digitalAccelerometer.H3LIS331DL_I2C_BUS, 
-    digitalAccelerometer.H3LIS331DL_DEFAULT_I2C_ADDR);
-
-// Initialize the device with default values
-myDigitalAccelerometer.init();
-
-var x, y, z;
-x = digitalAccelerometer.new_intp();
-y = digitalAccelerometer.new_intp();
-z = digitalAccelerometer.new_intp();
-
-var ax, ay, az;
-ax = digitalAccelerometer.new_floatp();
-ay = digitalAccelerometer.new_floatp();
-az = digitalAccelerometer.new_floatp();
-
-var outputStr;
-
-var myInterval = setInterval(function()
-{
-	myDigitalAccelerometer.update();
-	myDigitalAccelerometer.getRawXYZ(x, y, z);
-	outputStr = "Raw: X = " + digitalAccelerometer.intp_value(x) +
-	" Y = " + digitalAccelerometer.intp_value(y) +
-	" Z = " + digitalAccelerometer.intp_value(z);
-	console.log(outputStr);
-
-	myDigitalAccelerometer.getAcceleration(ax, ay, az);
-	outputStr = "Acceleration: AX = " 
-		+ roundNum(digitalAccelerometer.floatp_value(ax), 6)
-		+ " AY = " + roundNum(digitalAccelerometer.floatp_value(ay), 6) 
-		+ " AZ = " + roundNum(digitalAccelerometer.floatp_value(az), 6);
-	console.log(outputStr);
-}, 500);
-
-// round off output to match C example, which has 6 decimal places
-function roundNum(num, decimalPlaces)
-{
-	var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-	return (Math.round((num + extraNum) 
-		* (Math.pow(10, decimalPlaces))) / Math.pow(10, decimalPlaces));
-}
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-
-	// clean up memory
-	digitalAccelerometer.delete_intp(x);
-	digitalAccelerometer.delete_intp(y);
-	digitalAccelerometer.delete_intp(z);
-
-	digitalAccelerometer.delete_floatp(ax);
-	digitalAccelerometer.delete_floatp(ay);
-	digitalAccelerometer.delete_floatp(az);
-
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/h803x.js b/examples/javascript/h803x.js
deleted file mode 100644
index 9e80a4c..0000000
--- a/examples/javascript/h803x.js
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_h803x');
-
-
-/************** Main code **************/
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device " + defaultDev);
-console.log("Initializing...");
-
-// Instantiate an H803X instance, using MODBUS slave address 1, and
-// default comm parameters (9600, 8, N, 2)
-var sensor = new sensorObj.H803X(defaultDev, 1);
-
-// output the Slave ID (manufacturer, model, serno)
-console.log("Slave ID:", sensor.getSlaveID());
-
-console.log("");
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    // H8035 / H8036
-    console.log("Consumption (kWh):", sensor.getConsumption());
-    console.log("Real Power (kW):", sensor.getRealPower());
-
-    if (sensor.isH8036())
-    {
-        // The H8036 has much more data available...
-
-          console.log("Reactive Power (kVAR):", sensor.getReactivePower());
-          console.log("Apparent Power (kVA):", sensor.getApparentPower());
-          console.log("Power Factor:", sensor.getPowerFactor());
-          console.log("Volts Line to Line:", sensor.getVoltsLineToLine());
-          console.log("Volts Line to Neutral:", sensor.getVoltsLineToNeutral());
-
-          console.log("Current:", sensor.getCurrent());
-
-          console.log("Real Power Phase A (kW):", sensor.getRealPowerPhaseA());
-          console.log("Real Power Phase B (kW):", sensor.getRealPowerPhaseB());
-          console.log("Real Power Phase C (kW):", sensor.getRealPowerPhaseC());
-
-          console.log("Power Factor Phase A:", sensor.getPowerFactorPhaseA());
-          console.log("Power Factor Phase B:", sensor.getPowerFactorPhaseB());
-          console.log("Power Factor Phase C:", sensor.getPowerFactorPhaseC());
-
-          console.log("Volts Phase A to B:", sensor.getVoltsPhaseAToB());
-          console.log("Volts Phase B to C:", sensor.getVoltsPhaseBToC());
-          console.log("Volts Phase A to C:", sensor.getVoltsPhaseAToC());
-          console.log("Volts Phase A to Neutral: ",
-                      sensor.getVoltsPhaseAToNeutral());
-          console.log("Volts Phase B to Neutral: ",
-                      sensor.getVoltsPhaseBToNeutral());
-          console.log("Volts Phase C to Neutral: ",
-                      sensor.getVoltsPhaseCToNeutral());
-
-          console.log("Current Phase A:", sensor.getCurrentPhaseA());
-          console.log("Current Phase B:", sensor.getCurrentPhaseB());
-          console.log("Current Phase C:", sensor.getCurrentPhaseC());
-
-          console.log("Avg Real Power (kW):", sensor.getAvgRealPower());
-          console.log("Min Real Power (kW):", sensor.getMinRealPower());
-          console.log("Max Real Power (kW):", sensor.getMaxRealPower());
-    }
-
-    console.log("");
-
-}, 2000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/hcsr04.js b/examples/javascript/hcsr04.js
deleted file mode 100644
index cfd9157..0000000
--- a/examples/javascript/hcsr04.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* Author: Abhishek Malik <abhishek.malik@intel.com>
-* Copyright (c) 2017 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var HCSR04 = require('jsupm_hcsr04');
-
-// Instantiate a HCSR04 ultrasonic distance sensor on digital pins D2 and D4
-var myHCSR04 = new HCSR04.HCSR04(2, 4);
-
-// Check every second for the presence of a magnetic field (south polarity)
-setInterval(function()
-{
-        console.log("Distance: " + myHCSR04.getDistance(0));
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/hdxxvxta.js b/examples/javascript/hdxxvxta.js
deleted file mode 100644
index f53409b..0000000
--- a/examples/javascript/hdxxvxta.js
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_hdxxvxta');
-
-
-/************** Main code **************/
-
-console.log("Initializing...");
-
-// Instantiate an HDXXVXTA instance, using A1 for humidity and A0
-// for temperature
-var sensor = new sensorObj.HDXXVXTA(1, 0);
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-
-    console.log("Humidity:", sensor.getHumidity(), "%");
-
-    console.log("");
-
-}, 1000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/hka5.js b/examples/javascript/hka5.js
deleted file mode 100644
index b11c895..0000000
--- a/examples/javascript/hka5.js
+++ /dev/null
@@ -1,63 +0,0 @@
-/*jslint node:true, vars:true, bitwise:true, unparam:true */
-/*jshint unused:true */
-
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_hka5');
-
-// Instantiate a HKA5 sensor on uart 0.  We don't use the set or
-// reset pins, so we pass -1 for them.
-var sensor = new sensorObj.HKA5(0, -1, -1);
-
-// update once every 2 seconds and output data
-setInterval(function()
-{
-    sensor.update()
-
-    console.log("PM 1  : "
-                + sensor.getPM1()
-                + " ug/m3");
-
-    console.log("PM 2.5: "
-                + sensor.getPM2_5()
-                + " ug/m3");
-
-    console.log("PM 10 : "
-                + sensor.getPM10()
-                + " ug/m3");
-
-    console.log();
-
-}, 2000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/hm11.js b/examples/javascript/hm11.js
deleted file mode 100644
index 2052be9..0000000
--- a/examples/javascript/hm11.js
+++ /dev/null
@@ -1,133 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-
-/************** Variables **************/
-// normal read/write mode
-var bufferLength = 256;
-
-var ble = require('jsupm_hm11');
-
-
-/************** Functions **************/
-function printUsage(progname)
-{
-	var outputStr = "Usage: " + progname + " [AT command]\n\n" +
-	"If an argument is supplied on the command line, that argument is\n" +
-	"sent to the module and the response is printed out.\n\n" +
-	"If no argument is used, then the address and PIN of the module\n" +
-	"are queried and the results printed out.\n\n"
-	console.log(outputStr);
-}
-
-// simple helper function to send a command and wait for a response
-function sendCommand(bleObj, cmd, callback)
-{
-	var bleBuffer = new ble.charArray(bufferLength);
-	bleObj.writeData(cmd, cmd.length);
-
-	// wait up to 1 second
-	if (bleObj.dataAvailable(1000))
-    {
-		bleObj.readData(bleBuffer, bufferLength);
-		var bleData = "";
-		// read only the number of characters
-		// specified by myGPSSensor.readData
-		for (var x = 0; x < bufferLength; x++)
-		{
-			if (bleBuffer.getitem(x) == '\0')
-				break;
-			else
-				bleData += bleBuffer.getitem(x);
-		}
-		console.log(bleData);
-    }
-	else
-		console.log("Timed out waiting for response");
-	if (callback)
-		callback();
-}
-
-/************** Main code **************/
-// Instantiate a HM11 BLE Module on UART 0
-var my_ble_obj = new ble.HM11(0);
-
-// make sure port is initialized properly. 9600 baud is the default.
-if (!my_ble_obj.setupTty(ble.int_B9600))
-{
-	console.log("Failed to setup tty port parameters");
-	process.exit(0);
-}
-
-printUsage(process.argv[1]);
-
-// Note: in nodeJS, command-line argument 0 is "node".
-// Command-line argument 1 is "hm11.js"
-// If you have a third argument, then it's a command for BLE
-if (process.argv.length > 2)
-{
-	console.log("Sending command line argument (" + process.argv[2] + ")...");
-	sendCommand(my_ble_obj, process.argv[2]);
-}
-else
-{
-	// query the module address
-	var addr = "AT+ADDR?";
-	console.log("Querying module address (" + addr + ")...");
-
-	// sending this command as a synchronous callback ensures better timing
-	var callbackFunc = function()
-	{
-		setTimeout(function()
-		{
-			// query the module address
-			var pin = "AT+PASS?";
-			console.log("Querying module PIN (" + pin + ")...");
-			sendCommand(my_ble_obj, pin);
-
-			// Other potentially useful commands are:
-			//
-			// AT+VERS? - query module version
-			// AT+ROLE0 - set as slave
-			// AT+ROLE1 - set as master
-			// AT+CLEAR - clear all previous settings
-			// AT+RESET - restart the device
-			//
-			// A comprehensive list is available from the datasheet at:
-			// http://www.seeedstudio.com/wiki/images/c/cd/Bluetooth4_en.pdf
-		}, 1000);
-	};
-	sendCommand(my_ble_obj, addr, callbackFunc);
-}
-
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-	my_ble_obj = null;
-	ble.cleanUp();
-	ble = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/hmc5883l.js b/examples/javascript/hmc5883l.js
deleted file mode 100644
index f6d9cf4..0000000
--- a/examples/javascript/hmc5883l.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load Compass module
-var hmc5883l = require('jsupm_hmc5883l');
-// load this on i2c
-var myCompass = new hmc5883l.Hmc5883l(0);
-// Set your declination from true north in radians
-myCompass.set_declination(0.2749);
-
-var coordsObj;
-// Print out the coordinates, heading, and direction every second
-setInterval(function()
-{
-	myCompass.update(); // Update the coordinates
-	coordsObj = myCompass.coordinates();
-	var coords = (coordsObj.getitem(0) + " ");
-	coords += (coordsObj.getitem(1) + " ");
-	coords += coordsObj.getitem(2);
-	var heading = round2Digits(myCompass.heading());
-	var direction = round2Digits(myCompass.direction());
-	var compassResults = "coords: " + coords + 
-		"    heading: " + heading + " direction " + direction;
-	console.log(compassResults);
-}, 1000);
-
-function round2Digits(num)
-{
-	return Math.round((num  + 0.00001) * 100) / 100;
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/hmtrp.js b/examples/javascript/hmtrp.js
deleted file mode 100644
index 6b9587b..0000000
--- a/examples/javascript/hmtrp.js
+++ /dev/null
@@ -1,158 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-function printUsage()
-{
-	var outputStr = "Usage:\n" +
-	"Pass a commandline argument (any argument) to this program\n" +
-	"to query the radio configuration and output it.  NOTE: the\n" +
-	"radio must be in CONFIG mode for this to work.\n\n" +
-	"Running this program without arguments will simply transmit\n" +
-	"'Hello World!' every second, and output any data received from\n" +
-	"another radio.\n\n";
-	console.log(outputStr);
-}
-
-var HMTRP_Radio = require('jsupm_hmtrp');
-
-// Instantiate a HMTRP radio device on uart 0
-var my_HMTRP_Radio = new HMTRP_Radio.HMTRP(0);
-
-var g_myInterval;
-var g_counter = 0;
-
-// normal read/write mode
-var bufferLength = 256;
-var radioBuffer = new HMTRP_Radio.charArray(bufferLength);
-
-// make sure port is initialized properly. 9600 baud is the default.
-if (!my_HMTRP_Radio.setupTty(HMTRP_Radio.int_B9600))
-{
-	console.log("Failed to setup tty port parameters");
-	process.exit(0);
-}
-
-printUsage();
-
-// By default, this radio simply transmits data sent via writeData()
-// and reads any available data via readData().
-
-// It can be placed into a configuration mode by grounding the
-// CONFIG pin on the module.  When this is done, the various
-// configuration query and config methods can be used.  In this
-// example, by default, we just read any data available fom the
-// device, and periodically transmit "Hello World".
-
-// If any argument was specified on the command line, do a simple
-// configuration query and output the results.  The radio must be in 
-// CONFIG mode for this to work.
-
-
-// Note that the first command-line argument
-// should be "node" and the second is "hmtrp.js".
-// The data we want would be the third... if it exists
-if (process.argv.length > 2)
-{
-	// config mode
-	var freq = new HMTRP_Radio.uint32Array(0);
-	var dataRate = new HMTRP_Radio.uint32Array(0);
-	var rxBandwidth = new HMTRP_Radio.uint16Array(0);
-	var modulation = new HMTRP_Radio.uint8Array(0);
-	var txPower = new HMTRP_Radio.uint8Array(0);
-	var uartBaud = new HMTRP_Radio.uint32Array(0);
-
-	if (my_HMTRP_Radio.getConfig(
-	freq, dataRate, rxBandwidth, modulation, txPower, uartBaud))
-	{
-		console.log("Radio configuration:");
-		var outputStr = "freq: " + freq.getitem(0) +
-		" dataRate: " + dataRate.getitem(0) +
-		" rxBandwidth: " + rxBandwidth.getitem(0) + "Khz";
-		console.log(outputStr);
-
-		outputStr = "modulation: " + parseInt(modulation.getitem(0));
-		outputStr += " Khz txPower: " + parseInt(txPower.getitem(0));
-		outputStr += " uartBaud: " + uartBaud.getitem(0);
-		console.log(outputStr);
-	}
-	else
-	{
-		var errString = "getConfig() failed.  Make sure the radio " +
-					"is in CONFIG mode.";
-		console.log(errString);
-	}
-}
-else
-{
-	console.log("Running in normal read/write mode.");
-	g_myInterval = setInterval(runRadio, 100); // 100ms
-}
-
-function runRadio()
-{
-	// we don't want the read to block in this example, so always
-	// check to see if data is available first.
-	if (my_HMTRP_Radio.dataAvailable())
-	{
-		var rv = my_HMTRP_Radio.readData(radioBuffer, bufferLength);
-
-		if (rv > 0)
-		{
-			var resultStr = "";
-			for (var x = 0; x < rv; x++)
-				resultStr += radioBuffer.getitem(x);
-			console.log("Received: " + resultStr);
-		}
-
-		if (rv < 0) // some sort of read error occurred
-		{
-			console.log("Port read error.");
-			return;
-		}
-	}	
-	g_counter++;
-	// every second, transmit "Hello World"
-	if (g_counter > 10)
-	{
-		var msg = "Hello World!";
-
-		console.log("Transmitting " + msg + "...");
-
-		// Adding 1 for NULL terminator.
-		// Note that SWIG automatically adds a NULL terminator,
-		// so no need to NULL-terminate ourselves.
-		// Just increment the message length to include
-		// the NULL that's already there
-		my_HMTRP_Radio.writeData(msg, (msg.length + 1));
-		g_counter = 0;
-	}
-}
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(g_myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/hp20x.js b/examples/javascript/hp20x.js
deleted file mode 100644
index e32f387..0000000
--- a/examples/javascript/hp20x.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var barometerObj = require('jsupm_hp20x');
-
-// Instantiate an HP20X on default I2C bus and address
-var bar = new barometerObj.HP20X();
-
-// Initialize the device with default values
-bar.init();
-
-// Output data every second until interrupted
-setInterval(function()
-{
-    console.log("Temperature: " + bar.getTemperature() + " Celsius");
-    console.log("Pressure:    " + bar.getPressure() + " Millibars");
-    console.log("Altitude:    " + bar.getAltitude() + " Meters");
-    console.log("");
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    bar = null;
-    barometerObj.cleanUp();
-    barometerObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/ht9170.js b/examples/javascript/ht9170.js
deleted file mode 100644
index 9644ed7..0000000
--- a/examples/javascript/ht9170.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var ht9170_dtmf_lib = require("jsupm_ht9170");
-
-// Instantiate a DTMF decoder
-var dtmf_obj = new ht9170_dtmf_lib.HT9170(12, 11, 10, 9, 8);
-
-// Now we just spin in a loop, sleeping every 100ms, checking to see
-// if a digit is available.  If so, we decode and print the digit,
-// and continue looping.
-var myInterval = setInterval(function()
-{
-	if (dtmf_obj.digitReady())
-	{
-		console.log("Got DTMF code: " + dtmf_obj.decodeDigit());
-		// now spin until digitReady() goes false again
-		while (dtmf.digitReady())
-			;
-	}
-}, 100);
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-  clearInterval(myInterval);
-	dtmf_obj = null;
-	ht9170_dtmf_lib.cleanUp();
-	ht9170_dtmf_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/htu21d.js b/examples/javascript/htu21d.js
deleted file mode 100644
index 1ec055c..0000000
--- a/examples/javascript/htu21d.js
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//Load the library
-var upm = require('jsupm_htu21d');
-
-//Create a sensor instance
-var sensor = new upm.HTU21D(0);
-
-//Update sensor data and print the values every second
-var ival = setInterval(function () {
-    sensor.sampleData();
-    console.log("Relative Humidity: " + sensor.getHumidity() + "%");
-    console.log("Compensated RH: " + sensor.getCompRH() + "%");
-    console.log("Temperature: " + sensor.getTemperature() + "C");
-    console.log("Dew Point: " + sensor.getDewPoint() + "C");
-}, 1000);
-
-//Clear interval and exit on ^C
-process.on('SIGINT', function()
-{
-    clearInterval(ival);
-    process.exit(0);
-});
diff --git a/examples/javascript/hwxpxx.js b/examples/javascript/hwxpxx.js
deleted file mode 100644
index ae979d2..0000000
--- a/examples/javascript/hwxpxx.js
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_hwxpxx');
-
-
-/************** Main code **************/
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device " + defaultDev);
-console.log("Initializing...");
-
-// Instantiate an HWXPXX instance, using MODBUS slave address 3, and
-// default comm parameters (19200, 8, N, 2)
-var sensor = new sensorObj.HWXPXX(defaultDev, 3);
-
-// output the Slave ID (manufacturer, model, serno)
-console.log("Slave ID:", sensor.getSlaveID());
-
-// stored temperature and humidity offsets
-console.log("Temperature Offset:", sensor.getTemperatureOffset());
-console.log("Humidity Offset:", sensor.getHumidityOffset());
-
-console.log("");
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-
-    console.log("Humidity:", sensor.getHumidity(), "%");
-
-    console.log("Slider:", sensor.getSlider(), "%");
-
-    console.log("Override Switch Status:", sensor.getOverrideSwitchStatus());
-
-    console.log("");
-
-}, 1000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/hx711.js b/examples/javascript/hx711.js
deleted file mode 100644
index 8393734..0000000
--- a/examples/javascript/hx711.js
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
-*
-* Author: Rafael da Mata Neri <rafael.neri@gmail.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var hx711 = require('jsupm_hx711');
-// Instantiate a HX711 data on digital pin D3 and clock on digital pin D2
-var scale = new hx711.HX711(3, 2);
-
-setTimeout(function(){
-	// 2837: value obtained via calibration
-	scale.setScale(2837);
-	scale.tare(2);
-	setInterval(function(){
-		console.log(scale.getUnits());
-	}, 1000);
-}, 1000);
diff --git a/examples/javascript/ili9341.js b/examples/javascript/ili9341.js
deleted file mode 100644
index b65dd79..0000000
--- a/examples/javascript/ili9341.js
+++ /dev/null
@@ -1,77 +0,0 @@
-
-/**
- * Author: Shawn Hymel
- * Copyright (c) 2016 SparkFun Electronics
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var ili9341 = require('jsupm_ili9341');
-
-// Pins (Edison)
-// CS_LCD   GP44 (MRAA 31)
-// CS_SD    GP43 (MRAA 38) unused
-// DC       GP12 (MRAA 20)
-// RESEST   GP13 (MRAA 14)
-var lcd = new ili9341.ILI9341(31, 38, 20, 14);
-
-// Fill the screen with a solid color
-lcd.fillScreen(lcd.color565(0, 40, 16));
-
-// Draw some shapes
-lcd.drawFastVLine(10, 10, 100, ili9341.ILI9341_RED);
-lcd.drawFastHLine(20, 10, 50, ili9341.ILI9341_CYAN);
-lcd.drawLine(160, 30, 200, 60, ili9341.ILI9341_GREEN);
-lcd.fillRect(20, 30, 75, 60, ili9341.ILI9341_ORANGE);
-lcd.drawCircle(70, 50, 20, ili9341.ILI9341_PURPLE);
-lcd.fillCircle(120, 50, 20, ili9341.ILI9341_PURPLE);
-lcd.drawTriangle(50, 100, 10, 140, 90, 140, ili9341.ILI9341_YELLOW);
-lcd.fillTriangle(150, 100, 110, 140, 190, 140, ili9341.ILI9341_YELLOW);
-lcd.drawRoundRect(20, 150, 50, 30, 10, ili9341.ILI9341_RED);
-lcd.drawRoundRect(130, 150, 50, 30, 10, ili9341.ILI9341_RED);
-lcd.fillRoundRect(75, 150, 50, 30, 10, ili9341.ILI9341_RED);
-
-// Write some text
-lcd.setCursor(0, 200);
-lcd.setTextColor(ili9341.ILI9341_LIGHTGREY);
-lcd.setTextWrap(true);
-lcd.setTextSize(1);
-lcd.print("Text 1\n");
-lcd.setTextSize(2);
-lcd.print("Text 2\n");
-lcd.setTextSize(3);
-lcd.print("Text 3\n");
-lcd.setTextSize(4);
-lcd.print("Text 4\n");
-
-// Test screen rotation
-function rotateScreen(r) {
-    lcd.setRotation(r);
-    lcd.fillRect(0, 0, 5, 5, ili9341.ILI9341_WHITE);
-    if (r < 4) {
-        r++;
-        setTimeout(function() { rotateScreen(r); }, 1000);
-    }
-}
-rotateScreen(0);
-
-// Invert colors, wait, then revert back
-setTimeout(function() { lcd.invertDisplay(true); }, 4000);
-setTimeout(function() { lcd.invertDisplay(false); }, 6000);
\ No newline at end of file
diff --git a/examples/javascript/ims.js b/examples/javascript/ims.js
deleted file mode 100644
index e8d1bde..0000000
--- a/examples/javascript/ims.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_ims');
-
-// Instantiate a IMS instance using bus 0 and default i2c address
-var sensor = new sensorObj.IMS(0);
-
-setInterval(function()
-{
-    console.log("Version: "
-                + sensor.get_version()
-                + " light: "
-                + sensor.get_light()
-                + " moisture: "
-                + sensor.get_moisture()
-                + " temp: "
-                + sensor.get_temperature().toFixed(2)
-                + " C");
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/ina132.js b/examples/javascript/ina132.js
deleted file mode 100644
index d2c92bc..0000000
--- a/examples/javascript/ina132.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var differential_amplifier_lib = require("jsupm_ina132");
-
-// Tested with the INA132 Differential Amplifier Sensor module.
-// Instantiate an INA132 on analog pin A0
-var differential_amplifier_obj = new differential_amplifier_lib.INA132(0);
-
-var myInterval = setInterval(function()
-{
-	console.log(roundNum(differential_amplifier_obj.value(), 5));
-}, 1000);
-
-function roundNum(num, decimalPlaces)
-{
-	var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-	var numerator = Math.round((num + extraNum) * (Math.pow(10, decimalPlaces)));
-	var denominator = Math.pow(10, decimalPlaces);
-	return (numerator / denominator);
-}
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	differential_amplifier_obj = null;
-	differential_amplifier_lib.cleanUp();
-	differential_amplifier_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/isd1820.js b/examples/javascript/isd1820.js
deleted file mode 100644
index 6ebb9aa..0000000
--- a/examples/javascript/isd1820.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var recorder_lib = require("jsupm_isd1820");
-
-// Instantiate a ISD1820 on digital pins 2 (play) and 3 (record)
-// This example was tested on the Grove Recorder.
-var myRecorder = new recorder_lib.ISD1820(2, 3);
-
-
-var doRecord = false;
-
-if (process.argv.length > 2)
-	doRecord = true;
-
-// if an argument was specified (any argument), go into record mode,
-// else playback a previously recorded sample
-console.log("Supply any argument to the command line to record.");
-console.log("Running this example without arguments will play back ");
-console.log("any previously recorded sound.");
-console.log("There is approximately 10 seconds of recording time.\n");
-
-// depending on what was selected, do it, and sleep for 15 seconds
-if (doRecord)
-	myRecorder.record(true);
-else
-	myRecorder.play(true);
-
-// There are about 10 seconds of recording/playback time, so we will
-// sleep for a little extra time.
-console.log("Sleeping for 15 seconds...");
-
-setTimeout(function()
-{
-	// turn off whatever we were doing.
-	if (doRecord)
-		myRecorder.record(false);
-	else
-		myRecorder.play(false);
-	console.log("Exiting");
-	myRecorder = null;
-	recorder_lib.cleanUp();
-	recorder_lib = null;
-	process.exit(0);
-}, 15 * 1000);
diff --git a/examples/javascript/itg3200.js b/examples/javascript/itg3200.js
deleted file mode 100644
index 695df0d..0000000
--- a/examples/javascript/itg3200.js
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
-* Author: Sarah Knepper <sarah.knepper@intel.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load gyroscope module
-var itg3200 = require('jsupm_itg3200');
-// load this on i2c
-var gyro = new itg3200.Itg3200(0);
-
-var rot;
-var ang;
-
-// Note: Sensor not supported on Intel Edison with Arduino breakout
-setInterval(function()
-{
-    gyro.update(); // Update the data
-    rot = gyro.getRawValues(); // Read raw sensor data
-    ang = gyro.getRotation(); // Read rotational speed (deg/sec)
-    var rots = (rot.getitem(0) + " ");
-    rots += (rot.getitem(1) + " ");
-    rots += rot.getitem(2);
-    var temp = round2Digits(gyro.getTemperature());
-    var raw = round2Digits(gyro.getRawTemp());
-    console.log("Raw: " + rots);
-    console.log("AngX: " + round2Digits(ang.getitem(0)));
-    console.log("AngY: " + round2Digits(ang.getitem(1)));
-    console.log("AngZ: " + round2Digits(ang.getitem(2)));
-    console.log("Temp: " + temp + " Raw: " + raw);
-}, 1000);
-
-function round2Digits(num)
-{
-    return Math.round((num + 0.00001) * 100) / 100;
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/jhd1313m1-lcd.js b/examples/javascript/jhd1313m1-lcd.js
deleted file mode 100644
index aefebd5..0000000
--- a/examples/javascript/jhd1313m1-lcd.js
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load lcd module on I2C
-var LCD = require('jsupm_jhd1313m1');
-
-// Initialize Jhd1313m1 at 0x62 (RGB_ADDRESS) and 0x3E (LCD_ADDRESS) 
-var myLcd = new LCD.Jhd1313m1 (0, 0x3E, 0x62);
-
-myLcd.setCursor(0,0);
-// RGB Blue
-//myLcd.setColor(53, 39, 249);
-// RGB Red
-myLcd.setColor(255, 0, 0);
-myLcd.write('Hello World');  
-myLcd.setCursor(1,2);
-myLcd.write('Hello World');
diff --git a/examples/javascript/joystick12.js b/examples/javascript/joystick12.js
deleted file mode 100644
index 1ac467c..0000000
--- a/examples/javascript/joystick12.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var joystick = require('jsupm_joystick12');
-
-// Instantiate a joystick on analog pins A0 and A1
-var myJoystick = new joystick.Joystick12(0, 1);
-
-// Print the X and Y input values every second
-setInterval(function()
-{
-	var XString = "Driving X:" + roundNum(myJoystick.getXInput(), 6);
-	var YString = ": and Y:" + roundNum(myJoystick.getYInput(), 6);
-	console.log(XString + YString);
-}, 1000);
-
-function roundNum(num, decimalPlaces)
-{
-	var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-	var numerator = Math.round((num + extraNum) * (Math.pow(10, decimalPlaces)));
-	var denominator = Math.pow(10, decimalPlaces);
-	return (numerator / denominator);
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/kx122.js b/examples/javascript/kx122.js
deleted file mode 100644
index b61c17e..0000000
--- a/examples/javascript/kx122.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
-* Author: Noel Eck <noel.eck@intel.com>
-* Copyright (c) 2017 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var kx122 = require("jsupm_kx122");
-
-// Instantiate a KX122
-var kx122_sensor = new kx122.KX122(0, -1, 24);
-
-// Reset the device
-kx122_sensor.softwareReset();
-
-// Reset the device
-kx122_sensor.deviceInit(kx122.KX122_ODR_50,
-		kx122.HIGH_RES,
-		kx122.KX122_RANGE_2G);
-
-var myInterval = setInterval(function()
-{
-	data = kx122_sensor.getAccelerationDataVector();
-	console.log("Acceleration x: " + data.get(0)
-		+ " y: " + data.get(1)
-		+ " z: " + data.get(2));
-}, 1000);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/kxtj3.js b/examples/javascript/kxtj3.js
deleted file mode 100755
index e19740a..0000000
--- a/examples/javascript/kxtj3.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
-* The MIT License (MIT)
-*
-* Author: Assam Boudjelthia
-* Copyright (c) 2018 Rohm Semiconductor.
-*
-* Permission is hereby granted, free of charge, to any person obtaining a copy of
-* this software and associated documentation files (the "Software"), to deal in
-* the Software without restriction, including without limitation the rights to
-* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-* the Software, and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included in all
-* copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var kxtj3 = require("jsupm_kxtj3");
-
-var kxtj3_sensor = new kxtj3.KXTJ3(0x0, 0x0f);
-
-kxtj3_sensor.SensorInit(
-	kxtj3.KXTJ3_ODR_25,
-	kxtj3.HIGH_RES,
-	kxtj3.KXTJ3_RANGE_16G_14);
-
-var waitTime = kxtj3_sensor.GetAccelerationSamplePeriod();
-var counter = 10;
-console.log("Setting settings:\nODR: 25 Hz\nResolution: \
-			High\nAcceleration range: 16g with 14bits");
-console.log("Acceleration: ");
-var interval = setInterval(function() {
-	data = kxtj3_sensor.GetAccelerationVector();
-	console.log(
-		"x: " + data.get(0) + " y: " + data.get(1) + " z: " + data.get(2)
-	);
-	counter--;
-	if (counter == 0) {
-		clearInterval(interval);
-	}
-}, waitTime * 1000);
-
-process.on("SIGINT", function() {
-	clearInterval(interval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/l298-stepper.js b/examples/javascript/l298-stepper.js
deleted file mode 100644
index a5e6140..0000000
--- a/examples/javascript/l298-stepper.js
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var HBridge_lib = require('jsupm_l298');
-
-// Instantiate a Stepper motor on a L298 Dual H-Bridge.
-// This was tested with the NEMA-17 12V, 350mA, with 200 steps per rev.
-var myHBridge_obj = new HBridge_lib.L298(200, 3, 4, 7, 8, 9);
-
-/**************************************
- * Instantiate H-bridge stepper object
-***************************************/
-myHBridge_obj.goForward = function()
-{
-	myHBridge_obj.setSpeed(10); // 10 RPMs
-	myHBridge_obj.setDirection(HBridge_lib.L298.DIR_CW);
-	myHBridge_obj.enable(true);
-	console.log("Rotating 1 full revolution at 10 RPM speed.");
-	// move 200 steps, a full rev
-	myHBridge_obj.stepperSteps(200);
-};
-
-myHBridge_obj.reverseDirection = function()
-{
-	console.log("Rotating 1/2 revolution in opposite direction at 10 RPM speed.");
-	myHBridge_obj.setDirection(HBridge_lib.L298.DIR_CCW);
-	myHBridge_obj.stepperSteps(100);
-};
-
-myHBridge_obj.stop = function()
-{
-	myHBridge_obj.enable(false);
-};
-
-myHBridge_obj.quit = function()
-{
-	myHBridge_obj = null;
-	HBridge_lib.cleanUp();
-	HBridge_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-};
-
-
-/************************
- * Run H-bridge stepper!
-*************************/
-myHBridge_obj.goForward();
-setTimeout(myHBridge_obj.reverseDirection, 2000);
-setTimeout(function()
-{
-	myHBridge_obj.stop();
-	myHBridge_obj.quit();
-}, 4000);
diff --git a/examples/javascript/l298.js b/examples/javascript/l298.js
deleted file mode 100644
index aab8a14..0000000
--- a/examples/javascript/l298.js
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var HBridge_lib = require('jsupm_l298');
-
-// Instantiate one of the 2 possible DC motors on a L298 Dual
-// H-Bridge.  For controlling a stepper motor, see the l298-stepper
-// example.
-var myHBridge_obj = new HBridge_lib.L298(3, 4, 7);
-
-/*****************************
- * Instantiate H-bridge object
-******************************/
-myHBridge_obj.goForward = function()
-{
-	console.log("Starting motor at 50% for 3 seconds...");
-	myHBridge_obj.setSpeed(50);
-	myHBridge_obj.setDirection(HBridge_lib.L298.DIR_CW);
-	myHBridge_obj.enable(true);
-};
-
-myHBridge_obj.reverseDirection = function()
-{
-	console.log("Reversing direction...");
-	myHBridge_obj.setDirection(HBridge_lib.L298.DIR_NONE); // fast stop
-	myHBridge_obj.setDirection(HBridge_lib.L298.DIR_CCW);
-};
-
-myHBridge_obj.stop = function()
-{
-	myHBridge_obj.setSpeed(0);
-	myHBridge_obj.enable(false);
-};
-
-myHBridge_obj.quit = function()
-{
-	myHBridge_obj = null;
-	HBridge_lib.cleanUp();
-	HBridge_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-};
-
-
-/************************
- * Run H-bridge!
-*************************/
-myHBridge_obj.goForward();
-setTimeout(myHBridge_obj.reverseDirection, 3000);
-setTimeout(function()
-{
-	myHBridge_obj.stop();
-	myHBridge_obj.quit();
-}, 6000);
diff --git a/examples/javascript/lcdks.js b/examples/javascript/lcdks.js
deleted file mode 100644
index 2f5b71c..0000000
--- a/examples/javascript/lcdks.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var lcdksObj = require('jsupm_lcdks');
-
-// Instantiate a LCDKS (LCD Keypad Shield) using default pins
-
-// NOTE: The default pins do not include support for a gpio
-// controlled backlight.  If you need one, you will need to specify
-// all neccessary pins to the constructor.
-var lcd = new lcdksObj.LCDKS();
-
-lcd.setCursor(0,0);
-lcd.write("LCDKS driver");
-lcd.setCursor(1,2);
-lcd.write("Hello World");
-
-// output current key value every second.
-setInterval(function()
-{
-    console.log("Button value: " + lcd.getKeyValue());
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    lcd = null;
-    lcdksObj.cleanUp();
-    lcdksObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/ldt0028.js b/examples/javascript/ldt0028.js
deleted file mode 100644
index e57dbc6..0000000
--- a/examples/javascript/ldt0028.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load Grove module
-var sensorModule = require('jsupm_ldt0028');
-
-var NUMBER_OF_SECONDS = 10;
-var MILLISECONDS_PER_SECOND = 1000;
-var SAMPLES_PER_SECOND = 50;
-var THRESHOLD = 100;
-
-// Create the LDT0-028 Piezo Vibration Sensor object using AIO pin 0
-var sensor = new sensorModule.LDT0028(0);
-
-// Read the signal every 20 milliseconds for 10 seconds
-console.log("For the next " + NUMBER_OF_SECONDS + " seconds, " +
-            SAMPLES_PER_SECOND + " samples will be taken every second.");
-console.log("");
-var buffer = [];
-for (var i=0; i < NUMBER_OF_SECONDS * SAMPLES_PER_SECOND; i++) {
-    buffer.push(sensor.getSample());
-    delay(MILLISECONDS_PER_SECOND / SAMPLES_PER_SECOND );
-}
-
-// Print the number of times the reading was greater than the threshold
-var count = 0;
-for (var i=0; i < NUMBER_OF_SECONDS * SAMPLES_PER_SECOND; i++) {
-    if (buffer[i] > THRESHOLD) {
-        count++;
-    }
-}
-console.log(sensor.name() + " exceeded the threshold value of " +
-        THRESHOLD + " a total of " + count + " times,");
-console.log("out of a total of " + NUMBER_OF_SECONDS*SAMPLES_PER_SECOND +
-            " readings.");
-console.log("");
-
-// Print a graphical representation of the average value sampled
-// each second for the past 10 seconds, using a scale factor of 15
-console.log("Now printing a graphical representation of the average reading ");
-console.log("each second for the last " + NUMBER_OF_SECONDS + " seconds.");
-var SCALE_FACTOR = 15;
-for (var i=0; i < NUMBER_OF_SECONDS; i++) {
-    var sum = 0;
-    for (var j=0; j < SAMPLES_PER_SECOND; j++) {
-        sum += buffer[i*SAMPLES_PER_SECOND+j];
-    }
-    var average = sum / SAMPLES_PER_SECOND;
-    var stars_to_print = Math.round(average / SCALE_FACTOR);
-    var string = "(" + ("    " + Math.round(average)).slice(-4) + ") | ";
-    for (var j=0; j < stars_to_print; j++) {
-        string += "*";
-    }
-    console.log(string);
-}
-
-function delay( milliseconds ) {
-    var startTime = Date.now();
-    while (Date.now() - startTime < milliseconds);
-}
-
diff --git a/examples/javascript/le910.js b/examples/javascript/le910.js
deleted file mode 100644
index 05f39e4..0000000
--- a/examples/javascript/le910.js
+++ /dev/null
@@ -1,166 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_uartat');
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device:", defaultDev);
-console.log("Initializing...");
-
-// Instantiate a UARTAT sensor on defaultDev at 115200 baud.
-var sensor = new sensorObj.UARTAT(defaultDev, 115200);
-
-// This is a simplistic example that tries to configure the LE910,
-// and use it's built-in socket capabilities to connect to a
-// remote host, obtain a small piece of data, and return it.  It's
-// mainly intended to show you how you can use the various AT
-// commands supported by the LE910 to perform simple tasks.
-//
-// You must have a valid SIM card with an active data plan for
-// this example to do anything interesting.
-//
-// See the LE910 AT Commands reference for full information on
-// what is possible with this device.  The uartat driver is
-// intended to make it a little easier to control AT-style
-// devices, but is by no means a full-featured communication
-// infrastructure.  A "real" application will probably need to be
-// much more sophisticated with regard to parsing, doing retries,
-// etc.
-//
-// For experimenting with various AT commands, try using an
-// interactive terminal emulator like minicom or screen.
-
-// make sure we are in command mode
-if (!sensor.inCommandMode())
-{
-    console.log("Not in command mode, switching...");
-    sensor.commandMode("+++", 1000);
-}
-
-// flter out CR's in responses by default
-sensor.filterCR(true);
-
-console.log("Configuring modem...");
-
-// discard any waiting characters
-sensor.drain();
-
-// reset modem
-sensor.command("ATZ\r");
-
-// turn off command echo, set verbosity to 1, enable data
-// connection mode
-sensor.command("ATE0 V1 +FCLASS=0\r");
-sensor.drain();
-
-// Now issue some commands and output the results.
-
-console.log("Modem and SIM information:");
-
-var buffer;
-var bufferLength = 256;
-
-buffer = sensor.commandWithResponse("AT+ICCID\r", bufferLength);
-if (buffer.length > 0)
-{
-    console.log("ICCID (SIM ID):", buffer);
-}
-
-buffer = sensor.commandWithResponse("AT+CGSN=1\r", bufferLength);
-if (buffer.length > 0)
-{
-    console.log("IMEI: ", buffer);
-}
-
-// see if we are on the network....
-buffer = sensor.commandWithResponse("AT+CREG?\r", bufferLength);
-if (buffer.length > 0)
-{
-    console.log(buffer);
-
-    // look for "CGREG: 0,1" or "CGREG: 0,5"
-    if (sensor.find(buffer, "CREG: 0,1") ||
-        sensor.find(buffer, "CREG: 0,5"))
-    {
-        console.log("Connected to the cell data network.");
-
-        // wait up to 5 seconds for responses now...
-        sensor.setResponseWaitTime(5000);
-
-        // setup PDP context (socket 1).  An ERROR repsonse is
-        // possible if the PDP context is already set up.
-        sensor.command("AT#SGACT=1,1\r");
-
-        // setup a TCP socket to nist.gov and read the timestamp.
-
-        console.log("Connecting to time-a.nist.gov, TCP port 13");
-
-        // Wait up to 60 seconds to find the NO CARRIER
-        // string, which will be present at the end, if the
-        // connection succeeded and the requested data was
-        // obtained.
-        buffer =
-            sensor.commandWaitFor("AT#SD=1,0,13,\"time-a.nist.gov\"\r",
-                                  bufferLength, "\nNO CARRIER\n", 60000);
-        if (buffer.length > 0)
-        {
-            // print out the response
-            console.log("RESPONSE: ");
-            console.log(buffer);
-        }
-        else
-        {
-            console.log("No response.");
-        }
-
-        // destroy PDP context
-        sensor.setResponseWaitTime(250);
-        sensor.command("AT#SGACT=1,0\r");
-    }
-    else
-    {
-        console.log("You do not appear to be connected to the network...");
-    }
-}
-else
-{
-    console.log("Error executing query\n");
-}
-
-// reset the modem
-sensor.command("ATZ\r");
-
-console.log("Exiting");
-
-sensor = null;
-sensorObj.cleanUp();
-sensorObj = null;
-process.exit(0);
diff --git a/examples/javascript/led.js b/examples/javascript/led.js
deleted file mode 100644
index 8a5f110..0000000
--- a/examples/javascript/led.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load UPM module
-var ledSensor = require('jsupm_led');
-
-// Create the LED object using GPIO pin 2
-var led = new ledSensor.Led(2);
-
-// Print the name
-console.log(led.name());
-
-// Turn the LED on and off 10 times, pausing one second
-// between transitions
-var i = 0;
-var waiting = setInterval(function() {
-        if ( i % 2 == 0 ) {
-            led.on();
-        } else {
-            led.off();
-        }
-        i++;
-        if ( i == 20 ) clearInterval(waiting);
-        }, 1000);
-            
diff --git a/examples/javascript/light.js b/examples/javascript/light.js
deleted file mode 100644
index 5b93e9d..0000000
--- a/examples/javascript/light.js
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load light module
-var sensor = require('jsupm_light');
-
-// Create the light sensor object using AIO pin 0
-var light = new sensor.Light(0);
-
-// Read the input and print both the normalized ADC value and a rough
-// lux value, waiting one second between readings
-function readLightSensorValue() {
-    console.log(light.name() + " normalized value is " + light.getNormalized() +
-            ", which is roughly " + light.value() + " lux");
-}
-setInterval(readLightSensorValue, 1000);
diff --git a/examples/javascript/linefinder.js b/examples/javascript/linefinder.js
deleted file mode 100644
index 3c0bf4a..0000000
--- a/examples/javascript/linefinder.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var lineFinderSensor = require('jsupm_linefinder');
-
-// Instantiate a  line finder sensor on digital pin D2
-var myLineFinderSensor = new lineFinderSensor.LineFinder(2);
-
-// Check every second for the presence of white detection
-setInterval(function()
-{
-	if (myLineFinderSensor.whiteDetected())
-		console.log("White detected.");
-	else
-		console.log("Black detected.");
-}, 1000);
-
-// Turn relay off when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/lis2ds12.js b/examples/javascript/lis2ds12.js
deleted file mode 100644
index f1a96bc..0000000
--- a/examples/javascript/lis2ds12.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_lis2ds12');
-
-// Instantiate a LIS2DS12 instance using default i2c bus and address
-var sensor = new sensorObj.LIS2DS12();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// LIS2DS12(0, -1, 10);
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getAccelerometer();
-    console.log("Accelerometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " g");
-
-    // we show both C and F for temperature
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/lis3dh.js b/examples/javascript/lis3dh.js
deleted file mode 100644
index a67c007..0000000
--- a/examples/javascript/lis3dh.js
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Alex Tereschenko <alext.mkrs@gmail.com>
- * Copyright (c) 2018 Alex Tereschenko.
- *
- * Based on LIS2DS12 example by
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_lis3dh');
-
-// Instantiate a LIS3DH instance using default i2c bus and address
-var sensor = new sensorObj.LIS3DH();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// LIS3DH(0, -1, 10);
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getAccelerometer();
-    console.log("Accelerometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " g");
-
-    // we show both C and F for temperature
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/lm35.js b/examples/javascript/lm35.js
deleted file mode 100644
index d3284a5..0000000
--- a/examples/javascript/lm35.js
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_lm35');
-
-// Instantiate a LM35 on analog pin A0, with a default analog
-// reference voltage of 5.0
-var sensor = new sensorObj.LM35(0);
-
-// Every half second, sample the sensor and output the temperature
-
-setInterval(function()
-{
-    console.log("Temperature: " + sensor.getTemperature() + " C");
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/loudness.js b/examples/javascript/loudness.js
deleted file mode 100644
index 62caa7a..0000000
--- a/examples/javascript/loudness.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_loudness');
-
-// Instantiate a Loudness sensor on analog pin A0, with an analog
-// reference voltage of 5.0
-var sensor = new sensorObj.Loudness(0, 5.0);
-
-// Every tenth of a second, sample the loudness and output it's
-// corresponding analog voltage. 
-
-setInterval(function()
-{
-    console.log("Detected loudness (volts): " + sensor.loudness());
-}, 100);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/lsm303agr.js b/examples/javascript/lsm303agr.js
deleted file mode 100644
index 540abe9..0000000
--- a/examples/javascript/lsm303agr.js
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_lsm303agr');
-
-// Instantiate a LSM303AGR instance using default i2c bus and address
-var sensor = new sensorObj.LSM303AGR();
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getAccelerometer();
-    console.log("Accelerometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " g");
-
-    data = sensor.getMagnetometer();
-    console.log("Magnetometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " uT");
-
-    console.log("Temperature: "
-                + sensor.getTemperature());
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/lsm303d.js b/examples/javascript/lsm303d.js
deleted file mode 100644
index c9ff59e..0000000
--- a/examples/javascript/lsm303d.js
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * The MIT License
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_lsm303d');
-
-// Instantiate a LSM303D instance using default i2c bus and address
-var sensor = new sensorObj.LSM303D();
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getAccelerometer();
-    console.log("Accelerometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " g");
-
-    data = sensor.getMagnetometer();
-    console.log("Magnetometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " uT");
-
-    console.log("Temperature: "
-                + sensor.getTemperature());
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/lsm303dhl.js b/examples/javascript/lsm303dhl.js
deleted file mode 100644
index 225322b..0000000
--- a/examples/javascript/lsm303dhl.js
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var accelrCompassSensor = require('jsupm_lsm303dlh');
-
-// Instantiate LSM303DLH compass on I2C
-var myAccelrCompass = new accelrCompassSensor.LSM303DLH(0);
-
-var successFail, coords, outputStr, accel;
-var myInterval = setInterval(function()
-{
-	// Load coordinates into LSM303DLH object
-	successFail = myAccelrCompass.getCoordinates();
-	// in XYZ order. The sensor returns XZY,
-	// but the driver compensates and makes it XYZ
-	coords = myAccelrCompass.getRawCoorData();
-
-    // Print out the X, Y, and Z coordinate data using two different methods
-	outputStr = "coor: rX " + coords.getitem(0)
-					+ " - rY " + coords.getitem(1)
-					+ " - rZ " + coords.getitem(2);
-	console.log(outputStr);
-	outputStr = "coor: gX " + myAccelrCompass.getCoorX()
-				+ " - gY " + myAccelrCompass.getCoorY()
-				+ " - gZ " + myAccelrCompass.getCoorZ();
-	console.log(outputStr);
-
-    // Get and print out the heading
-	console.log("heading: " + myAccelrCompass.getHeading());
-
-    // Get the acceleration
-	myAccelrCompass.getAcceleration();
-	accel = myAccelrCompass.getRawAccelData();
-    // Print out the X, Y, and Z acceleration data using two different methods
-	outputStr = "acc: rX " + accel.getitem(0)
-				+ " - rY " + accel.getitem(1)
-				+ " - Z " + accel.getitem(2);
-	console.log(outputStr);
-	outputStr = "acc: gX " + myAccelrCompass.getAccelX()
-				+ " - gY " + myAccelrCompass.getAccelY()
-				+ " - gZ " + myAccelrCompass.getAccelZ();
-	console.log(outputStr);
-	console.log(" ");
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myAccelrCompass = null;
-	accelrCompassSensor.cleanUp();
-	accelrCompassSensor = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/lsm6ds3h.js b/examples/javascript/lsm6ds3h.js
deleted file mode 100644
index 7e278f8..0000000
--- a/examples/javascript/lsm6ds3h.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_lsm6ds3h');
-
-// Instantiate a LSM6DS3H instance using default i2c bus and address
-var sensor = new sensorObj.LSM6DS3H();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// LSM6DS3H(0, -1, 10);
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getAccelerometer();
-    console.log("Accelerometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " g");
-
-    data = sensor.getGyroscope();
-    console.log("Gyroscope x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " dps");
-
-    // we show both C and F for temperature
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/lsm6dsl.js b/examples/javascript/lsm6dsl.js
deleted file mode 100644
index c1b3117..0000000
--- a/examples/javascript/lsm6dsl.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016-2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_lsm6dsl');
-
-// Instantiate a LSM6DSL instance using default i2c bus and address
-var sensor = new sensorObj.LSM6DSL();
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// LSM6DSL(0, -1, 10);
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    var data = sensor.getAccelerometer();
-    console.log("Accelerometer x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " g");
-
-    data = sensor.getGyroscope();
-    console.log("Gyroscope x: "
-                + data.get(0)
-                + " y: " + data.get(1)
-                + " z: " + data.get(2)
-                + " dps");
-
-    // we show both C and F for temperature
-    console.log("Compensation Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log();
-
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/lsm9ds0.js b/examples/javascript/lsm9ds0.js
deleted file mode 100644
index aa25c0a..0000000
--- a/examples/javascript/lsm9ds0.js
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_lsm9ds0');
-
-// Instantiate an LSM9DS0 using default parameters (bus 1, gyro addr 6b,
-// xm addr 1d)
-var sensor = new sensorObj.LSM9DS0();
-
-// Initialize the device with default values
-sensor.init();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// Output data every half second until interrupted
-setInterval(function()
-{
-    sensor.update();
-    
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer: AX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
-
-    sensor.getGyroscope(x, y, z);
-    console.log("Gyroscope:     GX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
- 
-    sensor.getMagnetometer(x, y, z);
-    console.log("Magnetometer:  MX: " + sensorObj.floatp_value(x) + 
-                " MY: " + sensorObj.floatp_value(y) + 
-                " MZ: " + sensorObj.floatp_value(z));
-
-    console.log("Temperature:   " + sensor.getTemperature());
- 
-    console.log();
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/m24lr64e.js b/examples/javascript/m24lr64e.js
deleted file mode 100644
index 639c1a8..0000000
--- a/examples/javascript/m24lr64e.js
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var nfcTagObj = require('jsupm_m24lr64e');
-
-// Instantiate a M24LR64E Grove NFC Tag Module on UART 0
-var nfcTag = new nfcTagObj.M24LR64E(nfcTagObj.M24LR64E_I2C_BUS);
-
-// This example accesses the device in the 'user' (default) mode,
-// reads the last byte of data in the EEPROM, inverts it, writes
-// it back, and then re-reads it.
-
-// Read the last byte of the EEPROM area
-var addr = (nfcTagObj.M24LR64E.EEPROM_I2C_LENGTH - 1);
-console.log("Address: " + addr);
-var byte = nfcTag.readByte(addr);
-
-console.log("Read byte: " + byte.toString(16));
-
-// Now change it to it's opposite and write it
-byte = (~byte & 0xff);
-nfcTag.writeByte(addr, byte);
-console.log("Wrote inverted byte: " + byte.toString(16));
-
-// Now read it back.
-byte = nfcTag.readByte(addr);
-console.log("Read byte: " + byte.toString(16));
-
-// clean up
-nfcTag = null;
-nfcTagObj.cleanUp();
-nfcTagObj = null;
-console.log("Exiting...");
-process.exit(0);
diff --git a/examples/javascript/max30100.js b/examples/javascript/max30100.js
deleted file mode 100644
index 3eac912..0000000
--- a/examples/javascript/max30100.js
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Author: Noel Eck <noel.eck@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_max30100');
-
-// Instantiate a MAX30100 instance using bus 0
-var sensor = new sensorObj.MAX30100(0);
-
-console.log('Oximeter sensor example...');
-
-// Read the temperature and version
-console.log ('Temperature: %d C', sensor.temperature());
-console.log ('Version: 0x%s', sensor.version().toString(16));
-
-// Set high-res (50 Hz, 16-bit)
-sensor.high_res_enable(true);
-
-// Set to sample SpO2
-sensor.mode(sensorObj.MAX30100_MODE_SPO2_EN);
-
-// Read individual samples
-for (var i = 0; i < 10; i++)
-{
-    var val = sensor.sample();
-    console.log('Single value IR: %d R: %d ', val.IR, val.R);
-}
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log('Exiting.');
-    process.exit(0);
-});
diff --git a/examples/javascript/maxsonarez.js b/examples/javascript/maxsonarez.js
deleted file mode 100644
index 3a53b37..0000000
--- a/examples/javascript/maxsonarez.js
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
-* Author: Jon Trulson <jtrulson@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// JavaScript example for the MaxSonar-EZ family of ultrasonic range finders
-
-// analog voltage, usually 3.3 or 5.0
-var MAXSONAREZ_AREF = 5.0;
-
-var MaxSonarEZ = require('jsupm_maxsonarez');
-
-// Instantiate a MaxSonar-EZ on analog pin A1, with an analog
-// reference voltage of MAXSONAREZ_AREF
-var mySonar = new MaxSonarEZ.MAXSONAREZ(1, MAXSONAREZ_AREF);
-
-// Every second, sample the sonar and output the distance to an
-// object in inches.
-
-// With the EZ3 version, the minimum and maximum ranges seemed to be
-// between 6 and 33 inches
-
-var myInterval = setInterval(function()
-{
-	console.log("AREF: " + MAXSONAREZ_AREF + 
-                    ", distance in inches: " + mySonar.inches());
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	mySonar = null;
-	MaxSonarEZ.cleanUp();
-	MaxSonarEZ = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mb704x.js b/examples/javascript/mb704x.js
deleted file mode 100644
index e37acaa..0000000
--- a/examples/javascript/mb704x.js
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_mb704x');
-
-// Instantiate a MB704X sensor using default parameters (bus 0,
-// address 112)
-var sensor = new sensorObj.MB704X();
-
-setInterval(function()
-{
-    console.log("Range: "
-                + sensor.getRange()
-                + " cm");
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/mcp2515-txrx.js b/examples/javascript/mcp2515-txrx.js
deleted file mode 100644
index 73ecf61..0000000
--- a/examples/javascript/mcp2515-txrx.js
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_mcp2515');
-
-// Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-var sensor = new sensorObj.MCP2515(0, -1);
-
-// NOTE: This example assumes that only two devices are connected
-// to the CAN bus, and that both devices are running this example;
-// one in TX (transmit) mode, and one in RX (receive) mode.
-
-// If this is not the case, then in rx mode you may see other
-// packets from other devices, or not, depending on whether the
-// speed is correct for the network.  In tx mode, errors may be
-// generated on the bus, especially if the CAN bus speed does not
-// match the rest of the network.
-
-// You should start the receiver example first.  The transmitter
-// example will fail after about 5 seconds (timeout) of not being
-// able to transmit a message.
-
-function transmit(sensor)
-{
-    // lets build up a packet and try loading it (8 bytes max).
-    var myPayload = "01234567";
-    console.log("Loading a packet of 8 numbers (0-7) into a TX buffer...");
-    sensor.loadTXBuffer(sensorObj.MCP2515_TX_BUFFER0,
-                        0, false, false, myPayload);
-
-    // now lets try to transmit it
-    console.log("Transmitting packet...");
-    sensor.transmitBuffer(sensorObj.MCP2515_TX_BUFFER0, true);
-
-    console.log("Transmit successful");
-    console.log();
-}
-
-function receive(sensor)
-{
-    // There should now be a packet waiting for us in RXB0
-    if (sensor.rxStatusMsgs() == sensorObj.MCP2515_RXMSG_RXB0)
-    {
-        console.log("Packet received in RXB0, decoding...");
-
-        // now lets retrieve and print it
-        sensor.getRXMsg(sensorObj.MCP2515_RX_BUFFER0);
-
-        sensor.printMsg();
-        console.log();
-    }
-}
-
-// by default we just receive packets
-if (process.argv.length > 2)
-{
-    // transmit mode
-    interval = setInterval(function() { transmit(sensor); }, 500);
-}
-else
-{
-    // receive mode
-    interval = setInterval(function() { receive(sensor); }, 100);
-}
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/mcp2515.js b/examples/javascript/mcp2515.js
deleted file mode 100644
index 160ae07..0000000
--- a/examples/javascript/mcp2515.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_mcp2515');
-
-// Instantiate a MCP2515 on SPI bus 0 using a hw CS pin (-1).
-var sensor = new sensorObj.MCP2515(0, -1);
-
-// set the mode to loopback mode.  In loopback mode, transmitted
-// packets are sent directly to an appropriate receive buffer
-// without actually going out onto the CAN bus.
-sensor.setOpmode(sensorObj.MCP2515_OPMODE_LOOPBACK);
-
-// lets build up a packet and try loading it (8 bytes max).
-var myPayload = "01234567";
-console.log("Loading a packet of 8 numbers (0-7) into a TX buffer...");
-sensor.loadTXBuffer(sensorObj.MCP2515_TX_BUFFER0, 0, false, false, myPayload);
-
-// now lets try to transmit it
-console.log("Transmitting packet...");
-sensor.transmitBuffer(sensorObj.MCP2515_TX_BUFFER0, true);
-
-console.log("Transmit successful");
-
-// There should now be a packet waiting for us in RXB0
-if (sensor.rxStatusMsgs() == sensorObj.MCP2515_RXMSG_RXB0)
-{
-    console.log("Packet received in RXB0, decoding...");
-
-    // now lets retrieve and print it
-    sensor.getRXMsg(sensorObj.MCP2515_RX_BUFFER0);
-
-    sensor.printMsg();
-}
-else
-{
-    console.log("No packet found, how strange.");
-}
-
-console.log("Exiting...");
-
-sensor = null;
-sensorObj.cleanUp();
-sensorObj = null;
-process.exit(0);
diff --git a/examples/javascript/mcp9808.js b/examples/javascript/mcp9808.js
deleted file mode 100644
index 24bb944..0000000
--- a/examples/javascript/mcp9808.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * The MIT License 
- *
- * Author: Marc Graham <marc@m2ag.net>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var mcp = require('jsupm_mcp9808');
-
-var temp = new mcp.MCP9808(6); 
-
-console.log(temp.getTemp());
-
-//Sleep mode: 
-temp.shutDown();
-//wake up 
-temp.shutDown(false); 
-//set mode to report fahrenheit 
-temp.setMode(false); 
-//check reporting mode
-console.log(temp.isCelsius())  //False = fahrenheit
-//set mode to celsius
-temp.setMode(); 
-//read temp
-temp.getTemp();
-//check Tcrit, Tupper or Tlower status bits
-temp.isTcrit(); // true if over boundry. 
-temp.isTupper(); 
-temp.isTlower(); 
-//set the values of monitior registers
-temp.setMonitorReg(mcp.MCP9808.CRIT_TEMP, 23); 
-temp.setMonitorReg(mcp.MCP9808.LOWER_TEMP, 20); 
-temp.setMonitorReg(mcp.MCP9808.UPPER_TEMP, 22); 
-//read MonitorReg
-console.log("Tcrit = " + temp.getMonitorReg(mcp.MCP9808.CRIT_TEMP)); 
-console.log("Tcrit = " + temp.getMonitorReg(mcp.MCP9808.LOWER_TEMP)); 
-console.log("Tcrit = " + temp.getMonitorReg(mcp.MCP9808.UPPER_TEMP)); 
-
-    
-process.exit(0); 
-
-
-
-
-
-
-                      
\ No newline at end of file
diff --git a/examples/javascript/md-stepper.js b/examples/javascript/md-stepper.js
deleted file mode 100644
index fbd69d2..0000000
--- a/examples/javascript/md-stepper.js
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var mdObj = require('jsupm_md');
-
-// This example demonstrates using the MD to drive a stepper motor
-
-function start()
-{
-    if (motor)
-    {
-        // configure it, for this example, we'll assume 200 steps per rev
-        motor.configStepper(200);
-        motor.setStepperSteps(100);
-        // start it going at 10 RPM
-        motor.enableStepper(mdObj.MD.STEP_DIR_CW, 10);
-    }
-}
-
-function reverse()
-{
-    if (motor)
-    {
-	// now reverse
-        motor.setStepperSteps(100);
-        // start it going at 10 RPM
-        motor.enableStepper(mdObj.MD.STEP_DIR_CCW, 10);
-	}
-}
-
-function end()
-{
-    if (motor)
-    {
-	motor.disableStepper();
-    }
-    exit();
-}
-
-// When exiting: clear memory and print exit message
-function exit()
-{
-    if (motor)
-    {
-	motor = null;
-	mdObj.cleanUp();
-    }
-    mdObj = null;
-    console.log("Exiting");
-    process.exit(0);	
-}
-
-
-// Instantiate an I2C Motor Driver on I2C bus 0
-var motor = new mdObj.MD(
-    mdObj.MD_I2C_BUS, 
-    mdObj.MD_DEFAULT_I2C_ADDR);
-
-start();
-
-setTimeout(function()
-{
-    reverse();
-    setTimeout(end, 3000);
-}, 3000);
-
-
-process.on('SIGINT', function()
-{
-    exit();
-});
diff --git a/examples/javascript/md.js b/examples/javascript/md.js
deleted file mode 100644
index 5c799be..0000000
--- a/examples/javascript/md.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var MotorDriver_lib = require('jsupm_md');
-
-function start()
-{
-	if (my_MotorDriver_obj)
-	{
-		// set direction to CW and set speed to 50%
-		console.log("Spin M1 and M2 at half speed for 3 seconds");
-		my_MotorDriver_obj.setMotorDirections(MotorDriver_lib.MD.DIR_CW,
-                                                     MotorDriver_lib.MD.DIR_CW);
-		my_MotorDriver_obj.setMotorSpeeds(127, 127);
-	}
-}
-
-function reverse()
-{
-	if (my_MotorDriver_obj)
-	{
-		// counter clockwise
-		console.log("Reversing M1 and M2 for 3 seconds");
-		my_MotorDriver_obj.setMotorDirections(MotorDriver_lib.MD.DIR_CCW,
-                                                     MotorDriver_lib.MD.DIR_CCW);	
-	}
-}
-
-function end()
-{
-	if (my_MotorDriver_obj)
-	{
-		console.log("Stopping motors");
-		my_MotorDriver_obj.setMotorSpeeds(0, 0);
-	}
-	exit();
-}
-
-// When exiting: clear memory and print exit message
-function exit()
-{
-	if (my_MotorDriver_obj)
-	{
-		my_MotorDriver_obj = null;
-		MotorDriver_lib.cleanUp();
-	}
-	MotorDriver_lib = null;
-	console.log("Exiting");
-	process.exit(0);	
-}
-
-
-// Instantiate an I2C Motor Driver on I2C bus 0
-var my_MotorDriver_obj = new MotorDriver_lib.MD(
-	MotorDriver_lib.MD_I2C_BUS, 
-	MotorDriver_lib.MD_DEFAULT_I2C_ADDR);
-
-start();
-
-setTimeout(function()
-{
-	reverse();
-	setTimeout(end, 3000);
-}, 3000);
-
-
-process.on('SIGINT', function()
-{
-	exit();
-});
diff --git a/examples/javascript/mg811.js b/examples/javascript/mg811.js
deleted file mode 100644
index 4e13b9f..0000000
--- a/examples/javascript/mg811.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_mg811');
-
-// Instantiate an MG811 on analog pin A0, and digital pin D2 with an
-// analog reference voltage of MG811_AREF (5.0)
-
-var sensor = new sensorObj.MG811(0, 2, 5.0);
-
-// Every tenth of a second, sample the sensor and output it's
-// detected CO2 concentration in parts per million (ppm)
-
-setInterval(function()
-{
-    console.log("CO2 concentration in PPM: " + sensor.ppm());
-}, 100);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/mhz16.js b/examples/javascript/mhz16.js
deleted file mode 100644
index a8ec250..0000000
--- a/examples/javascript/mhz16.js
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var CO2_lib = require('jsupm_mhz16');
-
-// Instantiate a MHZ16 serial CO2 sensor on uart 0.
-// This example was tested on the Grove CO2 sensor module.
-var myCO2_obj = new CO2_lib.MHZ16(0);
-
-// make sure port is initialized properly.  9600 baud is the default.
-if (!myCO2_obj.setupTty(CO2_lib.int_B9600))
-{
-	console.log("Failed to setup tty port parameters");
-	process.exit(0);
-}
-
-outputStr = "Make sure that the sensor has had " +
-			"at least 3 minutes to warm up";
-console.log(outputStr);
-outputStr = "or you will not get valid results.";
-console.log(outputStr);
-outputStr = "The temperature reported is not the ambient temperature,";
-console.log(outputStr);
-outputStr = "but rather the temperature of the sensor elements.";
-console.log(outputStr);
-
-function writeCO2data()
-{
-	if (!myCO2_obj.getData())
-		console.log("Failed to retrieve data");
-	else
-	{
-		outputStr = "CO2 concentration: " + myCO2_obj.getGas() +
-		" PPM, " +
-		"Temperature (in C): " + myCO2_obj.getTemperature();
-		console.log(outputStr);
-	}
-}
-var myInterval;
-setTimeout(function()
-{
-	myInterval = setInterval(writeCO2data, 2000);
-}, 1000);
-
-
-// Print message, clear memory when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myCO2_obj = null;
-	CO2_lib.cleanUp();
-	CO2_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/mic.js b/examples/javascript/mic.js
deleted file mode 100644
index 5bf6aba..0000000
--- a/examples/javascript/mic.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var upmMicrophone = require("jsupm_mic");
-
-// Attach microphone to analog port A0
-var myMic = new upmMicrophone.Microphone(0);
-
-var threshContext = new upmMicrophone.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-var is_running = false;
-// Infinite loop, ends when script is cancelled
-// Repeatedly, take a sample every 2 microseconds;
-// find the average of 128 samples; and
-// print a running graph of the averages
-while(1)
-{
-    var buffer = new upmMicrophone.uint16Array(128);
-    var len = myMic.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = myMic.findThreshold(threshContext, 30, buffer, len);
-        myMic.printGraph(threshContext);
-        if (thresh)
-            console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/micsv89.js b/examples/javascript/micsv89.js
deleted file mode 100644
index 2698d98..0000000
--- a/examples/javascript/micsv89.js
+++ /dev/null
@@ -1,24 +0,0 @@
-// Drive the Grive RGB LCD (a JHD1313m1)
-//
-// The way to drive the LCD directly from
-// Javascript code using the i2c interface directly
-// This approach is useful for learning about using
-// the i2c bus. The i2c file is an implementation
-// in Javascript for some of the common LCD functions
-
-// configure jshint
-
-var upmMICSV89 = require("jsupm_micsv89"); 
-
-var mics = new upmMICSV89.MICSV89(6); 
-
-while(1)
-{
-    mics.update(); 
-    while(!mics.valid());
-    console.log("co2: " + mics.co2equ()); 
-    console.log("short: " + mics.vocshort()); 
-    console.log("tvoc: " + mics.tvoc());   
-    console.log("resistor: " + mics.resistor()); 
-    console.log("***********************");
-}
diff --git a/examples/javascript/mma7361.js b/examples/javascript/mma7361.js
deleted file mode 100644
index fe6fd19..0000000
--- a/examples/javascript/mma7361.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*jslint node:true, vars:true, bitwise:true, unparam:true */
-/*jshint unused:true */
-
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_mma7361');
-
-// Instantiate a MMA7361 sensor on analog pins A0 (X), A1 (Y) A2
-// (Z), selftest pin on D2, sleep pin on D3 nd an analog reference
-// value of 5.0.  The freefall pin and the range pin are unused
-// (-1).
-var sensor = new sensorObj.MMA7361(0, 1, 2, 2, 3, -1, -1, 5.0);
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// 1.5g (true = 6g)
-sensor.setRange(false);
-
-// Every 10th of a second, update and print values
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    sensor.getAcceleration(x, y, z);
-    console.log("Accelerometer x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z));
-
-    sensor.getVolts(x, y, z);
-    console.log("Volts x: "
-                + sensorObj.floatp_value(x)
-                + " y: " + sensorObj.floatp_value(y)
-                + " z: " + sensorObj.floatp_value(z));
-
-    console.log();
-
-}, 100);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/mma7660.js b/examples/javascript/mma7660.js
deleted file mode 100644
index 5310b92..0000000
--- a/examples/javascript/mma7660.js
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var digitalAccelerometer = require('jsupm_mma7660');
-
-// Instantiate an MMA7660 on I2C bus 0
-var myDigitalAccelerometer = new digitalAccelerometer.MMA7660(
-					digitalAccelerometer.MMA7660_DEFAULT_I2C_BUS,
-					digitalAccelerometer.MMA7660_DEFAULT_I2C_ADDR);
-
-// place device in standby mode so we can write registers
-myDigitalAccelerometer.setModeStandby();
-
-// enable 64 samples per second
-myDigitalAccelerometer.setSampleRate(digitalAccelerometer.MMA7660_AUTOSLEEP_64);
-
-// place device into active mode
-myDigitalAccelerometer.setModeActive();
-
-var ax, ay, az;
-ax = digitalAccelerometer.new_floatp();
-ay = digitalAccelerometer.new_floatp();
-az = digitalAccelerometer.new_floatp();
-
-var outputStr;
-
-var myInterval = setInterval(function()
-{
-	myDigitalAccelerometer.getAcceleration(ax, ay, az);
-	outputStr = "Acceleration: x = " 
-		+ roundNum(digitalAccelerometer.floatp_value(ax), 6)
-		+ "g y = " + roundNum(digitalAccelerometer.floatp_value(ay), 6) 
-		+ "g z = " + roundNum(digitalAccelerometer.floatp_value(az), 6) + "g";
-	console.log(outputStr);
-	console.log();
-}, 500);
-
-// round off output to match C example, which has 6 decimal places
-function roundNum(num, decimalPlaces)
-{
-	var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-	return (Math.round((num + extraNum) 
-		* (Math.pow(10, decimalPlaces))) / Math.pow(10, decimalPlaces));
-}
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-
-	// clean up memory
-	digitalAccelerometer.delete_intp(x);
-	digitalAccelerometer.delete_intp(y);
-	digitalAccelerometer.delete_intp(z);
-
-	digitalAccelerometer.delete_floatp(ax);
-	digitalAccelerometer.delete_floatp(ay);
-	digitalAccelerometer.delete_floatp(az);
-
-	myDigitalAccelerometer.setModeStandby();
-
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/moisture.js b/examples/javascript/moisture.js
deleted file mode 100644
index b55a23d..0000000
--- a/examples/javascript/moisture.js
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//Load UPM module
-var moisture = require('jsupm_moisture');
-
-// Instantiate a Moisture sensor on analog pin A0
-var myMoistureObj = new moisture.Moisture(0);
-
-// Values (approximate):
-// 0-300,   sensor in air or dry soil
-// 300-600, sensor in humid soil
-// 600+,    sensor in wet soil or submerged in water
-// Read the value every second and print the corresponding moisture level
-setInterval(function() {
-    var result;
-    var moisture_val = parseInt(myMoistureObj.value());
-    if (moisture_val >= 0 && moisture_val < 300)
-        result = "Dry";
-    else if (moisture_val >= 300 && moisture_val < 600)
-        result = "Moist";
-    else
-        result = "Wet";
-    console.log("Moisture value: " + moisture_val + ", " + result);
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function() {
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/mpr121.js b/examples/javascript/mpr121.js
deleted file mode 100644
index 22a9748..0000000
--- a/examples/javascript/mpr121.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var touchSensor = require('jsupm_mpr121');
-
-var myTouchSensor = new touchSensor.MPR121(touchSensor.MPR121_I2C_BUS, touchSensor.MPR121_DEFAULT_I2C_ADDR);
-
-myTouchSensor.configAN3944();
-
-setInterval(function()
-{
-	myTouchSensor.readButtons();
-	printButtons(myTouchSensor);
-}, 1000);
-
-function printButtons(touchSensor)
-{
-	var buttonPressed = false;
-
-	var outputStr = "Buttons Pressed: ";
-	for (var i=0; i<12; i++)
-	{
-		if (touchSensor.m_buttonStates & (1 << i))
-		{
-			outputStr += (i + " ");
-			buttonPressed = true;
-		}
-	}
-
-	if (!buttonPressed)
-		outputStr += "None";
-
-	console.log(outputStr);
-
-	if (touchSensor.m_overCurrentFault)
-		console.log("Over Current Fault detected!");
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
-
diff --git a/examples/javascript/mpu60x0.js b/examples/javascript/mpu60x0.js
deleted file mode 100644
index d520f15..0000000
--- a/examples/javascript/mpu60x0.js
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_mpu9150');
-
-// Instantiate an MPU60X0 on default I2C bus and address
-var sensor = new sensorObj.MPU60X0();
-
-// Initialize the device with default values
-sensor.init();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// Output data every half second until interrupted
-setInterval(function()
-{
-    sensor.update();
-    
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer: AX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
-
-    sensor.getGyroscope(x, y, z);
-    console.log("Gyroscope:     GX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
- 
-    console.log("Temperature:   " + sensor.getTemperature());
- 
-    console.log();
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/mpu9150.js b/examples/javascript/mpu9150.js
deleted file mode 100644
index 5494c75..0000000
--- a/examples/javascript/mpu9150.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_mpu9150');
-
-// Instantiate an MPU9105 on default I2C bus and address
-var sensor = new sensorObj.MPU9150();
-
-// Initialize the device with default values
-sensor.init();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// Output data every half second until interrupted
-setInterval(function()
-{
-    sensor.update();
-    
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer: AX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
-
-    sensor.getGyroscope(x, y, z);
-    console.log("Gyroscope:     GX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
- 
-    sensor.getMagnetometer(x, y, z);
-    console.log("Magnetometer:  MX: " + sensorObj.floatp_value(x) + 
-                " MY: " + sensorObj.floatp_value(y) + 
-                " MZ: " + sensorObj.floatp_value(z));
-
-    console.log("Temperature:   " + sensor.getTemperature());
- 
-    console.log();
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/mpu9250.js b/examples/javascript/mpu9250.js
deleted file mode 100644
index e09a27d..0000000
--- a/examples/javascript/mpu9250.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_mpu9150');
-
-// Instantiate an MPU9105 on default I2C bus and address
-var sensor = new sensorObj.MPU9250();
-
-// Initialize the device with default values
-sensor.init();
-
-var x = new sensorObj.new_floatp();
-var y = new sensorObj.new_floatp();
-var z = new sensorObj.new_floatp();
-
-// Output data every half second until interrupted
-setInterval(function()
-{
-    sensor.update();
-    
-    sensor.getAccelerometer(x, y, z);
-    console.log("Accelerometer: AX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
-
-    sensor.getGyroscope(x, y, z);
-    console.log("Gyroscope:     GX: " + sensorObj.floatp_value(x) + 
-                " AY: " + sensorObj.floatp_value(y) + 
-                " AZ: " + sensorObj.floatp_value(z));
- 
-    sensor.getMagnetometer(x, y, z);
-    console.log("Magnetometer:  MX: " + sensorObj.floatp_value(x) + 
-                " MY: " + sensorObj.floatp_value(y) + 
-                " MZ: " + sensorObj.floatp_value(z));
-
-    console.log("Temperature:   " + sensor.getTemperature());
- 
-    console.log();
-
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/mq2.js b/examples/javascript/mq2.js
deleted file mode 100644
index 6fd2340..0000000
--- a/examples/javascript/mq2.js
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var upmMQ2 = require("jsupm_gas");
-
-// Attach gas sensor to AIO0
-var myMQ2 = new upmMQ2.MQ2(0);
-
-var threshContext = new upmMQ2.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-// Repeatedly, take a sample every 2 milliseconds;
-// find the average of 128 samples; and
-// print a running graph of the averages using a resolution of 5
-while(1)
-{
-    var buffer = new upmMQ2.uint16Array(128);
-    var len = myMQ2.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = myMQ2.findThreshold(threshContext, 30, buffer, len);
-        myMQ2.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq3.js b/examples/javascript/mq3.js
deleted file mode 100644
index 7fb0093..0000000
--- a/examples/javascript/mq3.js
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var upmMQ3 = require("jsupm_gas");
-
-// Attach gas sensor to AIO0
-var myMQ3 = new upmMQ3.MQ3(0);
-
-var threshContext = new upmMQ3.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-// Repeatedly, take a sample every 2 milliseconds;
-// find the average of 128 samples; and
-// print a running graph of the averages using a resolution of 5
-while(1)
-{
-    var buffer = new upmMQ3.uint16Array(128);
-    var len = myMQ3.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = myMQ3.findThreshold(threshContext, 30, buffer, len);
-        myMQ3.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq303a.js b/examples/javascript/mq303a.js
deleted file mode 100644
index e18a8e9..0000000
--- a/examples/javascript/mq303a.js
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load alcohol sensor module
-var mq303a = require('jsupm_mq303a');
-
-// Instantiate an mq303a sensor on analog pin A0
-// This device uses a heater powered from an analog I/O pin. 
-// If using A0 as the data pin, then you need to use A1, as the heater
-// pin (if using a grove mq303a).  For A1, we can use the D15 gpio, 
-// setup as an output, and drive it low to power the heater.
-var myAlcoholObj = new mq303a.MQ303A(0, 15);
-
-console.log("Enabling heater and waiting 2 minutes for warmup.");
-
-// give time updates every 30 seconds until 2 minutes have passed
-// for the alcohol sensor to warm up
-statusMessage(1);
-statusMessage(2);
-statusMessage(3);
-
-function statusMessage(amt)
-{
-	setTimeout(function()
-	{
-		console.log((amt * 30) + " seconds have passed");
-	}, 30000 * amt);
-}
-
-// run the alcohol sensor in 2 minutes
-setTimeout(runAlcoholSensor, 120000);
-
-function runAlcoholSensor()
-{
-	var notice = "This sensor may need to warm " +
-				"until the value drops below about 450."
-	console.log(notice);
-
-    // Print the detected alcohol value every second
-	setInterval(function()
-	{
-		var val = myAlcoholObj.value();
-		var msg = "Alcohol detected ";
-		msg += "(higher means stronger alcohol): ";
-		console.log(msg + val);
-	}, 1000);
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq4.js b/examples/javascript/mq4.js
deleted file mode 100644
index 4129d65..0000000
--- a/examples/javascript/mq4.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upmGAS = require("jsupm_gas");
-
-// Attach gas sensor to Analog A0
-var sensor = new upmGAS.MQ4(0);
-
-var threshContext = new upmGAS.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-// Repeatedly, take a sample every 2 microseconds;
-// find the average of 128 samples; and
-// print a running graph of asteriskss as averages
-
-while(1)
-{
-    var buffer = new upmGAS.uint16Array(128);
-    var len = sensor.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = sensor.findThreshold(threshContext, 30, buffer, len);
-        sensor.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq5.js b/examples/javascript/mq5.js
deleted file mode 100644
index 257801c..0000000
--- a/examples/javascript/mq5.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var upmMQ5 = require("jsupm_gas");
-
-// Attach gas sensor to AIO0
-var myMQ5 = new upmMQ5.MQ5(0);
-
-var threshContext = new upmMQ5.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-while(1)
-{
-    var buffer = new upmMQ5.uint16Array(128);
-    var len = myMQ5.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = myMQ5.findThreshold(threshContext, 30, buffer, len);
-        myMQ5.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq6.js b/examples/javascript/mq6.js
deleted file mode 100644
index 4ebd526..0000000
--- a/examples/javascript/mq6.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upmGAS = require("jsupm_gas");
-
-// Attach gas sensor to Analog A0
-var sensor = new upmGAS.MQ6(0);
-
-var threshContext = new upmGAS.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-// Repeatedly, take a sample every 2 microseconds;
-// find the average of 128 samples; and
-// print a running graph of asteriskss as averages
-
-while(1)
-{
-    var buffer = new upmGAS.uint16Array(128);
-    var len = sensor.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = sensor.findThreshold(threshContext, 30, buffer, len);
-        sensor.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq7.js b/examples/javascript/mq7.js
deleted file mode 100644
index 6a95ef4..0000000
--- a/examples/javascript/mq7.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upmGAS = require("jsupm_gas");
-
-// Attach gas sensor to Analog A0
-var sensor = new upmGAS.MQ7(0);
-
-var threshContext = new upmGAS.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-// Repeatedly, take a sample every 2 microseconds;
-// find the average of 128 samples; and
-// print a running graph of asteriskss as averages
-
-while(1)
-{
-    var buffer = new upmGAS.uint16Array(128);
-    var len = sensor.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = sensor.findThreshold(threshContext, 30, buffer, len);
-        sensor.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq8.js b/examples/javascript/mq8.js
deleted file mode 100644
index 34f1633..0000000
--- a/examples/javascript/mq8.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upmGAS = require("jsupm_gas");
-
-// Attach gas sensor to Analog A0
-var sensor = new upmGAS.MQ8(0);
-
-var threshContext = new upmGAS.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-// Repeatedly, take a sample every 2 microseconds;
-// find the average of 128 samples; and
-// print a running graph of asteriskss as averages
-
-while(1)
-{
-    var buffer = new upmGAS.uint16Array(128);
-    var len = sensor.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = sensor.findThreshold(threshContext, 30, buffer, len);
-        sensor.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/mq9.js b/examples/javascript/mq9.js
deleted file mode 100644
index 10d8173..0000000
--- a/examples/javascript/mq9.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var upmMQ9 = require("jsupm_gas");
-
-// Attach gas sensor to AIO0
-var myMQ9 = new upmMQ9.MQ9(0);
-
-var threshContext = new upmMQ9.thresholdContext;
-threshContext.averageReading = 0;
-threshContext.runningAverage = 0;
-threshContext.averagedOver = 2;
-
-// Infinite loop, ends when script is cancelled
-while(1)
-{
-    var buffer = new upmMQ9.uint16Array(128);
-    var len = myMQ9.getSampledWindow(2, 128, buffer);
-    if (len)
-    {
-        var thresh = myMQ9.findThreshold(threshContext, 30, buffer, len);
-        myMQ9.printGraph(threshContext, 5);
-        //if (thresh)
-        //    console.log("Threshold is " + thresh);
-    }
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/ms5611.js b/examples/javascript/ms5611.js
deleted file mode 100644
index 188091d..0000000
--- a/examples/javascript/ms5611.js
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Henry Bruce <henry.bruce@intel.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var factory = require('jsupm_ms5611');
-
-// Instantiate a MS5611 instance using default i2c bus and address
-var sensor = new factory.MS5611();
-
-// now output data every 250 milliseconds
-setInterval(function()
-{
-    var temperature = sensor.getTemperatureCelsius();
-    var pressure = sensor.getPressurePa();
-    console.log("Temperature: " + temperature + " C");
-    console.log("Pressure: " + pressure + " Pa");
-}, 250);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/ms5803.js b/examples/javascript/ms5803.js
deleted file mode 100644
index aed38c5..0000000
--- a/examples/javascript/ms5803.js
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_ms5803');
-
-// Instantiate a MS5803 instance using bus 0 and default i2c address
-var sensor = new sensorObj.MS5803(0);
-
-// For SPI, bus 0, you would pass -1 as the address, and a valid pin for CS:
-// MS5803(0, -1, 10);
-
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    console.log("Temperature: "
-                + sensor.getTemperature()
-                + " C, Pressure: "
-                + sensor.getPressure()
-                + " mbar");
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/nlgpio16.js b/examples/javascript/nlgpio16.js
deleted file mode 100644
index c92bd45..0000000
--- a/examples/javascript/nlgpio16.js
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_nlgpio16');
-
-// Instantiate a NLGPIO16 Module on the default UART (/dev/ttyACM0)
-var sensor = new sensorObj.NLGPIO16();
-
-// get the Version
-console.log("Device Version:", sensor.getVersion());
-// read the gpio at pin 3
-console.log("GPIO 3 Value:", sensor.gpioRead(3));
-// read the analog voltage at pin 5
-console.log("Analog 5 Voltage:", sensor.analogReadVolts(5));
-// set the gpio at pin 14 to HIGH
-sensor.gpioSet(14);
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/nmea_gps.js b/examples/javascript/nmea_gps.js
deleted file mode 100644
index 7ae3dfa..0000000
--- a/examples/javascript/nmea_gps.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*jslint node:true, vars:true, bitwise:true, unparam:true */
-/*jshint unused:true */
-
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_nmea_gps');
-
-// Instantiate a NMEAGPS sensor on uart 0 at 9600 baud with enable
-// pin on D3
-var sensor = new sensorObj.NMEAGPS(0, 9600, 3);
-
-// loop, dumping NMEA data out as fast as it comes in
-while (sensor.dataAvailable(5000))
-{
-    process.stdout.write(sensor.readStr(256));
-}
-console.log("Timed out");
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/nmea_gps_i2c.js b/examples/javascript/nmea_gps_i2c.js
deleted file mode 100644
index bde115f..0000000
--- a/examples/javascript/nmea_gps_i2c.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*jslint node:true, vars:true, bitwise:true, unparam:true */
-/*jshint unused:true */
-
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_nmea_gps');
-
-function sleepFor(millis)
-{
-    var now = new Date().getTime();
-    while(new Date().getTime() < now + millis)
-    {
-        /* do nothing */
-    }
-}
-
-// Instantiate a NMEA_GPS UBLOX based i2c sensor on i2c bus 0 at
-// address 0x42
-var sensor = new sensorObj.NMEAGPS(0, 0x42);
-
-// loop, dumping NMEA data out as fast as it comes in
-while (true)
-{
-    if (sensor.dataAvailable(0))
-        process.stdout.write(sensor.readStr(256));
-    else
-        sleepFor(10);
-}
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/nunchuck.js b/examples/javascript/nunchuck.js
deleted file mode 100644
index 02e4d2f..0000000
--- a/examples/javascript/nunchuck.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var nunchuck_lib = require('jsupm_nunchuck');
-
-// Instantiate a nunchuck controller bus 3
-var nunchuck_obj = new nunchuck_lib.NUNCHUCK(3);
-
-setInterval(function()
-{
-	nunchuck_obj.update();
-
-	var outputStr = "stickX: " + nunchuck_obj.stickX +
-	", stickY: " + nunchuck_obj.stickY;
-	console.log(outputStr);
-	outputStr = "accelX: " + nunchuck_obj.accelX +
-	", accelY: " + nunchuck_obj.accelY +
-	", accelZ: " + nunchuck_obj.accelZ;
-	console.log(outputStr);
-
-	outputStr = "button C: " +
-	((nunchuck_obj.buttonC) ? "pressed" : "not pressed");
-	console.log(outputStr);
-	outputStr = "button Z: " +
-	((nunchuck_obj.buttonZ) ? "pressed" : "not pressed");
-	console.log(outputStr);
-}, 100);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/o2.js b/examples/javascript/o2.js
deleted file mode 100644
index 71fe425..0000000
--- a/examples/javascript/o2.js
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var O2_lib = require("jsupm_o2");
-
-// The was tested with the O2 Oxygen Concentration Sensor Module
-// Instantiate a O2 on analog pin A0
-var O2_obj = new O2_lib.O2(0);
-
-var myInterval = setInterval(function()
-{
-	console.log("The output voltage is: " + roundNum(O2_obj.voltageValue(), 5) + "mV");
-}, 100);
-
-function roundNum(num, decimalPlaces)
-{
-	var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-	return (Math.round((num + extraNum) * (Math.pow(10, decimalPlaces))) / Math.pow(10, decimalPlaces));
-}
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	O2_obj = null;
-	O2_lib.cleanUp();
-	O2_lib = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/oled_ssd1306.js b/examples/javascript/oled_ssd1306.js
deleted file mode 100644
index 301167c..0000000
--- a/examples/javascript/oled_ssd1306.js
+++ /dev/null
@@ -1,151 +0,0 @@
-/*
- * Author: Marc Graham <marc@m2ag.net>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-
-var intel_logo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 192, 192, 192, 224,
-224, 224, 224, 240, 240, 248, 248, 120, 120, 120, 120, 60, 60, 60, 60, 60,
-62, 30, 30, 30, 30, 30, 30, 30, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
-15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 31, 31, 31, 31, 31,
-30, 62, 62, 62, 62, 126, 126, 124, 124, 252, 252, 248, 248, 240, 240, 240,
-224, 224, 224, 192, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128,
-128, 0, 56, 56, 28, 30, 14, 15, 15, 7, 7, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-192, 192, 192, 192, 192, 192, 192, 192, 0, 0, 0, 0, 192, 193, 195, 195,
-195, 7, 15, 15, 63, 127, 255, 255, 255, 254, 252, 252, 240, 192, 0, 0, 0,
-0, 0, 0, 0, 0, 128, 192, 192, 240, 248, 124, 124, 60, 0, 0, 0, 0, 159, 159,
-159, 159, 159, 159, 159, 159, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128,
-128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 0,
-0, 0, 0, 0, 254, 254, 254, 254, 254, 254, 254, 254, 128, 128, 128, 128,
-128, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 192, 192, 192, 192, 192, 192, 128,
-128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255,
-0, 0, 0, 0, 3, 7, 3, 3, 3, 0, 0, 0, 0, 0, 1, 1, 255, 255, 255, 255, 255,
-255, 255, 0, 0, 224, 248, 252, 252, 255, 127, 15, 15, 3, 1, 0, 0, 0, 0, 0,
-0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255,
-255, 255, 255, 255, 255, 15, 15, 15, 15, 15, 15, 255, 255, 255, 255, 255,
-255, 255, 252, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 15, 15,
-15, 15, 15, 224, 224, 252, 254, 255, 255, 255, 255, 159, 159, 143, 143,
-135, 135, 143, 159, 255, 255, 255, 255, 255, 255, 252, 248, 0, 0, 0, 255,
-255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
-224, 248, 248, 255, 255, 255, 255, 255, 127, 15, 255, 255, 255, 255, 255,
-255, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255,
-255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0,
-0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255,
-255, 255, 255, 255, 255, 192, 192, 192, 192, 192, 31, 31, 255, 255, 255,
-255, 255, 255, 231, 231, 199, 199, 199, 199, 199, 199, 199, 199, 231, 231,
-231, 231, 199, 135, 0, 0, 0, 63, 255, 255, 255, 255, 255, 255, 255, 0, 0,
-0, 0, 224, 240, 248, 248, 252, 254, 255, 255, 255, 127, 63, 63, 31, 15, 7,
-7, 1, 0, 0, 63, 63, 255, 255, 255, 255, 255, 240, 192, 192, 128, 0, 0, 0,
-0, 0, 0, 0, 0, 1, 3, 3, 7, 7, 7, 7, 7, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7,
-0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 3, 3, 7, 7, 7,
-7, 7, 7, 7, 7, 7, 0, 0, 0, 1, 3, 3, 3, 7, 7, 7, 7, 15, 15, 15, 15, 7, 7, 7,
-7, 7, 3, 3, 3, 1, 0, 0, 0, 0, 1, 3, 3, 7, 135, 135, 135, 192, 192, 0, 0, 7,
-7, 3, 3, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 15, 15,
-31, 127, 127, 127, 255, 255, 252, 252, 252, 248, 240, 240, 240, 224, 224,
-224, 192, 192, 192, 192, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192,
-224, 224, 224, 224, 240, 240, 240, 240, 248, 248, 248, 248, 252, 252, 252,
-254, 254, 255, 255, 255, 255, 255, 255, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
-3, 3, 3, 7, 7, 7, 15, 15, 31, 31, 31, 63, 63, 63, 63, 63, 127, 127, 127,
-127, 127, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-255, 255, 255, 255, 255, 255, 255, 127, 127, 127, 127, 127, 127, 127, 127,
-63, 63, 63, 63, 63, 31, 31, 31, 31, 31, 15, 15, 15, 15, 7, 7, 7, 7, 3, 3,
-3, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0];
-
-function exit()
-{
-    lcd = null;
-    lcdObj.cleanUp();
-    lcdObj = null;
-    process.exit(0);
-}
-
-// Load lcd module
-var lcdObj = require('jsupm_lcd');
-var lcd = new lcdObj.SSD1306(0, 0x3C);
-var next = 0;
-
-lcd.clear();
-lcd.setCursor(2, 0);
-lcd.write("Hello");
-lcd.setCursor(3, 0);
-lcd.write("World!");
-
-setInterval(function(){
-    loop();
-},
-3000 );
-
-function loop(){
-    switch(next)
-    {
-        case 0:
-            lcd.invert(true)
-            break;
-        case 1:
-            lcd.dim(true);
-            break;
-        case 2:
-            lcd.invert(false);
-            break;
-        case 3:
-            lcd.startscrollright(0x00, 0x0F);
-            break;
-        case 4:
-            lcd.startscrollleft(0x00, 0x0F);
-            break;
-        case 5:
-            lcd.startscrolldiagleft(0x00, 0x0F)
-            break;
-        case 6:
-            lcd.startscrolldiagright(0x00, 0x0F)
-            break;
-        case 7:
-            var logo = new lcdObj.uint8Array(intel_logo.length);
-            for(var x = 0 ; x < intel_logo.length ; x++){
-                logo.setitem(x, intel_logo[x]);
-            }
-            lcd.stopscroll();
-            lcd.clear();
-            lcd.draw(logo, 1024);
-            break;
-        case 8:
-        default:
-            lcd.stopscroll();
-            lcd.clear();
-            lcd.setCursor(2, 0);
-            lcd.write("All");
-            lcd.setCursor(3, 0);
-            lcd.write("Done!");
-            exit();
-    }
-    next++;
-}
diff --git a/examples/javascript/oled_ssd1308.js b/examples/javascript/oled_ssd1308.js
deleted file mode 100644
index 03e19db..0000000
--- a/examples/javascript/oled_ssd1308.js
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-//Load lcd module
-var LCD = require('jsupm_lcd');
-
-var myLcd = new LCD.SSD1308 (0, 0x3C);
-
-var logoArr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 192, 192, 192, 224,
-224, 224, 224, 240, 240, 248, 248, 120, 120, 120, 120, 60, 60, 60, 60, 60,
-62, 30, 30, 30, 30, 30, 30, 30, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
-15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 31, 31, 31, 31, 31,
-30, 62, 62, 62, 62, 126, 126, 124, 124, 252, 252, 248, 248, 240, 240, 240,
-224, 224, 224, 192, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128,
-128, 0, 56, 56, 28, 30, 14, 15, 15, 7, 7, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-192, 192, 192, 192, 192, 192, 192, 192, 0, 0, 0, 0, 192, 193, 195, 195,
-195, 7, 15, 15, 63, 127, 255, 255, 255, 254, 252, 252, 240, 192, 0, 0, 0,
-0, 0, 0, 0, 0, 128, 192, 192, 240, 248, 124, 124, 60, 0, 0, 0, 0, 159, 159,
-159, 159, 159, 159, 159, 159, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128,
-128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 0,
-0, 0, 0, 0, 254, 254, 254, 254, 254, 254, 254, 254, 128, 128, 128, 128,
-128, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 192, 192, 192, 192, 192, 192, 128,
-128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255,
-0, 0, 0, 0, 3, 7, 3, 3, 3, 0, 0, 0, 0, 0, 1, 1, 255, 255, 255, 255, 255,
-255, 255, 0, 0, 224, 248, 252, 252, 255, 127, 15, 15, 3, 1, 0, 0, 0, 0, 0,
-0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255,
-255, 255, 255, 255, 255, 15, 15, 15, 15, 15, 15, 255, 255, 255, 255, 255,
-255, 255, 252, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 15, 15,
-15, 15, 15, 224, 224, 252, 254, 255, 255, 255, 255, 159, 159, 143, 143,
-135, 135, 143, 159, 255, 255, 255, 255, 255, 255, 252, 248, 0, 0, 0, 255,
-255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
-224, 248, 248, 255, 255, 255, 255, 255, 127, 15, 255, 255, 255, 255, 255,
-255, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255,
-255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0,
-0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255,
-255, 255, 255, 255, 255, 192, 192, 192, 192, 192, 31, 31, 255, 255, 255,
-255, 255, 255, 231, 231, 199, 199, 199, 199, 199, 199, 199, 199, 231, 231,
-231, 231, 199, 135, 0, 0, 0, 63, 255, 255, 255, 255, 255, 255, 255, 0, 0,
-0, 0, 224, 240, 248, 248, 252, 254, 255, 255, 255, 127, 63, 63, 31, 15, 7,
-7, 1, 0, 0, 63, 63, 255, 255, 255, 255, 255, 240, 192, 192, 128, 0, 0, 0,
-0, 0, 0, 0, 0, 1, 3, 3, 7, 7, 7, 7, 7, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7,
-0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 3, 3, 7, 7, 7,
-7, 7, 7, 7, 7, 7, 0, 0, 0, 1, 3, 3, 3, 7, 7, 7, 7, 15, 15, 15, 15, 7, 7, 7,
-7, 7, 3, 3, 3, 1, 0, 0, 0, 0, 1, 3, 3, 7, 135, 135, 135, 192, 192, 0, 0, 7,
-7, 3, 3, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 15, 15,
-31, 127, 127, 127, 255, 255, 252, 252, 252, 248, 240, 240, 240, 224, 224,
-224, 192, 192, 192, 192, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192,
-224, 224, 224, 224, 240, 240, 240, 240, 248, 248, 248, 248, 252, 252, 252,
-254, 254, 255, 255, 255, 255, 255, 255, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
-3, 3, 3, 7, 7, 7, 15, 15, 31, 31, 31, 63, 63, 63, 63, 63, 127, 127, 127,
-127, 127, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
-255, 255, 255, 255, 255, 255, 255, 127, 127, 127, 127, 127, 127, 127, 127,
-63, 63, 63, 63, 63, 31, 31, 31, 31, 31, 15, 15, 15, 15, 7, 7, 7, 7, 3, 3,
-3, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-0, 0, 0, 0, 0, 0, 0];
-
-var intelLogo = new LCD.uint8Array(logoArr.length);
-for (var x = 0; x < logoArr.length; x++)
-	intelLogo.setitem(x, logoArr[x]);
-
-myLcd.clear();
-myLcd.draw(intelLogo, 1024);
-
-intelLogo = null;
-myLcd = null;
-LCD.cleanUp();
-LCD = null;
diff --git a/examples/javascript/oled_ssd1327.js b/examples/javascript/oled_ssd1327.js
deleted file mode 100644
index 9569f0f..0000000
--- a/examples/javascript/oled_ssd1327.js
+++ /dev/null
@@ -1,191 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-//Load lcd module
-var LCD = require('jsupm_lcd');
-
-var myLcd = new LCD.SSD1327 (0, 0x3C);
-
-var logoArr = [0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x06, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x01, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x07, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x80,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x07, 0x80, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x01, 0xC0,
-0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
-0x07, 0x80, 0x01, 0xE0, 0x08, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x20, 0x0F, 0x80, 0x01, 0xE0,
-0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
-0x0F, 0x00, 0x01, 0xE0, 0x08, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x30, 0x0F, 0x00, 0x01, 0xE0,
-0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
-0x0F, 0x00, 0x01, 0xE0, 0x18, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x30, 0x0F, 0x00, 0x01, 0xE0,
-0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
-0x0F, 0x00, 0x01, 0xE0, 0x18, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x38, 0x0F, 0x00, 0x01, 0xE0,
-0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
-0x0F, 0x80, 0x01, 0xE0, 0x38, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x3C, 0x0F, 0x80, 0x01, 0xE0,
-0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E,
-0x0F, 0x80, 0x03, 0xE0, 0x78, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x1E, 0x07, 0x80, 0x03, 0xE0,
-0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
-0x07, 0x80, 0x03, 0xE0, 0xF0, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x1F, 0x07, 0x80, 0x03, 0xC1,
-0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
-0x87, 0xC0, 0x07, 0xC1, 0xF0, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x0F, 0x83, 0xC0, 0x07, 0x83,
-0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
-0xC3, 0xC0, 0x07, 0x87, 0xE0, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x07, 0xE1, 0xE0, 0x07, 0x0F,
-0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
-0xF0, 0xE0, 0x0F, 0x0F, 0x80, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x01, 0xF8, 0xF0, 0x0E, 0x1F,
-0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
-0xF8, 0x70, 0x1C, 0x3F, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0xFC, 0x30, 0x18, 0x7E,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x7F, 0x18, 0x30, 0xFC, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x1F, 0x88, 0x21, 0xF0,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x0F, 0xC4, 0x47, 0xE0, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x0F, 0x80,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0xF8, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
-0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x6C, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06,
-0x00, 0x00, 0x60, 0x00, 0x7E, 0x3F, 0x0F, 0xC3,
-0xF0, 0xFA, 0x0F, 0xDF, 0xE1, 0x9F, 0xEC, 0x7E,
-0xE6, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x1C, 0xDF,
-0xE1, 0xB9, 0xEC, 0xE7, 0xE0, 0x61, 0xD8, 0x66,
-0x1B, 0x86, 0x1C, 0x06, 0x61, 0xB0, 0x6D, 0xC3,
-0x7C, 0x7F, 0xFF, 0xFF, 0xFF, 0x06, 0x0F, 0x86,
-0x61, 0xB0, 0x6D, 0x83, 0x3E, 0x7F, 0xFF, 0xFF,
-0xFF, 0x06, 0x07, 0xC6, 0x61, 0xB0, 0x6D, 0x83,
-0xC3, 0x61, 0x18, 0x46, 0x03, 0x86, 0x18, 0x66,
-0x61, 0xB0, 0x6D, 0xC3, 0xFE, 0x7F, 0x9F, 0xE7,
-0xF9, 0xFE, 0x1F, 0xE6, 0x3F, 0x9F, 0xEC, 0xFE,
-0x7E, 0x3F, 0x0F, 0xC3, 0xF0, 0xFA, 0x0F, 0xC6,
-0x3F, 0x9F, 0xEC, 0x7E, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00,
-0x00, 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x44, 0x00, 0x00, 0x20, 0x82, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0xF3,
-0xCF, 0x70, 0x9E, 0x79, 0xE7, 0x80, 0x00, 0x00,
-0x00, 0x00, 0x7D, 0x9E, 0x68, 0x20, 0xB2, 0xC8,
-0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x9E,
-0x6F, 0x20, 0xB2, 0xF9, 0xE7, 0x80, 0x00, 0x00,
-0x00, 0x00, 0x46, 0x9A, 0x61, 0x20, 0xB2, 0xCB,
-0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xF3,
-0xCF, 0x30, 0x9E, 0x79, 0xE7, 0x90, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x7C, 0x02, 0x00, 0x00, 0x82, 0x60, 0x00, 0x00,
-0xF8, 0x00, 0x00, 0x40, 0x40, 0x02, 0x00, 0x00,
-0x83, 0x60, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x40,
-0x60, 0xB7, 0x79, 0xE7, 0x81, 0xC7, 0x92, 0x70,
-0x89, 0xE7, 0x9E, 0x78, 0x7C, 0xE2, 0xC9, 0x2C,
-0x81, 0xCC, 0xD2, 0x40, 0xFB, 0x21, 0xB2, 0x48,
-0x40, 0x62, 0xF9, 0x2C, 0x80, 0x8C, 0xD2, 0x40,
-0x8B, 0xE7, 0xB0, 0x48, 0x40, 0xE2, 0xC9, 0x2C,
-0x80, 0x84, 0xD2, 0x40, 0x8B, 0x2D, 0x92, 0x48,
-0x7D, 0xB3, 0x79, 0x27, 0x80, 0x87, 0x9E, 0x40,
-0x8D, 0xE7, 0x9E, 0x48, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
-
-var SeeedLogo = new LCD.uint8Array(logoArr.length);
-for (var x = 0; x < logoArr.length; x++)
-	SeeedLogo.setitem(x, logoArr[x]);
-
-// If you don't set the display to be white, the seeed logo will appear jagged
-myLcd.setGrayLevel(12);
-myLcd.draw(SeeedLogo, 96 * 96 / 8);
-
-
-for (var i = 0; i < 12; i++)
-{
-	myLcd.setCursor(i, 0);
-	myLcd.setGrayLevel(i);
-	myLcd.write('Hello World');
-}
-
-
diff --git a/examples/javascript/otp538u.js b/examples/javascript/otp538u.js
deleted file mode 100644
index f0d2555..0000000
--- a/examples/javascript/otp538u.js
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// analog voltage, usually 3.3 or 5.0
-var OTP538U_AREF = 5.0;
-
-var tempIRSensor_lib = require('jsupm_otp538u');
-
-// Instantiate a OTP538U on analog pins A0 and A1
-// A0 is used for the Ambient Temperature and A1 is used for the
-// Object temperature.
-var tempIRSensor_obj = new tempIRSensor_lib.OTP538U(0, 1, OTP538U_AREF);
-
-
-function checkTemp()
-{
-	var outputStr = "Ambient temp: " +
-		roundNum(tempIRSensor_obj.ambientTemperature(), 2) +
-		" C, Object temp: " +
-		roundNum(tempIRSensor_obj.objectTemperature(), 2) +
-		" C";
-	console.log(outputStr);
-}
-
-var myInterval = setInterval(checkTemp, 1000);
-
-function roundNum(num, decimalPlaces)
-{
-	var extraNum = (1 / (Math.pow(10, decimalPlaces) * 1000));
-	return (Math.round((num + extraNum) *
-		(Math.pow(10, decimalPlaces))) / Math.pow(10, decimalPlaces));
-}
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/ozwdump.js b/examples/javascript/ozwdump.js
deleted file mode 100644
index dae7f16..0000000
--- a/examples/javascript/ozwdump.js
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015-2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ozw');
-
-
-/************** Main code **************/
-// Instantiate an OZW instance
-var sensor = new sensorObj.OZWDUMP();
-
-var defaultDev = "/dev/ttyACM0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-// The first thing to do is create options, then lock them when done.
-sensor.optionsCreate();
-sensor.optionsLock();
-
-// Next, initialize it.
-console.log("Initializing, this may take awhile depending on your ZWave network");
-
-sensor.init(defaultDev);
-console.log("Initialization complete");
-
-console.log("Dumping nodes...");
-
-sensor.dumpNodes(true);
-
-// The following is example output of dumpNodes:
-//
-// Dumping nodes...
-// Node 1: Z-Stick Gen5
-// Node 2: Smart Switch 6
-//    Index:  0, Type: bool, Label: Switch, Value: False
-//    Index:  2, Type: float, Label: Energy, Value: 1.190 kWh
-//    Index:  3, Type: float, Label: Previous Reading, Value: 1.190 kWh
-//    Index:  4, Type: int32, Label: Interval, Value: 1521 seconds
-//    Index:  5, Type: float, Label: Power, Value: 0.000 W
-//    Index:  6, Type: float, Label: Voltage, Value: 121.256 V
-//    Index:  7, Type: float, Label: Current, Value: 0.000 A
-//    Index:  8, Type: bool, Label: Exporting, Value: False
-//    Index: 45, Type: list, Label: Day, Value: Friday
-//    Index: 46, Type: byte, Label: Hour, Value: 5
-//    Index: 47, Type: byte, Label: Minute, Value: 53
-// Node 3: Multi Sensor
-//    Index:  0, Type: bool, Label: Sensor, Value: True
-//    Index:  1, Type: float, Label: Temperature, Value: 72.8 F
-//    Index:  2, Type: float, Label: Luminance, Value: 4 lux
-//    Index:  3, Type: float, Label: Relative Humidity, Value: 22 %
-//    Index: 17, Type: byte, Label: Battery Level, Value: 98 %
-// Node 5: Minimote
-// Node 6: Smart Energy Switch
-//    Index:  0, Type: bool, Label: Switch, Value: False
-//    Index:  2, Type: float, Label: Power, Value: 0.000 W
-//    Index:  3, Type: float, Label: Energy, Value: 1.609 kWh
-//    Index:  4, Type: float, Label: Previous Reading, Value: 1.609 kWh
-//    Index:  5, Type: int32, Label: Interval, Value: 1521 seconds
-//    Index:  6, Type: float, Label: Power, Value: 0.000 W
-//    Index:  7, Type: float, Label: Previous Reading, Value: 1.609 W
-//    Index:  8, Type: int32, Label: Interval, Value: 1521 seconds
-//    Index:  9, Type: bool, Label: Exporting, Value: False
-// Node 7: Smart Energy Switch
-//    Index:  0, Type: bool, Label: Switch, Value: False
-//    Index:  2, Type: float, Label: Power, Value: 0.000 W
-//    Index:  3, Type: float, Label: Energy, Value: 0.000 kWh
-//    Index:  4, Type: float, Label: Previous Reading, Value: 0.000 kWh
-//    Index:  5, Type: int32, Label: Interval, Value: 1521 seconds
-//    Index:  6, Type: float, Label: Power, Value: 0.000 W
-//    Index:  7, Type: float, Label: Previous Reading, Value: 0.000 W
-//    Index:  8, Type: int32, Label: Interval, Value: 1521 seconds
-//    Index:  9, Type: bool, Label: Exporting, Value: False
-//
-
-sensor = null;
-sensorObj.cleanUp();
-sensorObj = null;
-console.log("Exiting...");
-process.exit(0);
diff --git a/examples/javascript/p9813.js b/examples/javascript/p9813.js
deleted file mode 100644
index e1c112e..0000000
--- a/examples/javascript/p9813.js
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
-* Author: Sergey Kiselev <sergey.kiselev@intel.com>
-* Copyright (c) 2017 Sergey Kiselev
-* Based on the p9813 driver writen by Yannick Adam <yannick.adam@gmail.com>
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var lib = require('jsupm_p9813');
-
-// Instantiate a chain of 2 LEDs using pin 2 for clock and pin 3 for data
-var ledChain = new lib.P9813(2, 2, 3);
-
-// Set all LEDs to blue
-ledChain.setAllLeds(0, 0, 255);
-
-// Set a single led to green
-ledChain.setLed(1, 0, 255, 0);
-
-
-// Exit
-ledChain = null;
-process.exit(0);
diff --git a/examples/javascript/pca9685.js b/examples/javascript/pca9685.js
deleted file mode 100644
index 024fc39..0000000
--- a/examples/javascript/pca9685.js
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-function exit()
-{
-	console.log("Exiting");
-
-	if (myLEDController_obj)
-	{
-		// clear the bits we set earlier
-		myLEDController_obj.ledFullOff(3, false);
-		myLEDController_obj.ledFullOn(4, false);
-	}
-	myLEDController_obj = null;
-	if (LEDController_lib)
-	{
-		LEDController_lib.cleanUp();
-		LEDController_lib = null;
-	}
-	process.exit(0);
-}
-
-// The pca9685 is an led controller.
-// It's being used in this case to drive motors.
-var LEDController_lib = require('jsupm_pca9685');
-
-var I2CBus = LEDController_lib.PCA9685_I2C_BUS;
-var I2CAddr = LEDController_lib.PCA9685_DEFAULT_I2C_ADDR;
-// Instantiate an PCA9685 on I2C bus 0
-var myLEDController_obj = new LEDController_lib.PCA9685(I2CBus, I2CAddr);
-
-// put device to sleep
-myLEDController_obj.setModeSleep(true);
-
-// setup a period of 50Hz
-myLEDController_obj.setPrescaleFromHz(50);
-  
-// wake device up
-myLEDController_obj.setModeSleep(false);
-
-// Setup a 50% duty cycle -- on time at 0, off time at 2048 (4096 / 2)
-// Set for all channels
-var LEDNum = LEDController_lib.PCA9685_ALL_LED;
-myLEDController_obj.ledOnTime(LEDNum, 0);
-myLEDController_obj.ledOffTime(LEDNum, 2048);
-
-// but, turn channel 3 full off and channel 4 full on
-console.log("Turning channel 3 off, and channel 4 on.");
-console.log("All other channels will be PWM'd at a 50% duty cycle.");
-
-myLEDController_obj.ledFullOff(3, true);
-myLEDController_obj.ledFullOn(4, true);
-
-  // now, just sleep for 5 seconds, reset channels 3 and 4, and exit.
-console.log("Sleeping for 5 seconds...");
-
-setTimeout(exit, 5000);
-
-process.on('SIGINT', function()
-{
-	exit();
-});
diff --git a/examples/javascript/pn532-writeurl.js b/examples/javascript/pn532-writeurl.js
deleted file mode 100644
index 397318c..0000000
--- a/examples/javascript/pn532-writeurl.js
+++ /dev/null
@@ -1,133 +0,0 @@
-/*
-* Author: Jon Trulson <jtrulson@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load PN532 module
-var pn532 = require('jsupm_pn532');
-
-// Instantiate an PN532 on I2C bus 0 (default) using gpio 3 for the
-// IRQ, and gpio 2 for the reset pin.
-var myNFCObj = new pn532.PN532(3, 2);
-
-function writeUrl()
-{
-    if (uidSize.getitem(0) != 7)
-    {
-        console.log("This example will only write an NDEF URI to preformatted");
-        console.log("Mifare Ultralight or NTAG2XX tags");
-        exit();
-    }
-
-    // 48 bytes is maximum data area on ultralight cards, so we use that
-    // as the maximum datasize here.  Obviously if you have a bigger
-    // card, you can write more data.
-    if (!myNFCObj.ntag2xx_WriteNDEFURI(pn532.PN532.NDEF_URIPREFIX_HTTP, 
-                                       url, 48))
-    {
-        // failure
-        console.log("Failed to write NDEF record tag.");
-        exit(1);
-    }
-
-    console.log("Success, URL record written to tag.");
-}
-
-function toHex(d, pad)
-{
-    // pad should be between 1 and 8
-    return  ("00000000"+(Number(d).toString(16))).slice(-pad)
-}
-
-function exit()
-{
-	clearInterval(myInterval);
-	myNFCObj = null;
-	pn532.cleanUp();
-	pn532 = null;
-	console.log("Exiting");
-	process.exit(0);
-}
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	exit();
-});
-
-// "main"
-if (!myNFCObj.init())
-	console.log("init() failed");
-
-var vers = myNFCObj.getFirmwareVersion();
-
-if (vers)
-	console.log("Got firmware version: " + toHex(vers, 8));
-else
-{
-	console.log("Could not identify PN532");
-	exit();
-}
-
-// Now scan and identify any cards that come in range (1 for now)
-
-// Retry forever
-myNFCObj.setPassiveActivationRetries(0xff);
-
-myNFCObj.SAMConfig();
-
-var uidSize = new pn532.uint8Array(0);
-var uid = new pn532.uint8Array(7);
-
-// the URL we want to add as an NDEF record
-// NOTE: this cannot exceed 34 characters.
-url = "iotdk.intel.com";
-
-var myInterval = setInterval(function()
-{
-	for (var x = 0; x < 7; x++)
-		uid.setitem(x, 0);
-	if (myNFCObj.readPassiveTargetID(pn532.PN532.BAUD_MIFARE_ISO14443A,
-		                         uid, uidSize, 2000))
-	{
-		// found a card
-		console.log("Found a card: UID len " + uidSize.getitem(0));
-		process.stdout.write("UID: ");
-		for (var i = 0; i < uidSize.getitem(0); i++)
-                {
-                        var byteVal = uid.getitem(i);
-			process.stdout.write(toHex(byteVal, 2) + " ");
-                }
-		process.stdout.write("\n");
-		console.log("SAK: " + toHex(myNFCObj.getSAK(), 2));
-		console.log("ATQA: " + toHex(myNFCObj.getATQA(), 4));
-		console.log(" ");
-
-                // write the URL
-                writeUrl();
-            	clearInterval(myInterval);
-                return;
-	}
-	else
-		console.log("Waiting for a card...");
-}, 1000);
-
diff --git a/examples/javascript/pn532.js b/examples/javascript/pn532.js
deleted file mode 100644
index 3438f12..0000000
--- a/examples/javascript/pn532.js
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load PN532 module
-var pn532 = require('jsupm_pn532');
-
-// Instantiate an PN532 on I2C bus 0 (default) using gpio 3 for the
-// IRQ, and gpio 2 for the reset pin.
-var myNFCObj = new pn532.PN532(3, 2);
-
-if (!myNFCObj.init())
-	console.log("init() failed");
-
-var vers = myNFCObj.getFirmwareVersion();
-
-if (vers)
-	console.log("Got firmware version: " + toHex(vers, 8));
-else
-{
-	console.log("Could not identify PN532");
-	exit();
-}
-
-// Now scan and identify any cards that come in range (1 for now)
-
-// Retry forever
-myNFCObj.setPassiveActivationRetries(0xff);
-
-myNFCObj.SAMConfig();
-
-var uidSize = new pn532.uint8Array(0);
-var uid = new pn532.uint8Array(7);
-
-var myInterval = setInterval(function()
-{
-	for (var x = 0; x < 7; x++)
-		uid.setitem(x, 0);
-	if (myNFCObj.readPassiveTargetID(pn532.PN532.BAUD_MIFARE_ISO14443A,
-		                         uid, uidSize, 2000))
-	{
-		// found a card
-		console.log("Found a card: UID len " + uidSize.getitem(0));
-		process.stdout.write("UID: ");
-		for (var i = 0; i < uidSize.getitem(0); i++)
-                {
-                        var byteVal = uid.getitem(i);
-			process.stdout.write(toHex(byteVal, 2) + " ");
-                }
-		process.stdout.write("\n");
-		console.log("SAK: " + toHex(myNFCObj.getSAK(), 2));
-		console.log("ATQA: " + toHex(myNFCObj.getATQA(), 4));
-		console.log(" ");
-	}
-	else
-		console.log("Waiting for a card...");
-}, 1000);
-
-function toHex(d, pad)
-{
-    // pad should be between 1 and 8
-    return  ("00000000"+(Number(d).toString(16))).slice(-pad)
-}
-
-function exit()
-{
-	clearInterval(myInterval);
-	myNFCObj = null;
-	pn532.cleanUp();
-	pn532 = null;
-	console.log("Exiting");
-	process.exit(0);
-}
-
-// When exiting: clear interval, and print message
-process.on('SIGINT', function()
-{
-	exit();
-});
diff --git a/examples/javascript/ppd42ns.js b/examples/javascript/ppd42ns.js
deleted file mode 100644
index 2e279ca..0000000
--- a/examples/javascript/ppd42ns.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Load dust sensor module
-var dustSensor = require('jsupm_ppd42ns');
-// Instantiate a dust sensor on digital pin D8
-var myDustSensor = new dustSensor.PPD42NS(8);
-
-var data;
-
-// Continue until user ends program
-var notice = "This program will give readings ";
-notice += "every 30 seconds until you stop it"
-console.log(notice);
-while(1)
-{
-	data = myDustSensor.getData();
-	console.log("Low pulse occupancy: " + data.lowPulseOccupancy);
-	console.log("Ratio: " + data.ratio);
-	console.log("Concentration: " + data.concentration);
-}
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/relay.js b/examples/javascript/relay.js
deleted file mode 100644
index d89b236..0000000
--- a/examples/javascript/relay.js
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load UPM module
-var upm = require('jsupm_relay');
-
-// Create the relay switch object using GPIO pin 0
-var relay = new upm.Relay(0);
-
-// Close and then open the relay switch 3 times,
-// waiting one second each time. The LED on the relay switch
-// will light up when the switch is on (closed).
-// The switch will also make a noise between transitions.
-var i = 0;
-var waiting = setInterval(function() {
-    if (i % 2 == 0) {
-        relay.on();
-        if (relay.isOn())
-            console.log(relay.name() + " is on");
-    } else {
-        relay.off();
-        if (relay.isOff())
-            console.log(relay.name() + " is off");
-    }
-    i++;
-    if (i == 6) clearInterval(waiting);
-}, 1000);
diff --git a/examples/javascript/rfr359f.js b/examples/javascript/rfr359f.js
deleted file mode 100644
index 6eeca98..0000000
--- a/examples/javascript/rfr359f.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var distInterrupter = require("jsupm_rfr359f");
-
-// Instantiate an RFR359F digital pin D2
-// This was tested on the Grove IR Distance Interrupter
-var myDistInterrupter = new distInterrupter.RFR359F(2);
-
-// The range appears to be about 4 inches, depending on adjustment
-var myInterval = setInterval(function()
-{
-	if (myDistInterrupter.objectDetected())
-		console.log("Object detected");
-	else
-		console.log("Area is clear");
-}, 100);
-
-// When exiting: turn off LED, clear interval, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/rgbringcoder.js b/examples/javascript/rgbringcoder.js
deleted file mode 100644
index 9b9f008..0000000
--- a/examples/javascript/rgbringcoder.js
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var ringcoderObj = require('jsupm_rgbringcoder');
-
-// There are a lot of pins to hook up.  These pins are valid for the
-// Edison board, but may need to be adjusted for other platforms.
-
-// In order:
-// enable      - 4
-// latch       - 10
-// clear       - 11
-// clock       - 2
-// data        - 9
-// switch      - 7
-
-// red pwm     - 3
-// green pwm   - 5
-// blue pwm    - 6
-
-// encA        - 12
-// encB        - 13
-var ringCoder = new ringcoderObj.RGBRingCoder(4, 10, 11, 2, 9, 7, 12, 13, 3, 
-                                              5, 6);
-
-var spin = 0x0001;
-var oldState = false;
-var oldPos = 0;
-
-// Lets go green
-ringCoder.setRGBLED(0.99, 0.01, 0.99);
-
-setInterval(function()
-{
-    // you spin me round...
-    if ((spin & 0xffff) == 0)
-        spin = 0x0001;
-    
-    ringCoder.setRingLEDS(spin);
-    spin <<= 1;
-    
-    // check button state
-    var bstate = ringCoder.getButtonState();
-    if (bstate != oldState)
-    {
-        console.log("Button state changed from " + oldState + " to "
-            + bstate);
-        oldState = bstate;
-    }
-    
-    // check encoder position
-    var epos = ringCoder.getEncoderPosition();
-    if (epos != oldPos)
-    {
-        console.log("Encoder position changed from " + oldPos + " to "
-            + epos);
-        oldPos = epos;
-    }
-}, 100);
-
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    ringCoder = null;
-    ringcoderObj.cleanUp();
-    ringcoderObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
-
-
-
diff --git a/examples/javascript/rhusb.js b/examples/javascript/rhusb.js
deleted file mode 100644
index 23d2bf6..0000000
--- a/examples/javascript/rhusb.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_rhusb');
-
-
-/************** Main code **************/
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device " + defaultDev);
-console.log("Initializing...");
-
-// Instantiate an RHUSB instance on defaultDev
-var sensor = new sensorObj.RHUSB(defaultDev);
-
-// output the firmware ID
-console.log("Firmware ID:", sensor.getFirmwareID());
-console.log("");
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-
-    console.log("Humidity:", sensor.getHumidity(), "%");
-
-    console.log("");
-
-}, 1000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/rn2903-p2p-rx.js b/examples/javascript/rn2903-p2p-rx.js
deleted file mode 100644
index 014ffd0..0000000
--- a/examples/javascript/rn2903-p2p-rx.js
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_rn2903');
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device:", defaultDev);
-
-// Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-var sensor = new sensorObj.RN2903(defaultDev,
-                                  sensorObj.RN2903_DEFAULT_BAUDRATE);
-
-// To use an internal UART understood by MRAA, use the following
-// to inititialize rather than the above, which by default uses a
-// tty path.
-//
-// var sensor = new sensorObj.RN2903(0,
-//                                   sensorObj.RN2903_DEFAULT_BAUDRATE);
-
-// enable debugging
-// sensor.setDebug(true);
-
-// get version
-if (sensor.command("sys get ver"))
-{
-    console.log("Failed to retrieve device version string");
-    process.exit(1);
-}
-console.log("Firmware version: " + sensor.getResponse());
-
-console.log("Hardware EUI: " + sensor.getHardwareEUI());
-
-// For this example, we will just try to receive a packet
-// transmitted by the p2p-tx rn2903 example.  We reset the
-// device to defaults, and we do not make any adjustments to the
-// radio configuration.  You will probably want to do so for a
-// real life application.
-
-// The first thing to do is to suspend the LoRaWAN stack on the device.
-sensor.macPause();
-
-// We will use continuous mode (window_size 0), though the default
-// radio watch dog timer will expire every 15 seconds.  We will
-// just loop here.
-
-while (true)
-{
-    console.log("Waiting for packet...");
-    var rv = sensor.radioRx(0);
-    if (rv)
-    {
-        console.log("radioRx() failed with code " + rv);
-    }
-    else
-    {
-        var resp = sensor.getResponse();
-        var payload = sensor.getRadioRxPayload();
-        if (!payload.length)
-            console.log("Got response: '" + resp + "'");
-        else
-            console.log("Got payload: '"
-                        + sensor.fromHex(payload)
-                        + "'");
-    }
-
-    console.log();
-}
-
-process.on('SIGINT', function() {
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/rn2903-p2p-tx.js b/examples/javascript/rn2903-p2p-tx.js
deleted file mode 100644
index 45c15d7..0000000
--- a/examples/javascript/rn2903-p2p-tx.js
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_rn2903');
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device:", defaultDev);
-
-// Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-var sensor = new sensorObj.RN2903(defaultDev,
-                                  sensorObj.RN2903_DEFAULT_BAUDRATE);
-
-// To use an internal UART understood by MRAA, use the following
-// to inititialize rather than the above, which by default uses a
-// tty path.
-//
-// var sensor = new sensorObj.RN2903(0,
-//                                   sensorObj.RN2903_DEFAULT_BAUDRATE);
-
-// enable debugging
-// sensor.setDebug(true);
-
-// get version
-if (sensor.command("sys get ver"))
-{
-    console.log("Failed to retrieve device version string");
-    process.exit(1);
-}
-console.log("Firmware version: " + sensor.getResponse());
-
-console.log("Hardware EUI: " + sensor.getHardwareEUI());
-
-// For this example, we will just try transmitting a packet over
-// LoRa.  We reset the device to defaults, and we do not make any
-// adjustments to the radio configuration.  You will probably want
-// to do so for a real life application.
-
-// The first thing to do is to suspend the LoRaWAN stack on the device.
-sensor.macPause();
-
-// the default radio watchdog timer is set for 15 seconds, so we
-// will send a packet every 10 seconds.  In reality, local
-// restrictions limit the amount of time on the air, so in a real
-// implementation, you would not want to send packets that
-// frequently.
-
-var count = 0;
-function transmit()
-{
-    var output = "Ping " + count;
-    count++;
-
-    // All payloads must be hex encoded
-    var payload = sensor.toHex(output);
-
-    console.log("Transmitting a packet, data: '"
-                + output
-                + "' -> hex: '"
-                + payload
-                + "'");
-
-    var rv = sensor.radioTx(payload);
-
-    if (rv == sensorObj.RN2903_RESPONSE_OK)
-        console.log("Transmit successful.");
-    else
-        console.log("Transmit failed with code " + rv);
-
-    console.log();
-}
-
-setInterval(transmit, 10000);
-
-process.on('SIGINT', function() {
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/rn2903.js b/examples/javascript/rn2903.js
deleted file mode 100644
index 9904299..0000000
--- a/examples/javascript/rn2903.js
+++ /dev/null
@@ -1,131 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_rn2903');
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device:", defaultDev);
-
-// Instantiate a RN2903 sensor on defaultDev at 57600 baud.
-var sensor = new sensorObj.RN2903(defaultDev,
-                                  sensorObj.RN2903_DEFAULT_BAUDRATE);
-
-// To use an internal UART understood by MRAA, use the following
-// to inititialize rather than the above, which by default uses a
-// tty path.
-//
-// var sensor = new sensorObj.RN2903(0,
-//                                   sensorObj.RN2903_DEFAULT_BAUDRATE);
-
-// enable debugging
-// sensor.setDebug(true);
-
-// get version
-if (sensor.command("sys get ver"))
-{
-    console.log("Failed to retrieve device version string");
-    process.exit(1);
-}
-console.log("Firmware version: " + sensor.getResponse());
-
-console.log("Hardware EUI: " + sensor.getHardwareEUI());
-
-// we can support two types of join, OTAA and ABP. Each requires
-// that certain parameters be set first.  We will only attempt ABP
-// joining with this example since it's the only one that can
-// succeed without actual configuration.  In both cases, if you
-// are actually attempting to join a real LoRaWAN network, you
-// must change the parameters below to match the network you are
-// attempting to join.
-
-// For OTAA, you need to supply valid Device EUI, Application EUI,
-// and Application key:
-//
-// sensor.setDeviceEUI("0011223344556677");
-// sensor.setApplicationEUI("0011223344556677");
-// sensor.setApplicationKey("01234567012345670123456701234567");
-//
-// RN2903_JOIN_STATUS_T rv = sensor.join(RN2903_JOIN_TYPE_OTAA);
-// A successful join will return RN2903_JOIN_STATUS_ACCEPTED (0).
-// cout << "JOIN: got rv " << int(rv) << endl;
-
-// Try an ABP join.  Note, these parameters are made up.  For a
-// real network, you will want to use the correct values
-// obviously.  For an ABP join, you need to supply the Device
-// Address, Network Session Key, and the Application Session Key.
-
-sensor.setDeviceAddr("00112233");
-sensor.setNetworkSessionKey("00112233001122330011223300112233");
-sensor.setApplicationSessionKey("00112233001122330011223300112233");
-
-var rv = sensor.join(sensorObj.RN2903_JOIN_TYPE_ABP);
-if (rv == sensorObj.RN2903_JOIN_STATUS_ACCEPTED)
-{
-    console.log("Join successful.");
-
-    // All transmit payloads must be hex encoded strings, so
-    // pretend we have a temperature sensor that gave us a value
-    // of 25.6 C, and we want to transmit it.
-    var faketemp = "25.6";
-    console.log("Transmitting a packet...");
-
-    var trv = sensor.macTx(sensorObj.RN2903_MAC_MSG_TYPE_UNCONFIRMED,
-                           1, // port number
-                           sensor.toHex(faketemp));
-
-    if (trv == sensorObj.RN2903_MAC_TX_STATUS_TX_OK)
-        console.log("Transmit successful.");
-    else
-    {
-        // check to see if we got a downlink packet
-        if (trv == sensorObj.RN2903_MAC_TX_STATUS_RX_RECEIVED)
-        {
-            console.log("Transmit successful, downlink packet received: "
-                         + sensor.getResponse());
-        }
-        else
-        {
-            console.log("Transmit failed with code " + trv);
-        }
-    }
-}
-else
-{
-    console.log("Join failed with code " + rv);
-}
-
-
-console.log("Exiting");
-
-sensor = null;
-sensorObj.cleanUp();
-sensorObj = null;
-process.exit(0);
diff --git a/examples/javascript/rotary.js b/examples/javascript/rotary.js
deleted file mode 100644
index 6a0e5fe..0000000
--- a/examples/javascript/rotary.js
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//initialization
-var upm = require('jsupm_rotary');
-
-//setup access analog input Analog pin #0 (A0)
-var rotary = new upm.Rotary(0);
-
-loop();
-
-function loop() {
-    var abs = rotary.abs_value();
-    var absdeg = rotary.abs_deg();
-    var absrad = rotary.abs_rad();
-
-    var rel = rotary.rel_value();
-    var reldeg = rotary.rel_deg();
-    var relrad = rotary.rel_rad();
-
-    //write the knob value to the console in different formats
-    console.log("Abs: " + abs + " " + Math.round(parseInt(absdeg)) + " " + absrad.toFixed(3));
-    console.log("Rel: " + rel + " " + Math.round(parseInt(reldeg)) + " " + relrad.toFixed(3));
-
-    //wait 2s and call function again
-    setTimeout(loop, 2000);
-}
diff --git a/examples/javascript/rotaryencoder.js b/examples/javascript/rotaryencoder.js
deleted file mode 100644
index 13f9c7f..0000000
--- a/examples/javascript/rotaryencoder.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var rotaryEncoder = require("jsupm_rotaryencoder");
-
-// Instantiate a Grove Rotary Encoder, using signal pins D2 and D3
-var myRotaryEncoder = new rotaryEncoder.RotaryEncoder(2, 3);
-
-var myInterval = setInterval(function()
-{
-	console.log("Position: " + myRotaryEncoder.position());
-}, 100);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/rpr220.js b/examples/javascript/rpr220.js
deleted file mode 100644
index 0f3fe05..0000000
--- a/examples/javascript/rpr220.js
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var reflectiveSensor = require("jsupm_rpr220");
-
-// This example uses a simple method to determine current status
-
-// Instantiate an RPR220 digital pin D2
-// This was tested on the Grove IR Reflective Sensor
-var myReflectiveSensor = new reflectiveSensor.RPR220(2);
-
-var myInterval = setInterval(function()
-{
-	if (myReflectiveSensor.blackDetected())
-		console.log("Black detected");
-	else
-		console.log("Black NOT detected");
-}, 100);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/rsc.js b/examples/javascript/rsc.js
deleted file mode 100644
index 1e53edc..0000000
--- a/examples/javascript/rsc.js
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
-* Author: Abhishek Malik <abhishek.malik@intel.com>
-* Copyright (c) 2017 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var rsc = require("jsupm_rsc");
-
-// Instantiate a Honeywell RSC Pressure Sensor at bus 0
-var rsc_sensor = new rsc.RSC(0, 9, 8);
-
-console.log("Sensor Name: " + rsc_sensor.getSensorName());
-console.log("Sensor Serial No.: " + rsc_sensor.getSensorSerialNumber());
-
-var myInterval = setInterval(function()
-{
-    console.log("Pressure: " + rsc_sensor.getPressure() + " " + rsc_sensor.getPressureUnit());
-    console.log("Temperature: " + rsc_sensor.getTemperature() + " C");
-}, 100);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-    clearInterval(myInterval);
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/scam.js b/examples/javascript/scam.js
deleted file mode 100644
index a3664f5..0000000
--- a/examples/javascript/scam.js
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var cameraObj = require('jsupm_scam');
-
-// Instantiate a Serial Camera on UART 0
-var camera = new cameraObj.SCAM(0);
-
-// make sure port is initialized properly. 115200 baud is the default.
-if (!camera.setupTty())
-{
-    console.log("Failed to setup tty port parameters");
-    process.exit(1);
-}
-
-if (camera.init())
-    console.log("Initialized...");
-else
-    console.log("init() failed");
-
-if (camera.preCapture())
-    console.log("preCapture succeeded...");
-else
-    console.log("preCapture failed.");
-
-if (camera.doCapture())
-    console.log("doCapture succeeded...");
-else
-    console.log("doCapture failed.");
-
-console.log("Image size is " + camera.getImageSize() + " bytes");
-
-if (camera.getImageSize() > 0)
-{
-    console.log("Storing image.jpg...");
-    if (camera.storeImage("image.jpg"))
-        console.log("storeImage succeeded...");
-    else
-        console.log("storeImage failed.");
-}
-
-
-camera = null;
-cameraObj.cleanUp();
-cameraObj = null;
-console.log("Exiting.");
-process.exit(0);
-
diff --git a/examples/javascript/sensortemplate.js b/examples/javascript/sensortemplate.js
deleted file mode 100644
index 53e02fe..0000000
--- a/examples/javascript/sensortemplate.js
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * The MIT License (MIT)
- *
- * Author: Your Full Name <your@email.address>
- * Copyright (c) <year> <copyright holder>
- *
- * Permission is hereby granted, free of charge, to any person obtaining a copy of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
- * the Software, and to permit persons to whom the Software is furnished to do so,
- * subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in all
- * copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var jsupm_sensortemplate = require('jsupm_sensortemplate');
-
-// Create an instance of the sensor
-var sensor = new upm_sensortemplate.SensorTemplate(0);
-
-loop();
-
-function loop()
-{
-    // Call a method from the sensortemplate
-    console.log("SensorTemplate says: " + sensor.helloWorld());
-
-    // Call loop every 2 seconds
-    setTimeout(loop, 2000);
-}
diff --git a/examples/javascript/sht1x.js b/examples/javascript/sht1x.js
deleted file mode 100644
index 15c772f..0000000
--- a/examples/javascript/sht1x.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var sensorObj = require('jsupm_sht1x');
-
-// Instantiate a SHT1X sensor using D2 as the clock, and D3 as the
-// data pin.
-var sensor = new sensorObj.SHT1X(2, 3);
-
-// Every 2 seconds, update and print values
-setInterval(function()
-{
-    sensor.update();
-
-    console.log("Temperature: "
-                + sensor.getTemperature()
-                + " C");
-    console.log("Humidity:    "
-                + sensor.getHumidity()
-                + " RH");
-
-    console.log();
-
-}, 2000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/si114x.js b/examples/javascript/si114x.js
deleted file mode 100644
index 39674da..0000000
--- a/examples/javascript/si114x.js
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var UV_lib = require('jsupm_si114x');
-
-// Instantiate a SI114x UV Sensor on I2C bus 0
-var myUVSensor = new UV_lib.SI114X(0);
-
-for (var x in myUVSensor)
-	console.log(x);
-// First initialize it
-myUVSensor.initialize();
-
-console.log("UV Index Scale:");
-console.log("---------------");
-console.log("11+        Extreme");
-console.log("8-10       Very High");
-console.log("6-7        High");
-console.log("3-5        Moderate");
-console.log("0-2        Low\n");
-
-// update every second and print the currently measured UV Index
-var myInterval = setInterval(function()
-{
-	// update current value(s)
-	myUVSensor.update();
-
-	// print detected value
-	console.log("UV Index: " + myUVSensor.getUVIndex());
-}, 1000);
-
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myUVSensor = null
-	UV_lib.cleanUp();
-	UV_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/slide.js b/examples/javascript/slide.js
deleted file mode 100644
index 14bb6ef..0000000
--- a/examples/javascript/slide.js
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upm_slide = require('jsupm_slide');
-
-//setup access analog input Analog pin #0 (A0)
-var Slide = new upm_slide.Slide(0);
-
-loop();
-
-function loop()
-{
-    var raw = Slide.raw_value();
-    var volts = Slide.voltage_value();
-
-    //write the slider values to the console
-    console.log("Slider Value: " + raw + " = " + volts.toFixed(2) + " V");
-
-    //wait 2 s then call function again
-    setTimeout(loop, 2000);
-}
diff --git a/examples/javascript/sm130.js b/examples/javascript/sm130.js
deleted file mode 100644
index 6855e96..0000000
--- a/examples/javascript/sm130.js
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_sm130');
-
-// Instantiate a UART based SM130 RFID Module using defaults
-var sensor = new sensorObj.SM130();
-
-// Set the baud rate, 19200 baud is the default.
-if (sensor.setBaudRate(19200))
-{
-    console.log("Failed to set baud rate");
-    process.exit(0);
-}
-
-console.log("Resetting...");
-sensor.reset();
-
-console.log("Firmware revision: " + sensor.getFirmwareVersion());
-
-console.log("Waiting up to 5 seconds for a tag...");
-
-if (sensor.waitForTag(5000))
-{
-    console.log("Found tag, UID: " +
-                sensor.string2HexString(sensor.getUID()));
-    console.log("Tag Type: " +
-                sensor.tag2String(sensor.getTagType()));
-}
-else
-{
-    // error
-    console.log("waitForTag failed: " +
-                sensor.getLastErrorString());
-}
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/speaker.js b/examples/javascript/speaker.js
deleted file mode 100644
index 0a22424..0000000
--- a/examples/javascript/speaker.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-//Load Speaker module
-var Speaker = require('jsupm_speaker');
-// Instantiate a Speaker on digital pin D2
-var mySpeaker = new Speaker.Speaker(2);
-
-// Play all 7 of the lowest notes
-mySpeaker.playAll();
-
-// Play a medium C-sharp
-mySpeaker.playSound('c', true, "med");
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/speaker_pwm.js b/examples/javascript/speaker_pwm.js
deleted file mode 100644
index f353af4..0000000
--- a/examples/javascript/speaker_pwm.js
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2017 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-//Load Speaker module
-var Speaker = require('jsupm_speaker');
-// Instantiate a Speaker (PWM) pin D3 in PWM mode
-var speaker = new Speaker.Speaker(3, true);
-
-// emit a series of frequencies for 500ms each
-speaker.emit(50, 500);
-speaker.emit(75, 500);
-speaker.emit(125, 500);
-speaker.emit(250, 500);
-speaker.emit(500, 500);
-speaker.emit(1000, 500);
-speaker.emit(2000, 500);
-speaker.emit(3000, 500);
-speaker.emit(5000, 500);
-speaker.emit(10000, 500);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/st7735.js b/examples/javascript/st7735.js
deleted file mode 100644
index 8959a69..0000000
--- a/examples/javascript/st7735.js
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
-* Author:  Takahiro Poly Horikawa <horikawa.takahiro@gmail.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var st7735 = require('jsupm_st7735');
-
-var lcd = new st7735.ST7735(10, 7, 9, 8);
-lcd.fillScreen(st7735.ST7735_RED);
-lcd.refresh();
-
-lcd.fillScreen(st7735.ST7735_CYAN);
-lcd.refresh();
-
-lcd.fillScreen(st7735.ST7735_BLACK);
-lcd.refresh();
-
-lcd.drawLine(10, 10, 10, 100, st7735.ST7735_MAGENTA);
-lcd.drawLine(20, 20, 10, 100, st7735.ST7735_YELLOW);
-lcd.drawLine(30, 30, 10, 100, st7735.ST7735_WHITE);
-lcd.refresh();
-
-lcd.drawPixel(20, 20, st7735.ST7735_GREEN);
-lcd.refresh();
-
-lcd.drawTriangle(50, 50, 80, 80, 60, 90, st7735.ST7735_GREEN);
-lcd.refresh();
-
-lcd.drawCircle(100, 110, 10, st7735.ST7735_BLUE);
-lcd.refresh();
-
-lcd.setTextWrap(0x0);
-
-lcd.setCursor(0, 30);
-lcd.setTextColor(st7735.ST7735_RED, st7735.ST7735_RED);
-lcd.setTextSize(1);
-lcd.print('Hello World!');
-
-lcd.setCursor(10, 50);
-lcd.setTextColor(st7735.ST7735_RED, st7735.ST7735_RED);
-lcd.setTextSize(2);
-lcd.print('BIG');
-
-lcd.refresh();
-
diff --git a/examples/javascript/stepmotor.js b/examples/javascript/stepmotor.js
deleted file mode 100644
index 6ad8f4a..0000000
--- a/examples/javascript/stepmotor.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* Author:  Mihai Tudor Panu <mihai.tudor.panu@intel.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var lib = require('jsupm_stepmotor');
-
-// Instantiate a stepper motor driver on pins 2 (direction) and 3 (step)
-var stepper = new lib.StepMotor(2, 3);
-
-function delay(milliseconds) {
-    var startTime = Date.now();
-    while (Date.now() - startTime < milliseconds);
-}
-
-stepper.quit = function()
-{
-    stepper = null;
-    lib.cleanUp();
-    lib = null;
-    console.log("Exiting");
-    process.exit(0);
-};
-
-// The driver is synchronous and blocking
-console.log("Rotating 1 revolution forward and back at 60 rpm.");
-stepper.setSpeed(60);
-stepper.stepForward(200);
-delay(1000);
-stepper.stepBackward(200);
-delay(1000);
-
-console.log("Rotating 1 revolution forward and back at 150 rpm.");
-stepper.setSpeed(150);
-stepper.stepForward(200);
-delay(1000);
-stepper.stepBackward(200);
-delay(1000);
-
-console.log("Rotating 1 revolution forward and back at 300 rpm.");
-stepper.setSpeed(300);
-stepper.stepForward(200);
-delay(1000);
-stepper.stepBackward(200);
-delay(1000);
-
-stepper.quit();
diff --git a/examples/javascript/sx1276-fsk.js b/examples/javascript/sx1276-fsk.js
deleted file mode 100644
index e5be2bb..0000000
--- a/examples/javascript/sx1276-fsk.js
+++ /dev/null
@@ -1,109 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_sx1276');
-
-var count = 0;
-var interval;
-
-/************** Functions **************/
-function transmit(sensor)
-{
-    var buffer = "Ping " + count;
-    count++;
-    console.log("Sending... " + buffer);
-
-    sensor.sendStr(buffer, 3000);
-    sensor.setSleep();
-}
-
-function receive(sensor)
-{
-    console.log("Attempting to receive... ");
-    var rv = 0;
-    rv = sensor.setRx(3000);
-
-    if (rv)
-    {
-        console.log("setRx returned " + rv);
-    }
-    else
-    {
-        console.log("Received Buffer: " + sensor.getRxBufferStr());
-    }
-
-    sensor.setSleep();
-}
-
-/************** Main code **************/
-// Instantiate an SX1276 using default parameters
-
-var sensor = new sensorObj.SX1276();
-
-console.log("Specify an argument to go into receive mode.  Default is transmit");
-
-// 915Mhz
-sensor.setChannel(915000000)
-
-// FSK configuration (rx and tx must be configured the same):
-// Tx output power = 14 dBm
-// FSK freq deviation = 25000 Hz
-// FSK bandwidth = 50000 bps
-// FSK AFC bandwidth = 83333 Hz
-// FSK datarate = 50000 bps
-// FSK preamble len = 5
-// FSK fixed length payload = false
-// FSK CRC check = true
-// FSK (rx) continuous Rx mode = False
-
-sensor.setTxConfig(sensorObj.SX1276.MODEM_FSK, 14, 25000, 0,
-                   50000, 0, 5, false, true, false, 0, false);
-    
-sensor.setRxConfig(sensorObj.SX1276.MODEM_FSK, 50000, 50000,
-                   0, 83333, 5, 0, false, 0, true,
-                   false, 0, false, true);
-
-
-if (process.argv.length > 2)
-{
-    // receive mode
-    interval = setInterval(function() { receive(sensor); }, 250);
-}
-else
-{
-    // transmit mode
-    interval = setInterval(function() { transmit(sensor); }, 1000);
-}
-
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/sx1276-lora.js b/examples/javascript/sx1276-lora.js
deleted file mode 100644
index da0dc41..0000000
--- a/examples/javascript/sx1276-lora.js
+++ /dev/null
@@ -1,107 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_sx1276');
-
-var count = 0;
-var interval;
-
-/************** Functions **************/
-function transmit(sensor)
-{
-    var buffer = "Ping " + count;
-    count++;
-    console.log("Sending... " + buffer);
-
-    sensor.sendStr(buffer, 3000);
-    sensor.setSleep();
-}
-
-function receive(sensor)
-{
-    console.log("Attempting to receive... ");
-    var rv = 0;
-    rv = sensor.setRx(3000);
-
-    if (rv)
-    {
-        console.log("setRx returned " + rv);
-    }
-    else
-    {
-        console.log("Received Buffer: " + sensor.getRxBufferStr());
-    }
-
-    sensor.setSleep();
-}
-
-/************** Main code **************/
-// Instantiate an SX1276 using default parameters
-
-var sensor = new sensorObj.SX1276();
-
-console.log("Specify an argument to go into receive mode.  Default is transmit");
-
-// 915Mhz
-sensor.setChannel(915000000)
-
-// LORA configuration (rx and tx must be configured the same):
-// Tx output power = 14 dBm
-// LORA bandwidth = 125000 (can also be 250K and 500K)
-// LORA spreading factor = 7
-// LORA coding rate = 1 (4/5)
-// LORA preamble len = 8
-// LORA symbol timeout = 5
-// LORA fixed payload = false
-// LORA IQ inversion = false
-// LORA (rx) continuous Rx mode = true
-
-sensor.setTxConfig(sensorObj.SX1276.MODEM_LORA, 14, 0, 125000,
-                    7, 1, 8, false, true, false, 0, false);
-
-sensor.setRxConfig(sensorObj.SX1276.MODEM_LORA, 125000, 7,
-                    1, 0, 8, 5, false, 0, true, false, 0, false, true);
-
-if (process.argv.length > 2)
-{
-    // receive mode
-    interval = setInterval(function() { receive(sensor); }, 250);
-}
-else
-{
-    // transmit mode
-    interval = setInterval(function() { transmit(sensor); }, 1000);
-}
-
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/sx6119.js b/examples/javascript/sx6119.js
deleted file mode 100644
index 25e8cc6..0000000
--- a/examples/javascript/sx6119.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var FM_receiver_lib = require('jsupm_sx6119');
-
-// Instantiate a SX6119 on digital pins 2 (power) and 3 (seek)
-// This example was tested on the Grove FM Receiver.
-var myFM_receiver_obj = new FM_receiver_lib.SX6119(2, 3);
-
-// if an argument was specified (any argument), seek to the next
-// station, else just toggle the power.
-
-
-console.log("Supply any argument to the command line to seek to the");
-console.log("next station.");
-console.log("Running the example without an argument will toggle the");
-console.log("power on or off.\n");
-
-var doSeek = false;
-
-if (process.argv.length > 2)
-	doSeek = true;
-
-// depending on what was selected, do it
-if (doSeek)
-	myFM_receiver_obj.seek();
-else
-	myFM_receiver_obj.togglePower();
-
-console.log("Exiting");
diff --git a/examples/javascript/t3311.js b/examples/javascript/t3311.js
deleted file mode 100644
index aaf3afd..0000000
--- a/examples/javascript/t3311.js
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_t3311');
-
-
-/************** Main code **************/
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Initializing...");
-
-// Instantiate an T3311 instance, using MODBUS slave address 1, and
-// default comm parameters (9600, 8, N, 2)
-var sensor = new sensorObj.T3311(defaultDev, 1);
-
-// output the serial number and firmware revision
-console.log("Serial Number:", sensor.getSerialNumber());
-console.log("Firmware Revision:", sensor.getFirmwareMajor() + "." +
-            sensor.getFirmwareMinor());
-console.log("");
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-
-    console.log("Humidity:", sensor.getHumidity(), "%");
-
-    // this value depends on the sensor configuration -- by default
-    // it is the dew point temperature
-    console.log("Computed Value:", sensor.getComputedValue());
-
-    // with FW revisions > 2.44, extended computed data is available
-    if (sensor.extendedDataAvailable())
-    {
-        console.log("Dew Point Temperature:", sensor.getDewPointTemperature(),
-                    "C /", sensor.getDewPointTemperature(true), "F");
-
-        console.log("Absolute Humidity:", sensor.getAbsoluteHumidity(),
-                    "g/m3");
-
-        console.log("Specific Humidity:", sensor.getSpecificHumidity(),
-                    "g/kg");
-
-        console.log("Mixing Ratio:", sensor.getMixingRatio(),
-                    "g/kg");
-
-        console.log("Specific Enthalpy:", sensor.getSpecificEnthalpy(),
-                    "kJ/kg");
-    }
-
-    console.log("");
-
-}, 1000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/t8100.js b/examples/javascript/t8100.js
deleted file mode 100644
index 473cc66..0000000
--- a/examples/javascript/t8100.js
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_t8100');
-
-
-/************** Main code **************/
-
-// You will need to edit this example to conform to your site and your
-// devices, specifically the Device Object Instance ID passed to the
-// constructor, and the arguments to initMaster() that are
-// appropriate for your BACnet network.
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device " + defaultDev);
-console.log("Initializing...");
-
-// Instantiate an T8100 object for an T8100 device that has 568000
-// as it's unique Device Object Instance ID.  NOTE: You will
-// certainly want to change this to the correct value for your
-// device(s).
-var sensor = new sensorObj.T8100(568000);
-
-// Initialize our BACnet master, if it has not already been
-// initialized, with the device and baudrate, choosing 1000001 as
-// our unique Device Object Instance ID, 2 as our MAC address and
-// using default values for maxMaster and maxInfoFrames
-sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-// Uncomment to enable debugging output
-// sensor.setDebug(true);
-
-console.log("");
-console.log("Device Description:", sensor.getDeviceDescription());
-console.log("Device Location:", sensor.getDeviceLocation());
-console.log("");
-
-// update and print a few values every 5 seconds
-setInterval(function()
-{
-    // update our values
-    sensor.update();
-
-    console.log("CO2 Concentration:", sensor.getCO2(), "ppm");
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-
-    console.log("Humidity:", sensor.getHumidity(), "%RH");
-
-    console.log("Relay State:", sensor.getRelayState());
-
-    console.log("");
-
-}, 5000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/ta12200.js b/examples/javascript/ta12200.js
deleted file mode 100644
index c000416..0000000
--- a/examples/javascript/ta12200.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var electricitySensor = require('jsupm_ta12200');
-// Instantiate a TA12-200 sensor on analog pin A0
-var myElectricitySensor = new electricitySensor.TA12200(0);
-
-var maxVal, current;
-var myInterval = setInterval(function()
-{
-	maxVal = myElectricitySensor.highestValue();
-	current = myElectricitySensor.milliAmps(maxVal);
-
-	outputStr = "Max ADC Value: " + maxVal +
-	", current: " + current + "mA";
-	console.log(outputStr);
-}, 100);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	myElectricitySensor = null;
-	electricitySensor.cleanUp();
-	electricitySensor = null;
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/tb7300.js b/examples/javascript/tb7300.js
deleted file mode 100644
index 740b86d..0000000
--- a/examples/javascript/tb7300.js
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_tb7300');
-
-
-/************** Main code **************/
-
-// You will need to edit this example to conform to your site and your
-// devices, specifically the Device Object Instance ID passed to the
-// constructor, and the arguments to initMaster() that are
-// appropriate for your BACnet network.
-
-var defaultDev = "/dev/ttyUSB0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device " + defaultDev);
-console.log("Initializing...");
-
-// Instantiate an TB7300 object for an TB7300 device that has 73001
-// as it's unique Device Object Instance ID.  NOTE: You will
-// certainly want to change this to the correct value for your
-// device(s).
-var sensor = new sensorObj.TB7300(73001);
-
-// Initialize our BACnet master, if it has not already been
-// initialized, with the device and baudrate, choosing 1000001 as
-// our unique Device Object Instance ID, 2 as our MAC address and
-// using default values for maxMaster and maxInfoFrames
-sensor.initMaster(defaultDev, 38400, 1000001, 2);
-
-// Uncomment to enable debugging output
-// sensor.setDebug(true);
-
-console.log("");
-console.log("Device Name:", sensor.getDeviceName());
-console.log("Device Description:", sensor.getDeviceDescription());
-console.log("Device Location:", sensor.getDeviceLocation());
-console.log("");
-
-console.log("Fan Mode:",
-            sensor.getMultiStateValueText(sensorObj.TB7300.MV_Fan_Mode));
-console.log("Fan Status:",
-             sensor.getMultiStateValueText(sensorObj.TB7300.MV_Fan_Status));
-console.log("System Mode:",
-            sensor.getMultiStateValueText(sensorObj.TB7300.MV_System_Mode));
-console.log("Service Alarm:",
-            sensor.getBinaryInputText(sensorObj.TB7300.BI_Service_Alarm));
-console.log("");
-
-// update and print the room temperature every 5 seconds
-setInterval(function()
-{
-    // update our values
-    sensor.update();
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-    console.log("");
-
-}, 5000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/tca9548.js b/examples/javascript/tca9548.js
deleted file mode 100644
index 7fbf18e..0000000
--- a/examples/javascript/tca9548.js
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
-* Author: Keelan Lightfoot <keelanlightfoot@gmail.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-/*
-* On its own, a i2c switch doesn't really do anything, so the best I can do is
-* flips some ports on and off to demonstrate the capabilities of the library.
-*/
-
-var tca = require('jsupm_tca9548a');
-
-// Assumes default bus and address
-var sw = new tca.TCA9548A(tca.TCA9548A_I2C_BUS,
-                          tca.TCA9548A_DEFAULT_ADDR);
-
-// Start with clean slate
-sw.disableAllPorts();
-console.log("All ports disabled.");
-showAllPorts();
-
-// Enable port 4
-sw.setPort(4, tca.TCA9548A.ENABLED, tca.TCA9548A.EXCLUSIVE);
-console.log("Port 4 enabled with exclusive access.");
-showAllPorts();
-
-// Enable port 5
-sw.setPort(5, tca.TCA9548A.ENABLED, tca.TCA9548A.INCLUSIVE);
-console.log("Port 5 enabled with inclusive access.");
-showAllPorts();
-
-// Disable port 5
-sw.setPort(5, tca.TCA9548A.DISABLED, tca.TCA9548A.INCLUSIVE);
-console.log("Port 5 disabled with inclusive access.");
-showAllPorts();
-
-// Enable all ports
-sw.enableAllPorts();
-console.log("All ports enabled.");
-showAllPorts();
-
-// Clean up our mess, in an oblique way.
-sw.setPort(4, tca.TCA9548A.DISABLED, tca.TCA9548A.EXCLUSIVE);
-console.log("Port 4 disabled with exclusive access.");
-showAllPorts();
-
-// fin
-process.exit(0);
-
-function showAllPorts() {
-    var ports = "";
-    for (var i = 0; i<8; i++) {
-	ports += (sw.getPort(i)?i:".");
-    }
-    console.log("Ports: "+ports);
-}
diff --git a/examples/javascript/tcs3414cs.js b/examples/javascript/tcs3414cs.js
deleted file mode 100644
index 220be3f..0000000
--- a/examples/javascript/tcs3414cs.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var colorSensor = require('jsupm_tcs3414cs');
-
-// Instantiate the color sensor on I2C
-var mycolorSensor = new colorSensor.TCS3414CS();
-
-var rgb = new colorSensor.tcs3414sc_rgb_t;
-
-// Print out the r, g, b, and clr value every 0.5 seconds
-setInterval(function()
-{
-        mycolorSensor.readRGB(rgb);
-        console.log(rgb.r + ", " + rgb.g + ", " + rgb.b + ", " + rgb.clr);
-}, 500);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/teams.js b/examples/javascript/teams.js
deleted file mode 100644
index d938761..0000000
--- a/examples/javascript/teams.js
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_teams');
-
-
-/************** Main code **************/
-
-console.log("Initializing...");
-
-// Instantiate an TEAMS instance, using A0 for temperature, and
-// 165.0 ohms for the rResistor value (for the libelium 4-20ma
-// interface)
-var sensor = new sensorObj.TEAMS(0, 165.0);
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    // is the sensor connected? (current >= 4ma)
-    console.log("Is Connected:", sensor.isConnected());
-    
-    // print computed current on the loop.  This includes the offset,
-    // if one was set by setOffsetMilliamps().
-    console.log("Milliamps:", sensor.getRawMilliamps());
-
-    // we show both C and F for temperature
-    console.log("Temperature:", sensor.getTemperature(),
-                "C /", sensor.getTemperature(true), "F");
-
-    console.log("");
-
-}, 1000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/temperature.js b/examples/javascript/temperature.js
deleted file mode 100644
index 93340fc..0000000
--- a/examples/javascript/temperature.js
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load temperature module
-var upm = require('jsupm_temperature');
-
-// Create the temperature sensor object using AIO pin 0
-var temp = new upm.Temperature(0);
-console.log(temp.name());
-
-// Read the temperature ten times, printing both the Celsius and
-// equivalent Fahrenheit temperature, waiting one second between readings
-var i = 0;
-var waiting = setInterval(function() {
-        var celsius = temp.value();
-        var fahrenheit = celsius * 9.0/5.0 + 32.0;
-        console.log(celsius + " degrees Celsius, or " +
-            Math.round(fahrenheit) + " degrees Fahrenheit");
-        i++;
-        if (i == 10) clearInterval(waiting);
-        }, 1000);
diff --git a/examples/javascript/tex00.js b/examples/javascript/tex00.js
deleted file mode 100644
index e33cbb8..0000000
--- a/examples/javascript/tex00.js
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_tex00');
-
-
-/************** Main code **************/
-
-console.log("Initializing...");
-
-// Instantiate an TEX00 instance, using A0 for the analog input.  In
-// this example, we are using a 10K Ohm balance resistor and a TED
-// (10k type 2) thermistor.
-var sensor = new sensorObj.TEX00(0, 10000, 
-                                 sensorObj.TEX00.STYPE_THERMISTOR_TED);
-
-console.log("Minimum temperature:", sensor.getTemperatureRangeMin(),
-            "C");
-console.log("Maximum temperature:", sensor.getTemperatureRangeMax(),
-            "C");
-console.log("");
-
-// update and print available values every second
-setInterval(function()
-{
-    // update our values from the sensor
-    sensor.update();
-
-    if (sensor.isOutOfRange())
-    {
-        console.log("Temperature out of range");
-    }
-    else
-    {
-        // we show both C and F for temperature
-        console.log("Temperature:", sensor.getTemperature(),
-                    "C /", sensor.getTemperature(true), "F");
-    }
-
-    console.log("");
-
-}, 1000);
-
-
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/tm1637.js b/examples/javascript/tm1637.js
deleted file mode 100644
index 6220059..0000000
--- a/examples/javascript/tm1637.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
-* Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-// Some vars
-var colon = true;
-var interval;
-
-// Load display
-var tm1637 = require('jsupm_tm1637');
-
-// Instantiate on pins 0 (Clk) and 1 (Dio)
-var display = new tm1637.TM1637(0, 1);
-
-// Get the current time
-var now = new Date();
-console.log("System time: " + now.getHours() + ":" + ("0" + now.getMinutes()).slice(-2));
-console.log("Time zone can be changed by setting the TZ environment variable.");
-
-// Display and time update function
-function update(){
-    now = new Date();
-    var time = now.getHours().toString() + ("0" + now.getMinutes().toString()).slice(-2);
-    display.writeString(time);
-    display.setColon(colon = !colon);
-}
-
-// Start with a 7-segment encoded box on the display
-display.write(0x39, 0x09, 0x09, 0x0f);
-
-// Start displaying the clock after 3 seconds
-setTimeout(function(){
-    // And update every second thereafter
-    interval = setInterval(update, 1000);
-}, 3000)
-
-// Exit handler
-process.on('SIGINT', function()
-{
-    clearInterval(interval);
-    display = null;
-    tm1637.cleanUp();
-    tm1637 = null;
-    console.log("Interrupt received, exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/tp401.js b/examples/javascript/tp401.js
deleted file mode 100644
index 6ab2b29..0000000
--- a/examples/javascript/tp401.js
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Author: Mihai Tudor Panu <mihai.tudor.panu@intel.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var upmTP401 = require('jsupm_gas');
-//var time = require('sleep');
-
-//give a qualitative meaning to the value from the sensor
-function airQuality(value)
-{
-    if(value < 50) return "Fresh Air";
-    if(value < 200) return "Normal Indoor Air";
-    if(value < 400) return "Low Pollution";
-    if(value < 600) return "High Pollution - Action Recommended";
-    return "Very High Pollution - Take Action Immediately";
-}
-
-function loop()
-{
-    //read values (consecutive reads might vary slightly)
-    var value = airSensor.getSample();
-    var ppm = airSensor.getPPM();
-
-    //write the sensor values to the console
-    console.log("raw: " + value + " ppm: " + (" " + ppm.toFixed(2)).substring(-5, 5) + "   " + airQuality(value));
-
-    //wait 2.5 s then call function again
-    setTimeout(loop, 2500);
-}
-
-//setup sensor on Analog pin #0 (A0)
-var airSensor = new upmTP401.TP401(0);
-
-//warm up sensor
-console.log("Sensor is warming up for 3 minutes..");
-var i = 1;
-
-//print a message every passing minute
-var waiting = setInterval(function() {
-        console.log(i++ + " minute(s) passed.");
-        if(i == 3) clearInterval(waiting);
-    }, 60000);
-
-//start loop in 3 minutes
-setTimeout(function(){
-    console.log("Sensor is ready!");
-    loop();
-    }, 180000);
diff --git a/examples/javascript/tsl2561.js b/examples/javascript/tsl2561.js
deleted file mode 100644
index 2e32f2e..0000000
--- a/examples/javascript/tsl2561.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var digitalLightSensor = require('jsupm_tsl2561');
-
-// Instantiate a digital light sensor TSL2561 on I2C
-var myDigitalLightSensor = new digitalLightSensor.TSL2561();
-
-
-setInterval(function()
-{
-	console.log("Light value is " + myDigitalLightSensor.getLux());
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/ttp223.js b/examples/javascript/ttp223.js
deleted file mode 100644
index 8814556..0000000
--- a/examples/javascript/ttp223.js
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Author: Sarah Knepper <sarah.knepper@intel.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load TTP223 touch sensor module
-var sensorModule = require('jsupm_ttp223');
-
-// Create the TTP223 touch sensor object using GPIO pin 0
-var touch = new sensorModule.TTP223(0);
-
-// Check whether or not a finger is near the touch sensor and
-// print accordingly, waiting one second between readings
-function readSensorValue() {
-    if ( touch.isPressed() ) {
-        console.log(touch.name() + " is pressed");
-    } else {
-        console.log(touch.name() + " is not pressed");
-    }
-}
-setInterval(readSensorValue, 1000);
diff --git a/examples/javascript/tzemt400.js b/examples/javascript/tzemt400.js
deleted file mode 100644
index 6f56ab9..0000000
--- a/examples/javascript/tzemt400.js
+++ /dev/null
@@ -1,101 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_ozw');
-
-/************** Main code **************/
-var defaultDev = "/dev/ttyACM0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-console.log("Using device " + defaultDev);
-
-// Instantiate a TZEMT400 instance, on device node 13.  You will
-// almost certainly need to change this to reflect your own network.
-// Use the ozwdump example to see what nodes are available.
-var sensor = new sensorObj.TZEMT400(13);
-
-// The first thing to do is create options, then lock them when done.
-sensor.optionsCreate();
-sensor.optionsLock();
-
-// Next, initialize it.
-console.log("Initializing, this may take awhile depending on your ZWave network");
-
-sensor.init(defaultDev);
-console.log("Initialization complete");
-
-console.log("Querying data...");
-
-setInterval(function()
-{
-    sensor.update();
-
-    console.log("Temperature: "
-                + sensor.getTemperature()
-                + " C / "
-                + sensor.getTemperature(true)
-                + " F");
-
-    console.log("Mode: "
-                + sensor.getMode());
-
-    console.log("Operating State: "
-                + sensor.getOperatingState());
-
-    console.log("Heating Point: "
-                + sensor.getHeatingPointTemperature()
-                + " C / "
-                + sensor.getHeatingPointTemperature(true)
-                + " F");
-
-    console.log("Cooling Point: "
-                + sensor.getCoolingPointTemperature()
-                + " C / "
-                + sensor.getCoolingPointTemperature(true)
-                + " F");
-
-    console.log("Fan Mode: "
-                + sensor.getFanMode());
-
-    console.log("Fan State: "
-                + sensor.getFanState());
-
-    console.log();
-}, 5000);
-
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
diff --git a/examples/javascript/uln200xa.js b/examples/javascript/uln200xa.js
deleted file mode 100644
index edad56a..0000000
--- a/examples/javascript/uln200xa.js
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
-* Author:  Jon Trulson <jtrulson@ics.com>
-* Copyright (c) 2015-2016 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var Uln200xa_lib = require('jsupm_uln200xa');
-
-// Instantiate a Stepper motor on a ULN200XA Darlington Motor Driver
-// This was tested with the Grove Geared Step Motor with Driver
-
-// Instantiate a ULN2003XA stepper object
-var myUln200xa_obj = new Uln200xa_lib.ULN200XA(4096, 8, 9, 10, 11);
-
-myUln200xa_obj.goForward = function()
-{
-    myUln200xa_obj.setSpeed(5); // 5 RPMs
-    myUln200xa_obj.setDirection(Uln200xa_lib.ULN200XA_DIR_CW);
-    console.log("Rotating 1 revolution clockwise.");
-    myUln200xa_obj.stepperSteps(4096);
-};
-
-myUln200xa_obj.reverseDirection = function()
-{
-	console.log("Rotating 1/2 revolution counter clockwise.");
-	myUln200xa_obj.setDirection(Uln200xa_lib.ULN200XA_DIR_CCW);
-	myUln200xa_obj.stepperSteps(2048);
-};
-
-myUln200xa_obj.stop = function()
-{
-	myUln200xa_obj.release();
-};
-
-myUln200xa_obj.quit = function()
-{
-	myUln200xa_obj = null;
-	Uln200xa_lib.cleanUp();
-	Uln200xa_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-};
-
-// Run ULN200xa driven stepper
-myUln200xa_obj.goForward();
-setTimeout(myUln200xa_obj.reverseDirection, 2000);
-setTimeout(function()
-{
-	myUln200xa_obj.stop();
-	myUln200xa_obj.quit();
-}, 2000);
diff --git a/examples/javascript/ultrasonic.js b/examples/javascript/ultrasonic.js
deleted file mode 100644
index 49b63af..0000000
--- a/examples/javascript/ultrasonic.js
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Author: Jun Kato <i@junkato.jp>
- * Copyright (c) 2015 Jun Kato.
- *
- * Thanks to Seeed Studio for a working arduino sketch
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var ultrasonic = require("jsupm_ultrasonic");
-var sensor = new ultrasonic.UltraSonic(2);
-
-var myInterval = setInterval(function()
-{
-  var travelTime = sensor.getDistance();
-  if (travelTime > 0) {
-    var distance = (travelTime / 29 / 2).toFixed(3);
-    console.log("distance: " + distance + " [cm]");
-  }
-}, 200);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-  clearInterval(myInterval);
-  console.log("Exiting...");
-  process.exit(0);
-});
diff --git a/examples/javascript/urm37-uart.js b/examples/javascript/urm37-uart.js
deleted file mode 100644
index 7c76d1c..0000000
--- a/examples/javascript/urm37-uart.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_urm37');
-
-// Instantiate a URM37 sensor on UART 0, with the reset pin on D2
-var sensor = new sensorObj.URM37(0, 2);
-
-// Every half a second, sample the URM37 and output the measured
-// distance in cm, and temperature in degrees C
-
-setInterval(function()
-{
-    console.log("Detected distance (cm): " + sensor.getDistance());
-    console.log("Temperature (C): " + sensor.getTemperature());
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/urm37.js b/examples/javascript/urm37.js
deleted file mode 100644
index 09a5490..0000000
--- a/examples/javascript/urm37.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_urm37');
-
-// Instantiate a URM37 sensor on analog pin A0, reset pin on D2,
-// trigger pin on D3 with an analog reference voltage of 5.0
-var sensor = new sensorObj.URM37(0, 2, 3, 5.0);
-
-// Every half a second, sample the URM37 and output the measured
-// distance in cm.
-
-setInterval(function()
-{
-    console.log("Detected distance (cm): " + sensor.getDistance());
-}, 500);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/vcap.js b/examples/javascript/vcap.js
deleted file mode 100644
index 597d50e..0000000
--- a/examples/javascript/vcap.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2016 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_vcap');
-
-
-/************** Main code **************/
-
-var defaultDev = "/dev/video0";
-
-// if an argument was specified, use it as the device instead
-if (process.argv.length > 2)
-{
-    defaultDev = process.argv[2];
-}
-
-console.log("Using device " + defaultDev);
-console.log("Initializing...");
-
-// Instantiate an VCAP instance, using the specified video device
-var sensor = new sensorObj.VCAP(defaultDev);
-
-// enable some debug/verbose output
-sensor.setDebug(true);
-
-// This is just a hint.  The kernel can change this to a lower
-// resolution that the hardware supports.  Use getWidth() and
-// getHeight() methods to see what the kernel actually chose if you
-// care.
-sensor.setResolution(1920, 1080);
-
-// capture an image
-sensor.captureImage();
-
-// convert and save it as a jpeg
-sensor.saveImage("video-img1.jpg");
-
-// make sure we clean up
-sensor = null;
-sensorObj.cleanUp();
-sensorObj = null;
-console.log("Exiting...");
-process.exit(0);
-
diff --git a/examples/javascript/vdiv.js b/examples/javascript/vdiv.js
deleted file mode 100644
index bfb0a92..0000000
--- a/examples/javascript/vdiv.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var voltageDivider = require('jsupm_vdiv');
-// Instantiate a Voltage Divider sensor on analog pin A0
-var myVoltageDivider = new voltageDivider.VDiv(0);
-
-// collect data and output measured voltage according to the setting
-// of the scaling switch (3 or 10)
-var val, gain3val, gain10val;
-
-function getVoltageInfo() {
-    val = myVoltageDivider.value(100);
-    gain3val = myVoltageDivider.computedValue(3, val);
-    gain10val = myVoltageDivider.computedValue(10, val);
-    console.log("ADC value: " + val + " Gain 3: " + gain3val + "v Gain 10: " + gain10val + "v");
-}
-
-setInterval(getVoltageInfo, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function() {
-    myVoltageDivider = null;
-    voltageDivider.cleanUp();
-    voltageDivider = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/veml6070.js b/examples/javascript/veml6070.js
deleted file mode 100644
index 7715e10..0000000
--- a/examples/javascript/veml6070.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
-* Author: Abhishek Malik <abhishek.malik@intel.com>
-* Copyright (c) 2017 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var veml6070 = require("jsupm_veml6070");
-
-// Instantiate a Vishay UV sensor at bus 0
-var veml6070_sensor = new veml6070.VEML6070(0);
-
-var myInterval = setInterval(function()
-{
-	console.log("UV value: " + veml6070_sensor.getUVIntensity());
-}, 100);
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/water.js b/examples/javascript/water.js
deleted file mode 100644
index bf751e1..0000000
--- a/examples/javascript/water.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2014 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-// Load UPM module
-var waterSensor = require('jsupm_water');
-
-// Instantiate a Water sensor on digital pin D2
-var water = new waterSensor.Water(2);
-
-// Read whether the sensor is wet/dry, waiting one second between readings
-function readWaterState() {
-    if (water.isWet())
-        console.log("Sensor is wet");
-    else
-        console.log("Sensor is dry");
-}
-setInterval(readWaterState, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function() {
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/waterlevel.js b/examples/javascript/waterlevel.js
deleted file mode 100644
index 2182c04..0000000
--- a/examples/javascript/waterlevel.js
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var waterlevel_lib = require("jsupm_waterlevel");
-
-// The was tested with the Water Level Sensor
-// Instantiate a Water Level Sensor on digital pin D2
-var waterlevel_obj = new waterlevel_lib.WaterLevel(2);
-
-var myInterval = setInterval(function()
-{
-	if (waterlevel_obj.isSubmerged())
-		console.log("Sensor is submerged in liquid");
-	else
-		console.log("Liquid is below water level sensor");
-}, 1000);
-
-// When exiting: clear interval, clean up memory, and print message
-process.on('SIGINT', function()
-{
-	clearInterval(myInterval);
-	waterlevel_obj = null;
-	waterlevel_lib.cleanUp();
-	waterlevel_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-});
diff --git a/examples/javascript/wfs.js b/examples/javascript/wfs.js
deleted file mode 100644
index 4a7296d..0000000
--- a/examples/javascript/wfs.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Author: Zion Orent <zorent@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-var waterFlow_lib = require('jsupm_wfs');
-
-// Instantiate a Water Flow Sensor on digital pin D2.  This must be an
-// interrupt capable pin.
-var myWaterFlow_obj = new waterFlow_lib.WFS(2);
-
-// set the flow counter to 0 and start counting
-myWaterFlow_obj.clearFlowCounter();
-myWaterFlow_obj.startFlowCounter();
-
-
-var millis, flowCount, fr;
-var myInterval = setInterval(function() {
-    // we grab these (millis and flowCount) just for display
-    // purposes in this example
-    millis = myWaterFlow_obj.getMillis();
-    flowCount = myWaterFlow_obj.flowCounter();
-
-    fr = myWaterFlow_obj.flowRate();
-
-    // output milliseconds passed, flow count, and computed flow rate
-    outputStr = "Millis: " + millis + " Flow Count: " + flowCount +
-        " Flow Rate: " + fr + " LPM";
-    console.log(outputStr);
-
-    // best to gather data for at least one second for reasonable
-    // results.
-}, 2000);
-
-
-// When exiting: clear interval and print message
-process.on('SIGINT', function() {
-    clearInterval(myInterval);
-    myWaterFlow_obj.stopFlowCounter();
-    myWaterFlow_obj = null
-    waterFlow_lib.cleanUp();
-    waterFlow_lib = null;
-
-    console.log("Exiting");
-    process.exit(0);
-});
diff --git a/examples/javascript/wheelencoder.js b/examples/javascript/wheelencoder.js
deleted file mode 100644
index e8cbe01..0000000
--- a/examples/javascript/wheelencoder.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_wheelencoder');
-
-// Instantiate a DFRobot Wheel Encoder on digital pin D2
-var sensor = new sensorObj.WheelEncoder(2);
-
-// set the counter to 0 and start counting
-sensor.clearCounter();
-sensor.startCounter();
-
-setInterval(function()
-{
-    // output milliseconds passed and current sensor count
-    console.log("Millis: " + sensor.getMillis() + " Count: " + 
-                sensor.counter());
-}, 1000);
-
-// exit on ^C
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting.");
-    process.exit(0);
-});
-
diff --git a/examples/javascript/wt5001.js b/examples/javascript/wt5001.js
deleted file mode 100644
index 5ad82ee..0000000
--- a/examples/javascript/wt5001.js
+++ /dev/null
@@ -1,127 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var MP3Player = require('jsupm_wt5001');
-
-function printUsage(progname)
-{
-	console.log("Usage: node " + progname + " <command>");
-	console.log("Commands:");
-	console.log("0  - stop playing");
-	console.log("1  - start playing track 1");
-	console.log("2  - pause/un-pause playback");
-	console.log("3  - next track");
-	console.log("4  - previous track");
-}
-
-// Instantiate a WT5001 serial MP3 player on uart 0.
-// This example was tested on the Grove Serial MP3 module.
-
-var myMP3Player = new MP3Player.WT5001(0);
-
-var cmd = -1;
-if (process.argv.length > 2)
-	cmd = parseInt(process.argv[2]);
-
-if (!myMP3Player.setupTty(MP3Player.int_B9600))
-{
-	console.log("Failed to setup tty port parameters");
-	process.exit(0);
-}
-
-switch (cmd)
-{
-	case 0:
-		myMP3Player.stop();
-		break;
-
-	case 1:
-		myMP3Player.play(MP3Player.WT5001.SD, 1);
-		break;
-
-	case 2:
-		myMP3Player.pause();
-		break;
-
-	case 3:
-		myMP3Player.next();
-		break;
-
-	case 4:
-		myMP3Player.previous();
-		break;
-
-	default:
-		// nothing, just output usage, and info below
-		printUsage(process.argv[1]);
-		break;
-}
-
-// print out some information
-var vol = new MP3Player.uint8Array(0);
-myMP3Player.getVolume(vol);
-console.log("The current volume is: " + vol.getitem(0));
-
-var ps = new MP3Player.uint8Array(0);
-myMP3Player.getPlayState(ps);
-console.log("The current play state is: " + ps.getitem(0));
-
-var numf = new MP3Player.uint16Array(0);
-myMP3Player.getNumFiles(MP3Player.WT5001.SD, numf);
-console.log("The number of files on the SD card is: " + numf.getitem(0));
-
-var curf = new MP3Player.uint16Array(0);
-myMP3Player.getCurrentFile(curf);
-console.log("The current file is: " + curf.getitem(0));
-
-// set the date
-myMP3Player.setDate(2015, 3, 14);
-
-// set the time
-myMP3Player.setTime(9, 26, 53);
-
-var year = new MP3Player.uint16Array(0);
-var month = new MP3Player.uint8Array(0);
-var day = new MP3Player.uint8Array(0);
-myMP3Player.getDate(year, month, day);
-var mp3date = month.getitem(0) + "/";
-mp3date += (day.getitem(0) + "/");
-mp3date += year.getitem(0);
-console.log("The device date is: " + mp3date);
-
-var hour = new MP3Player.uint8Array(0);
-var minute = new MP3Player.uint8Array(0);
-var second = new MP3Player.uint8Array(0);
-myMP3Player.getTime(hour, minute, second);
-var mp3time = hour.getitem(0) + ":";
-mp3time += (minute.getitem(0) + ":");
-mp3time += second.getitem(0);
-console.log("The device time is: " + mp3time);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/xbee.js b/examples/javascript/xbee.js
deleted file mode 100644
index 7051ea5..0000000
--- a/examples/javascript/xbee.js
+++ /dev/null
@@ -1,137 +0,0 @@
-/*
- * Author: Jon Trulson <jtrulson@ics.com>
- * Copyright (c) 2015 Intel Corporation.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the
- * "Software"), to deal in the Software without restriction, including
- * without limitation the rights to use, copy, modify, merge, publish,
- * distribute, sublicense, and/or sell copies of the Software, and to
- * permit persons to whom the Software is furnished to do so, subject to
- * the following conditions:
- *
- * The above copyright notice and this permission notice shall be
- * included in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
- * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
- * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
- * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-var sensorObj = require('jsupm_xbee');
-
-
-/************** Functions **************/
-function printUsage(progname)
-{
-    var outputStr = "Usage: " + progname + " [AT command]\n\n" +
-	"If an argument is supplied on the command line, that argument is\n" +
-	"sent to the module and the response is printed out.\n\n" +
-	"If no argument is used, then the firmware revision, serial number\n" +
-	"and the current IP address (if set) are queried.\n\n"
-    console.log(outputStr);
-}
-
-// simple helper function to send a command and wait for a response
-function sendCommand(sensor, cmd)
-{
-    // commands need to be terminated with a carriage return
-    cmd += "\r";
-    sensor.writeDataStr(cmd);
-
-    var resp = "";
-    while (sensor.dataAvailable(2000))
-    {
-        resp += sensor.readDataStr(1024);
-    }
-
-    if (!resp) 
-    {
-        console.log("Timed out waiting for response");
-    }
-    else
-    {
-        resp = sensor.stringCR2LF(resp);
-        console.log("Returned (" + resp.length + " bytes):");
-        console.log(resp);
-    }
-}
-
-/************** Main code **************/
-// Instantiate a XBEE Module on UART 0
-var sensor = new sensorObj.XBee(0);
-
-// Set the baud rate, 9600 baud is the default.
-if (sensor.setBaudRate(9600))
-{
-    console.log("Failed to set baud rate");
-    process.exit(0);
-}
-
-printUsage(process.argv[1]);
-
-// Note: in nodeJS, command-line argument 0 is "node".
-// Command-line argument 1 is "xbee.js"
-// If you have a third argument, then it's a command
-if (process.argv.length > 2)
-{
-    // enable command mode
-    sensor.commandMode();
-    console.log("Sending command line argument (" + process.argv[2] + ")...");
-    sendCommand(sensor, process.argv[2]);
-}
-else
-{
-    // enable command mode
-    sensor.commandMode();
-    // query the verbose firmware revision
-    console.log("Querying verbose firmware revision (ATVL)...");
-    sendCommand(sensor, "ATVL");
-    // query the number
-    console.log("Querying Serial Number High (ATSH)...");
-    sendCommand(sensor, "ATSH");
-    console.log("Querying Serial Number Low (ATSL)...");
-    sendCommand(sensor, "ATSL");
-    
-    console.log("Querying address, if set (ATMY)...");
-    sendCommand(sensor, "ATMY");
-    
-    // For the XBee WiFi S6B
-    // A comprehensive list of commands and command modes is
-    // available from the datasheet at:
-    // ftp1.digi.com/support/documentation/90002180_L.pdf
-    
-    // For the XBee S1
-    // A comprehensive list of commands and command modes is
-    // available from the datasheet at:
-    // http://www.sparkfun.com/datasheets/Wireless/Zigbee/XBee-Datasheet.pdf
-    
-    // For the XBee WiFi module:
-    // An example using AT commands to connect to an AP, with a
-    // private Key using WPA2:
-    
-    // Connect to AP with SSID 'mySSID':
-    //  ATIDmySSID
-    
-    // Provide the private key 'secret':
-    //  ATPKsecret
-    
-    // Use WPA2 encryption
-    //  ATEE2
-}
-
-
-/************** Exit code **************/
-process.on('SIGINT', function()
-{
-    sensor = null;
-    sensorObj.cleanUp();
-    sensorObj = null;
-    console.log("Exiting...");
-    process.exit(0);
-});
diff --git a/examples/javascript/yg1006.js b/examples/javascript/yg1006.js
deleted file mode 100644
index b60ce5c..0000000
--- a/examples/javascript/yg1006.js
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2014 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-
-var flameSensor = require('jsupm_yg1006');
-
-// Instantiate a flame sensor on digital pin D2
-var myFlameSensor = new flameSensor.YG1006(2);
-
-// Check every second for the presence of a flame
-setInterval(function()
-{
-	if (myFlameSensor.flameDetected())
-		console.log("Flame detected.");
-	else
-		console.log("No flame detected.");
-}, 1000);
-
-// Print message when exiting
-process.on('SIGINT', function()
-{
-	console.log("Exiting...");
-	process.exit(0);
-});
diff --git a/examples/javascript/zfm20-register.js b/examples/javascript/zfm20-register.js
deleted file mode 100644
index dcbf297..0000000
--- a/examples/javascript/zfm20-register.js
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var fingerprint_lib = require('jsupm_zfm20');
-
-// Instantiate a ZFM20 Fingerprint reader on UART 0
-var myFingerprintSensor = new fingerprint_lib.ZFM20(0);
-
-// make sure port is initialized properly.  57600 baud is the default.
-if (!myFingerprintSensor.setupTty(fingerprint_lib.int_B57600))
-{
-	console.log("Failed to setup tty port parameters");
-	process.exit(1);
-}
-
-// This example demonstrates registering a fingerprint on the zfm20
-// module.  The procedure is as follows:
-//
-// 1. get an image, store it in characteristics buffer 1
-// 2. get another image, store it in characteristics buffer 2
-// 3. store the image, assuming the two fingerprints match
-
-// first, we need to register our address and password
-myFingerprintSensor.setPassword(fingerprint_lib.ZFM20_DEFAULT_PASSWORD);
-myFingerprintSensor.setAddress(fingerprint_lib.ZFM20_DEFAULT_ADDRESS);
-
-// now verify the password.  If this fails, any other commands
-// will be ignored, so we just bail.
-if (myFingerprintSensor.verifyPassword())
-	console.log("Password verified.");
-else
-{
-	console.log("Password verification failed.");
-	process.exit(1);
-}
-
-console.log(" ");
-
-// get the first image
-console.log("Place a finger on the sensor.");
-while (myFingerprintSensor.generateImage() != fingerprint_lib.ZFM20.ERR_OK)
-	;
-
-// in theory, we have an image
-console.log("Image captured, converting...");
-
-var rv = myFingerprintSensor.image2Tz(1);
-
-if (rv != fingerprint_lib.ZFM20.ERR_OK)
-{
-	console.log("Image conversion failed with error code " + rv);
-	process.exit(1)
-}
-
-console.log("Image conversion succeeded, remove finger.");
-setTimeout(function()
-{
-	while (myFingerprintSensor.generateImage() != fingerprint_lib.ZFM20.ERR_NO_FINGER)
-		;
-
-	console.log(" ");
-	console.log("Now place the same finger on the sensor.");
-
-	while (myFingerprintSensor.generateImage() == fingerprint_lib.ZFM20.ERR_NO_FINGER)
-		;
-
-	console.log("Image captured, converting...");
-
-	// save this one in slot 2
-	rv = myFingerprintSensor.image2Tz(2)
-	if (rv != fingerprint_lib.ZFM20.ERR_OK)
-	{
-		console.log("Image conversion failed with error code %d" + rv);
-		process.exit(1);
-	}
-
-	console.log("Image conversion succeeded, remove finger.");
-	console.log(" ");
-
-	console.log("Storing fingerprint at id 1");
-
-	// create the model
-	rv = myFingerprintSensor.createModel()
-	if (rv != fingerprint_lib.ZFM20.ERR_OK)
-	{
-		if (rv == fingerprint_lib.ZFM20.ERR_FP_ENROLLMISMATCH)
-			console.log("Fingerprints did not match.");
-		else
-			console.log("createModel failed with error code " + rv);
-		process.exit(1);
-	}
-
-	// now store it, we hard code the id (second arg) to 1 here
-	rv = myFingerprintSensor.storeModel(1, 1);
-	if (rv != fingerprint_lib.ZFM20.ERR_OK)
-	{
-		console.log("storeModel failed with error code " + rv);
-		process.exit(1);
-	}
-
-	console.log(" ");
-	console.log("Fingerprint stored at id 1.");
-}, 1000);
-
-// Print message when exiting
-function exit()
-{
-	myFingerprintSensor = null;
-	fingerprint_lib.cleanUp();
-	fingerprint_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-}
-process.on('exit', exit);
-process.on('SIGINT', exit);
diff --git a/examples/javascript/zfm20.js b/examples/javascript/zfm20.js
deleted file mode 100644
index 1369702..0000000
--- a/examples/javascript/zfm20.js
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
-* Author: Zion Orent <zorent@ics.com>
-* Copyright (c) 2015 Intel Corporation.
-*
-* Permission is hereby granted, free of charge, to any person obtaining
-* a copy of this software and associated documentation files (the
-* "Software"), to deal in the Software without restriction, including
-* without limitation the rights to use, copy, modify, merge, publish,
-* distribute, sublicense, and/or sell copies of the Software, and to
-* permit persons to whom the Software is furnished to do so, subject to
-* the following conditions:
-*
-* The above copyright notice and this permission notice shall be
-* included in all copies or substantial portions of the Software.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*/
-var fingerprint_lib = require('jsupm_zfm20');
-
-// Instantiate a ZFM20 Fingerprint reader on UART 0
-var myFingerprintSensor = new fingerprint_lib.ZFM20(0);
-
-// make sure port is initialized properly.  57600 baud is the default.
-if (!myFingerprintSensor.setupTty(fingerprint_lib.int_B57600))
-{
-	console.log("Failed to setup tty port parameters");
-	process.exit(1);
-}
-
-// how many valid stored templates (fingerprints) do we have?
-console.log("Total stored templates: " + myFingerprintSensor.getNumTemplates());
-console.log(" ");
-
-// now spin waiting for a fingerprint to successfully image
-console.log("Waiting for finger print...");
-
-while (myFingerprintSensor.generateImage() == fingerprint_lib.ZFM20.ERR_NO_FINGER)
-	;
-
-// in theory, we have an image
-console.log("Image captured, converting...");
-
-var rv = myFingerprintSensor.image2Tz(1);
-if (rv != fingerprint_lib.ZFM20.ERR_OK)
-{
-	console.log("Image conversion failed with error code " + rv);
-	process.exit(1);
-}
-
-console.log("Image conversion succeeded.");
-console.log("Searching database...");
-
-var myid = new fingerprint_lib.uint16Array(0);
-myid.setitem(0, 0);
-var myscore = new fingerprint_lib.uint16Array(0);
-myscore.setitem(0, 0);
-
-// we search for a print matching slot 1, where we stored our last
-// converted fingerprint
-rv = myFingerprintSensor.search(1, myid, myscore)
-if (rv != fingerprint_lib.ZFM20.ERR_OK)
-{
-	if (rv == fingerprint_lib.ZFM20.ERR_FP_NOTFOUND)
-	{
-		console.log("Finger Print not found");
-		process.exit(0);
-	}
-	else
-	{
-		console.log("Search failed with error code " + rv);
-		process.exit(1);
-	}
-}
-
-console.log("Fingerprint found!");
-console.log("ID: " + myid.getitem(0) + ", Score: " + myscore.getitem(0));
-
-
-// Print message when exiting
-function exit()
-{
-	myFingerprintSensor = null;
-	fingerprint_lib.cleanUp();
-	fingerprint_lib = null;
-	console.log("Exiting");
-	process.exit(0);
-}
-process.on('SIGINT', exit);
-process.on('exit', exit);
-- 
2.7.4

